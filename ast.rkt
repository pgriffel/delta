#lang racket

;; Generated code for Delta module 'ast' 

(require delta/runtime)
(require delta/standard)
(require "scheme_ast.rkt")
(require "location.rkt")
(require "config.rkt")

(provide d_make_module d_module_name d_module_includes d_module_definitions d_make_definition d_definition_name d_definition_body d_definition_is_public d_is_procedure_definition d_scheme_string d_pretty d_node_range d_scope_violations d_assigned d_is_do d_is_procedure d_make_constant d_make_variable d_make_abstraction d_make_application d_make_operation d_make_unary_operation d_make_if d_make_do d_make_while d_make_try d_make_let d_make_state_deref)

(define d_make_module (lambda (l_p1112 l_d1113 l_l1114 l_x l_y l_z) (let ((l_s1111 (state (quote l_x) l_x (quote l_y) l_y (quote l_z) l_z))) (let ((l_s1115 (singleton-state (quote l_name) (lookup (quote l_x) l_s1111)))) (let ((l_s1116 (merge-state l_s1111 l_s1115))) (let ((l_s1117 (let ((l_t1136 l_s1115)) (let ((l_p1137 l_p1112)) (if l_p1137 (merge-state l_p1137 (if l_d1113 (empty-state) l_t1136)) (if l_d1113 (empty-state) l_t1136)))))) (let ((l_s1122 (singleton-state (quote l_includes) (lookup (quote l_y) l_s1116)))) (let ((l_s1123 (merge-state l_s1116 l_s1122))) (let ((l_s1124 (let ((l_t1134 l_s1122)) (let ((l_p1135 l_s1117)) (if l_p1135 (merge-state l_p1135 (if l_d1113 (empty-state) l_t1134)) (if l_d1113 (empty-state) l_t1134)))))) (let ((l_t1131 (let ((l_t1132 (singleton-state (quote l_elements) (lookup (quote l_z) l_s1123)))) (let ((l_p1133 l_s1124)) (if l_p1133 (merge-state l_p1133 (if l_d1113 (empty-state) l_t1132)) (if l_d1113 (empty-state) l_t1132)))))) (if l_l1114 (leave-collective l_l1114 l_t1131) l_t1131)))))))))))

(define d_module_name (lambda (l_p1141 l_d1142 l_l1143 l_x) (let ((l_s1140 (state (quote l_x) l_x))) (let ((l_t1146 (let ((l_t1147 (lookup (quote l_name) (lookup (quote l_x) l_s1140)))) (let ((l_p1148 l_p1141)) (if l_p1148 (merge-state l_p1148 (if l_d1142 (empty-state) l_t1147)) (if l_d1142 (empty-state) l_t1147)))))) (if l_l1143 (leave-collective l_l1143 l_t1146) l_t1146)))))

(define d_module_includes (lambda (l_p1152 l_d1153 l_l1154 l_x) (let ((l_s1151 (state (quote l_x) l_x))) (let ((l_t1157 (let ((l_t1158 (lookup (quote l_includes) (lookup (quote l_x) l_s1151)))) (let ((l_p1159 l_p1152)) (if l_p1159 (merge-state l_p1159 (if l_d1153 (empty-state) l_t1158)) (if l_d1153 (empty-state) l_t1158)))))) (if l_l1154 (leave-collective l_l1154 l_t1157) l_t1157)))))

(define d_module_definitions (lambda (l_p1163 l_d1164 l_l1165 l_x) (let ((l_s1162 (state (quote l_x) l_x))) (let ((l_t1168 (let ((l_t1169 (lookup (quote l_elements) (lookup (quote l_x) l_s1162)))) (let ((l_p1170 l_p1163)) (if l_p1170 (merge-state l_p1170 (if l_d1164 (empty-state) l_t1169)) (if l_d1164 (empty-state) l_t1169)))))) (if l_l1165 (leave-collective l_l1165 l_t1168) l_t1168)))))

(define d_make_definition (lambda (l_p1965 l_d1966 l_l1967 l_x l_y l_z) (let ((l_s1964 (state (quote l_x) l_x (quote l_y) l_y (quote l_z) l_z))) (let ((l_s1968 (singleton-state (quote l_name) (lookup (quote l_x) l_s1964)))) (let ((l_s1969 (merge-state l_s1964 l_s1968))) (let ((l_s1970 (let ((l_t1989 l_s1968)) (let ((l_p1990 l_p1965)) (if l_p1990 (merge-state l_p1990 (if l_d1966 (empty-state) l_t1989)) (if l_d1966 (empty-state) l_t1989)))))) (let ((l_s1975 (singleton-state (quote l_body) (lookup (quote l_y) l_s1969)))) (let ((l_s1976 (merge-state l_s1969 l_s1975))) (let ((l_s1977 (let ((l_t1987 l_s1975)) (let ((l_p1988 l_s1970)) (if l_p1988 (merge-state l_p1988 (if l_d1966 (empty-state) l_t1987)) (if l_d1966 (empty-state) l_t1987)))))) (let ((l_t1984 (let ((l_t1985 (singleton-state (quote l_is_public) (lookup (quote l_z) l_s1976)))) (let ((l_p1986 l_s1977)) (if l_p1986 (merge-state l_p1986 (if l_d1966 (empty-state) l_t1985)) (if l_d1966 (empty-state) l_t1985)))))) (if l_l1967 (leave-collective l_l1967 l_t1984) l_t1984)))))))))))

(define d_definition_name (lambda (l_p1994 l_d1995 l_l1996 l_x) (let ((l_s1993 (state (quote l_x) l_x))) (let ((l_t1999 (let ((l_t2000 (lookup (quote l_name) (lookup (quote l_x) l_s1993)))) (let ((l_p2001 l_p1994)) (if l_p2001 (merge-state l_p2001 (if l_d1995 (empty-state) l_t2000)) (if l_d1995 (empty-state) l_t2000)))))) (if l_l1996 (leave-collective l_l1996 l_t1999) l_t1999)))))

(define d_definition_body (lambda (l_p2005 l_d2006 l_l2007 l_x) (let ((l_s2004 (state (quote l_x) l_x))) (let ((l_t2010 (let ((l_t2011 (lookup (quote l_body) (lookup (quote l_x) l_s2004)))) (let ((l_p2012 l_p2005)) (if l_p2012 (merge-state l_p2012 (if l_d2006 (empty-state) l_t2011)) (if l_d2006 (empty-state) l_t2011)))))) (if l_l2007 (leave-collective l_l2007 l_t2010) l_t2010)))))

(define d_definition_is_public (lambda (l_p2016 l_d2017 l_l2018 l_x) (let ((l_s2015 (state (quote l_x) l_x))) (let ((l_t2021 (let ((l_t2022 (lookup (quote l_is_public) (lookup (quote l_x) l_s2015)))) (let ((l_p2023 l_p2016)) (if l_p2023 (merge-state l_p2023 (if l_d2017 (empty-state) l_t2022)) (if l_d2017 (empty-state) l_t2022)))))) (if l_l2018 (leave-collective l_l2018 l_t2021) l_t2021)))))

(define d_is_procedure_definition (lambda (l_p2027 l_d2028 l_l2029 l_x) (let ((l_s2026 (state (quote l_x) l_x))) (d_is_procedure l_p2027 l_d2028 l_l2029 (d_definition_body #f #f #f (lookup (quote l_x) l_s2026))))))

(define d_scheme_string (lambda (l_p2035 l_d2036 l_l2037 l_x) (let ((l_s2034 (state (quote l_x) l_x))) (let ((l_t2044 (let ((l_t2045 (d_format "$exp" (singleton-state (quote l_exp) (d_gen_scheme_code #f #f #f (lookup (quote l_x) l_s2034) (d_scheme_empty_state #f #f #f)))))) (let ((l_p2046 l_p2035)) (if l_p2046 (merge-state l_p2046 (if l_d2036 (empty-state) l_t2045)) (if l_d2036 (empty-state) l_t2045)))))) (if l_l2037 (leave-collective l_l2037 l_t2044) l_t2044)))))

(define d_pretty (lambda (l_p2050 l_d2051 l_l2052 l_x) (let ((l_s2049 (state (quote l_x) l_x))) (d_apply l_p2050 l_d2051 l_l2052 (lookup (quote l_pretty) (lookup (quote l_x) l_s2049)) (d_tuple (lookup (quote l_x) l_s2049))))))

(define d_gen_scheme_code (lambda (l_p2064 l_d2065 l_l2066 l_exp l_state) (let ((l_s2063 (state (quote l_exp) l_exp (quote l_state) l_state))) (d_scheme_code l_p2064 l_d2065 l_l2066 (lookup (quote l_exp) l_s2063) (lookup (quote l_state) l_s2063) (d_scheme_false #f #f #f) (d_scheme_false #f #f #f) (d_scheme_false #f #f #f)))))

(define d_scheme_code (lambda (l_p2074 l_d2075 l_l2076 l_exp l_state l_prior l_doing l_link) (let ((l_s2073 (state (quote l_exp) l_exp (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link))) (d_apply l_p2074 l_d2075 l_l2076 (lookup (quote l_scheme_code) (lookup (quote l_exp) l_s2073)) (d_tuple (lookup (quote l_exp) l_s2073) (lookup (quote l_state) l_s2073) (lookup (quote l_prior) l_s2073) (lookup (quote l_doing) l_s2073) (lookup (quote l_link) l_s2073))))))

(define d_node_range (lambda (l_p2096 l_d2097 l_l2098 l_x) (let ((l_s2095 (state (quote l_x) l_x))) (let ((l_t2101 (let ((l_t2102 (lookup (quote l_range) (lookup (quote l_x) l_s2095)))) (let ((l_p2103 l_p2096)) (if l_p2103 (merge-state l_p2103 (if l_d2097 (empty-state) l_t2102)) (if l_d2097 (empty-state) l_t2102)))))) (if l_l2098 (leave-collective l_l2098 l_t2101) l_t2101)))))

(define d_scope_violations (lambda (l_p2107 l_d2108 l_l2109 l_x l_locals l_globals) (let ((l_s2106 (state (quote l_x) l_x (quote l_locals) l_locals (quote l_globals) l_globals))) (d_apply l_p2107 l_d2108 l_l2109 (lookup (quote l_scope_violations) (lookup (quote l_x) l_s2106)) (d_tuple (lookup (quote l_x) l_s2106) (lookup (quote l_locals) l_s2106) (lookup (quote l_globals) l_s2106))))))

(define d_assigned (lambda (l_p2125 l_d2126 l_l2127 l_x l_certain l_globals) (let ((l_s2124 (state (quote l_x) l_x (quote l_certain) l_certain (quote l_globals) l_globals))) (d_apply l_p2125 l_d2126 l_l2127 (lookup (quote l_assigned) (lookup (quote l_x) l_s2124)) (d_tuple (lookup (quote l_x) l_s2124) (lookup (quote l_certain) l_s2124) (lookup (quote l_globals) l_s2124))))))

(define d_is_do (lambda (l_p2143 l_d2144 l_l2145 l_x) (let ((l_s2142 (state (quote l_x) l_x))) (d_apply l_p2143 l_d2144 l_l2145 (lookup (quote l_is_do) (lookup (quote l_x) l_s2142)) (d_tuple (lookup (quote l_x) l_s2142))))))

(define d_is_procedure (lambda (l_p2157 l_d2158 l_l2159 l_x) (let ((l_s2156 (state (quote l_x) l_x))) (d_apply l_p2157 l_d2158 l_l2159 (lookup (quote l_is_procedure) (lookup (quote l_x) l_s2156)) (d_tuple (lookup (quote l_x) l_s2156))))))

(define d_make_constant (lambda (l_p2171 l_d2172 l_l2173 l_x l_y l_z) (let ((l_s2170 (state (quote l_x) l_x (quote l_y) l_y (quote l_z) l_z))) (let ((l_s2174 (singleton-state (quote l_value) (lookup (quote l_x) l_s2170)))) (let ((l_s2175 (merge-state l_s2170 l_s2174))) (let ((l_s2176 (let ((l_t3607 l_s2174)) (let ((l_p3608 l_p2171)) (if l_p3608 (merge-state l_p3608 (if l_d2172 (empty-state) l_t3607)) (if l_d2172 (empty-state) l_t3607)))))) (let ((l_s2181 (singleton-state (quote l_kind) (lookup (quote l_y) l_s2175)))) (let ((l_s2182 (merge-state l_s2175 l_s2181))) (let ((l_s2183 (let ((l_t3605 l_s2181)) (let ((l_p3606 l_s2176)) (if l_p3606 (merge-state l_p3606 (if l_d2172 (empty-state) l_t3605)) (if l_d2172 (empty-state) l_t3605)))))) (let ((l_s2188 (singleton-state (quote l_range) (lookup (quote l_z) l_s2182)))) (let ((l_s2189 (merge-state l_s2182 l_s2188))) (let ((l_s2190 (let ((l_t3603 l_s2188)) (let ((l_p3604 l_s2183)) (if l_p3604 (merge-state l_p3604 (if l_d2172 (empty-state) l_t3603)) (if l_d2172 (empty-state) l_t3603)))))) (let ((l_s2195 (singleton-state (quote l_is_do) (lambda (l_p2199 l_d2200 l_l2201 l_this) (let ((l_s2198 (merge-state l_s2189 (state (quote l_this) l_this)))) (let ((l_t2202 (let ((l_t2203 #f)) (let ((l_p2204 l_p2199)) (if l_p2204 (merge-state l_p2204 (if l_d2200 (empty-state) l_t2203)) (if l_d2200 (empty-state) l_t2203)))))) (if l_l2201 (leave-collective l_l2201 l_t2202) l_t2202))))))) (let ((l_s2196 (merge-state l_s2189 l_s2195))) (let ((l_s2197 (let ((l_t3601 l_s2195)) (let ((l_p3602 l_s2190)) (if l_p3602 (merge-state l_p3602 (if l_d2172 (empty-state) l_t3601)) (if l_d2172 (empty-state) l_t3601)))))) (let ((l_s2207 (singleton-state (quote l_is_procedure) (lambda (l_p2211 l_d2212 l_l2213 l_this) (let ((l_s2210 (merge-state l_s2196 (state (quote l_this) l_this)))) (let ((l_t2214 (let ((l_t2215 #f)) (let ((l_p2216 l_p2211)) (if l_p2216 (merge-state l_p2216 (if l_d2212 (empty-state) l_t2215)) (if l_d2212 (empty-state) l_t2215)))))) (if l_l2213 (leave-collective l_l2213 l_t2214) l_t2214))))))) (let ((l_s2208 (merge-state l_s2196 l_s2207))) (let ((l_s2209 (let ((l_t3599 l_s2207)) (let ((l_p3600 l_s2197)) (if l_p3600 (merge-state l_p3600 (if l_d2172 (empty-state) l_t3599)) (if l_d2172 (empty-state) l_t3599)))))) (let ((l_s2219 (singleton-state (quote l_assigned) (lambda (l_p2223 l_d2224 l_l2225 l_this l_certain l_globals) (let ((l_s2222 (merge-state l_s2208 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (let ((l_t2226 (let ((l_t2227 (d_empty_list))) (let ((l_p2228 l_p2223)) (if l_p2228 (merge-state l_p2228 (if l_d2224 (empty-state) l_t2227)) (if l_d2224 (empty-state) l_t2227)))))) (if l_l2225 (leave-collective l_l2225 l_t2226) l_t2226))))))) (let ((l_s2220 (merge-state l_s2208 l_s2219))) (let ((l_s2221 (let ((l_t3597 l_s2219)) (let ((l_p3598 l_s2209)) (if l_p3598 (merge-state l_p3598 (if l_d2172 (empty-state) l_t3597)) (if l_d2172 (empty-state) l_t3597)))))) (let ((l_s2231 (singleton-state (quote l_scope_violations) (lambda (l_p2235 l_d2236 l_l2237 l_this l_locals l_globals) (let ((l_s2234 (merge-state l_s2220 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (let ((l_t2238 (let ((l_t2239 (d_empty_list))) (let ((l_p2240 l_p2235)) (if l_p2240 (merge-state l_p2240 (if l_d2236 (empty-state) l_t2239)) (if l_d2236 (empty-state) l_t2239)))))) (if l_l2237 (leave-collective l_l2237 l_t2238) l_t2238))))))) (let ((l_s2232 (merge-state l_s2220 l_s2231))) (let ((l_s2233 (let ((l_t3595 l_s2231)) (let ((l_p3596 l_s2221)) (if l_p3596 (merge-state l_p3596 (if l_d2172 (empty-state) l_t3595)) (if l_d2172 (empty-state) l_t3595)))))) (let ((l_s2243 (singleton-state (quote l_scheme_code) (lambda (l_p2247 l_d2248 l_l2249 l_this l_state l_prior l_doing l_link) (let ((l_s2246 (merge-state l_s2232 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (let ((l_s2250 (merge-state l_s2246 (singleton-state (quote l_value) (if (equal? (lookup (quote l_kind) (lookup (quote l_this) l_s2246)) "string") (d_scheme_atom #f #f #f (d_format "$c$v$c" (let ((l_s2261 (singleton-state (quote l_v) (lookup (quote l_value) (lookup (quote l_this) l_s2246))))) (let ((l_s2262 (merge-state l_s2246 l_s2261))) (let ((l_s2263 l_s2261)) (merge-state (or l_s2263 (empty-state)) (singleton-state (quote l_c) #\"))))))) (if (equal? (lookup (quote l_kind) (lookup (quote l_this) l_s2246)) "character") (if (equal? (lookup (quote l_value) (lookup (quote l_this) l_s2246)) "eof") (d_scheme_atom #f #f #f "eof") (d_scheme_atom #f #f #f (d_format "#$c$v" (let ((l_s3438 (singleton-state (quote l_v) (lookup (quote l_value) (lookup (quote l_this) l_s2246))))) (let ((l_s3439 (merge-state l_s2246 l_s3438))) (let ((l_s3440 l_s3438)) (merge-state (or l_s3440 (empty-state)) (singleton-state (quote l_c) #\\)))))))) (if (equal? (lookup (quote l_kind) (lookup (quote l_this) l_s2246)) "Boole") (if (equal? (lookup (quote l_value) (lookup (quote l_this) l_s2246)) "true") (d_scheme_true #f #f #f) (if (equal? (lookup (quote l_value) (lookup (quote l_this) l_s2246)) "false") (d_scheme_false #f #f #f) (d_throw (d_format "Value $x is not a valid Boole contant" (singleton-state (quote l_x) (lookup (quote l_value) l_s2246)))))) (if (equal? (lookup (quote l_kind) (lookup (quote l_this) l_s2246)) "number") (d_scheme_atom #f #f #f (lookup (quote l_value) (lookup (quote l_this) l_s2246))) (d_throw (d_format "Kind $x is not a valid contant" (singleton-state (quote l_x) (lookup (quote l_kind) (lookup (quote l_this) l_s2246))))))))))))) (d_result_code l_p2247 l_d2248 l_l2249 (lookup (quote l_value) l_s2250) (lookup (quote l_prior) l_s2250) (lookup (quote l_doing) l_s2250) (lookup (quote l_link) l_s2250)))))))) (let ((l_s2244 (merge-state l_s2232 l_s2243))) (let ((l_s2245 (let ((l_t3593 l_s2243)) (let ((l_p3594 l_s2233)) (if l_p3594 (merge-state l_p3594 (if l_d2172 (empty-state) l_t3593)) (if l_d2172 (empty-state) l_t3593)))))) (let ((l_t3590 (let ((l_t3591 (singleton-state (quote l_pretty) (lambda (l_p3526 l_d3527 l_l3528 l_this) (let ((l_s3525 (merge-state l_s2244 (state (quote l_this) l_this)))) (if (equal? (lookup (quote l_kind) (lookup (quote l_this) l_s3525)) "string") (let ((l_t3554 (let ((l_t3555 (d_format "$c$v$c" (let ((l_s3539 (singleton-state (quote l_v) (lookup (quote l_value) (lookup (quote l_this) l_s3525))))) (let ((l_s3540 (merge-state l_s3525 l_s3539))) (let ((l_s3541 l_s3539)) (merge-state (or l_s3541 (empty-state)) (singleton-state (quote l_c) #\")))))))) (let ((l_p3556 l_p3526)) (if l_p3556 (merge-state l_p3556 (if l_d3527 (empty-state) l_t3555)) (if l_d3527 (empty-state) l_t3555)))))) (if l_l3528 (leave-collective l_l3528 l_t3554) l_t3554)) (if (equal? (lookup (quote l_kind) (lookup (quote l_this) l_s3525)) "character") (let ((l_t3582 (let ((l_t3583 (d_format "$c$v" (let ((l_s3567 (singleton-state (quote l_v) (lookup (quote l_value) (lookup (quote l_this) l_s3525))))) (let ((l_s3568 (merge-state l_s3525 l_s3567))) (let ((l_s3569 l_s3567)) (merge-state (or l_s3569 (empty-state)) (singleton-state (quote l_c) #\\)))))))) (let ((l_p3584 l_p3526)) (if l_p3584 (merge-state l_p3584 (if l_d3527 (empty-state) l_t3583)) (if l_d3527 (empty-state) l_t3583)))))) (if l_l3528 (leave-collective l_l3528 l_t3582) l_t3582)) (let ((l_t3587 (let ((l_t3588 (lookup (quote l_value) (lookup (quote l_this) l_s3525)))) (let ((l_p3589 l_p3526)) (if l_p3589 (merge-state l_p3589 (if l_d3527 (empty-state) l_t3588)) (if l_d3527 (empty-state) l_t3588)))))) (if l_l3528 (leave-collective l_l3528 l_t3587) l_t3587))))))))) (let ((l_p3592 l_s2245)) (if l_p3592 (merge-state l_p3592 (if l_d2172 (empty-state) l_t3591)) (if l_d2172 (empty-state) l_t3591)))))) (if l_l2173 (leave-collective l_l2173 l_t3590) l_t3590)))))))))))))))))))))))))))))

(define d_make_variable (lambda (l_p3612 l_d3613 l_l3614 l_x l_y l_z) (let ((l_s3611 (state (quote l_x) l_x (quote l_y) l_y (quote l_z) l_z))) (let ((l_s3615 (singleton-state (quote l_name) (lookup (quote l_x) l_s3611)))) (let ((l_s3616 (merge-state l_s3611 l_s3615))) (let ((l_s3617 (let ((l_t5101 l_s3615)) (let ((l_p5102 l_p3612)) (if l_p5102 (merge-state l_p5102 (if l_d3613 (empty-state) l_t5101)) (if l_d3613 (empty-state) l_t5101)))))) (let ((l_s3622 (singleton-state (quote l_is_global) (lookup (quote l_y) l_s3616)))) (let ((l_s3623 (merge-state l_s3616 l_s3622))) (let ((l_s3624 (let ((l_t5099 l_s3622)) (let ((l_p5100 l_s3617)) (if l_p5100 (merge-state l_p5100 (if l_d3613 (empty-state) l_t5099)) (if l_d3613 (empty-state) l_t5099)))))) (let ((l_s3629 (singleton-state (quote l_range) (lookup (quote l_z) l_s3623)))) (let ((l_s3630 (merge-state l_s3623 l_s3629))) (let ((l_s3631 (let ((l_t5097 l_s3629)) (let ((l_p5098 l_s3624)) (if l_p5098 (merge-state l_p5098 (if l_d3613 (empty-state) l_t5097)) (if l_d3613 (empty-state) l_t5097)))))) (let ((l_s3636 (singleton-state (quote l_is_do) (lambda (l_p3640 l_d3641 l_l3642 l_this) (let ((l_s3639 (merge-state l_s3630 (state (quote l_this) l_this)))) (let ((l_t3643 (let ((l_t3644 #f)) (let ((l_p3645 l_p3640)) (if l_p3645 (merge-state l_p3645 (if l_d3641 (empty-state) l_t3644)) (if l_d3641 (empty-state) l_t3644)))))) (if l_l3642 (leave-collective l_l3642 l_t3643) l_t3643))))))) (let ((l_s3637 (merge-state l_s3630 l_s3636))) (let ((l_s3638 (let ((l_t5095 l_s3636)) (let ((l_p5096 l_s3631)) (if l_p5096 (merge-state l_p5096 (if l_d3613 (empty-state) l_t5095)) (if l_d3613 (empty-state) l_t5095)))))) (let ((l_s3648 (singleton-state (quote l_is_procedure) (lambda (l_p3652 l_d3653 l_l3654 l_this) (let ((l_s3651 (merge-state l_s3637 (state (quote l_this) l_this)))) (let ((l_t3655 (let ((l_t3656 #f)) (let ((l_p3657 l_p3652)) (if l_p3657 (merge-state l_p3657 (if l_d3653 (empty-state) l_t3656)) (if l_d3653 (empty-state) l_t3656)))))) (if l_l3654 (leave-collective l_l3654 l_t3655) l_t3655))))))) (let ((l_s3649 (merge-state l_s3637 l_s3648))) (let ((l_s3650 (let ((l_t5093 l_s3648)) (let ((l_p5094 l_s3638)) (if l_p5094 (merge-state l_p5094 (if l_d3613 (empty-state) l_t5093)) (if l_d3613 (empty-state) l_t5093)))))) (let ((l_s3660 (singleton-state (quote l_assigned) (lambda (l_p3664 l_d3665 l_l3666 l_this l_certain l_globals) (let ((l_s3663 (merge-state l_s3649 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (if (equal? (lookup (quote l_name) (lookup (quote l_this) l_s3663)) "skip") (let ((l_t3675 (let ((l_t3676 (d_empty_list))) (let ((l_p3677 l_p3664)) (if l_p3677 (merge-state l_p3677 (if l_d3665 (empty-state) l_t3676)) (if l_d3665 (empty-state) l_t3676)))))) (if l_l3666 (leave-collective l_l3666 l_t3675) l_t3675)) (d_throw_with_range l_p3664 l_d3665 l_l3666 "Cannot use a variable as a statement becaues this makes the state statically uncertain." (empty-state) (lookup (quote l_range) (lookup (quote l_this) l_s3663))))))))) (let ((l_s3661 (merge-state l_s3649 l_s3660))) (let ((l_s3662 (let ((l_t5091 l_s3660)) (let ((l_p5092 l_s3650)) (if l_p5092 (merge-state l_p5092 (if l_d3613 (empty-state) l_t5091)) (if l_d3613 (empty-state) l_t5091)))))) (let ((l_s3688 (singleton-state (quote l_scope_violations) (lambda (l_p3692 l_d3693 l_l3694 l_this l_locals l_globals) (let ((l_s3691 (merge-state l_s3661 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (if (if (lookup (quote l_is_global) (lookup (quote l_this) l_s3691)) (if (d_is_primitive #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s3691))) #t (if (d_is_standard #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s3691))) #t (let ((l_s3711 (merge-state l_s3691 (let ((l_s3712 (singleton-state (quote l_unsearched) (lookup (quote l_globals) l_s3691)))) (let ((l_s3713 (merge-state l_s3691 l_s3712))) (let ((l_s3714 l_s3712)) (let ((l_s3719 (empty-state))) (let ((l_s3720 l_s3713)) (begin (while (if (d_not_equal (lookup (quote l_unsearched) l_s3720) (d_empty_list)) (d_not_equal (d_definition_name #f #f #f (d_first (lookup (quote l_unsearched) l_s3720))) (lookup (quote l_name) (lookup (quote l_this) l_s3720))) #f) (let ((l_s3721 (singleton-state (quote l_unsearched) (d_rest (lookup (quote l_unsearched) l_s3720))))) (begin (set! l_s3719 (merge-state l_s3719 l_s3721)) (set! l_s3720 (merge-state l_s3720 l_s3721))))) (merge-state (or l_s3714 (empty-state)) l_s3719)))))))))) (d_not_equal (lookup (quote l_unsearched) l_s3711) (d_empty_list))))) (d_is_member #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s3691)) (lookup (quote l_locals) l_s3691))) (let ((l_t3762 (let ((l_t3763 (d_empty_list))) (let ((l_p3764 l_p3692)) (if l_p3764 (merge-state l_p3764 (if l_d3693 (empty-state) l_t3763)) (if l_d3693 (empty-state) l_t3763)))))) (if l_l3694 (leave-collective l_l3694 l_t3762) l_t3762)) (let ((l_t5011 (let ((l_t5012 (d_cons (lookup (quote l_this) l_s3691) (d_empty_list)))) (let ((l_p5013 l_p3692)) (if l_p5013 (merge-state l_p5013 (if l_d3693 (empty-state) l_t5012)) (if l_d3693 (empty-state) l_t5012)))))) (if l_l3694 (leave-collective l_l3694 l_t5011) l_t5011)))))))) (let ((l_s3689 (merge-state l_s3661 l_s3688))) (let ((l_s3690 (let ((l_t5089 l_s3688)) (let ((l_p5090 l_s3662)) (if l_p5090 (merge-state l_p5090 (if l_d3613 (empty-state) l_t5089)) (if l_d3613 (empty-state) l_t5089)))))) (let ((l_s5016 (singleton-state (quote l_scheme_code) (lambda (l_p5020 l_d5021 l_l5022 l_this l_state l_prior l_doing l_link) (let ((l_s5019 (merge-state l_s3689 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (let ((l_s5023 (merge-state l_s5019 (singleton-state (quote l_name) (lookup (quote l_name) (lookup (quote l_this) l_s5019)))))) (d_result_code l_p5020 l_d5021 l_l5022 (if (equal? (lookup (quote l_name) l_s5023) "skip") (d_scheme_empty_state #f #f #f) (if (lookup (quote l_is_global) (lookup (quote l_this) l_s5023)) (d_scheme_atom #f #f #f (d_delta_name #f #f #f (lookup (quote l_name) l_s5023))) (d_scheme_lookup #f #f #f (d_local_name #f #f #f (lookup (quote l_name) l_s5023)) (lookup (quote l_state) l_s5023)))) (lookup (quote l_prior) l_s5023) (lookup (quote l_doing) l_s5023) (lookup (quote l_link) l_s5023)))))))) (let ((l_s5017 (merge-state l_s3689 l_s5016))) (let ((l_s5018 (let ((l_t5087 l_s5016)) (let ((l_p5088 l_s3690)) (if l_p5088 (merge-state l_p5088 (if l_d3613 (empty-state) l_t5087)) (if l_d3613 (empty-state) l_t5087)))))) (let ((l_t5084 (let ((l_t5085 (singleton-state (quote l_pretty) (lambda (l_p5055 l_d5056 l_l5057 l_this) (let ((l_s5054 (merge-state l_s5017 (state (quote l_this) l_this)))) (let ((l_t5081 (let ((l_t5082 (d_format "$mod$name" (let ((l_s5060 (singleton-state (quote l_mod) (if (lookup (quote l_is_global) (lookup (quote l_this) l_s5054)) "global " "")))) (let ((l_s5061 (merge-state l_s5054 l_s5060))) (let ((l_s5062 l_s5060)) (merge-state (or l_s5062 (empty-state)) (singleton-state (quote l_name) (lookup (quote l_name) (lookup (quote l_this) l_s5061)))))))))) (let ((l_p5083 l_p5055)) (if l_p5083 (merge-state l_p5083 (if l_d5056 (empty-state) l_t5082)) (if l_d5056 (empty-state) l_t5082)))))) (if l_l5057 (leave-collective l_l5057 l_t5081) l_t5081))))))) (let ((l_p5086 l_s5018)) (if l_p5086 (merge-state l_p5086 (if l_d3613 (empty-state) l_t5085)) (if l_d3613 (empty-state) l_t5085)))))) (if l_l3614 (leave-collective l_l3614 l_t5084) l_t5084)))))))))))))))))))))))))))))

(define d_make_abstraction (lambda (l_p5106 l_d5107 l_l5108 l_x l_y l_z) (let ((l_s5105 (state (quote l_x) l_x (quote l_y) l_y (quote l_z) l_z))) (let ((l_s5109 (singleton-state (quote l_args) (lookup (quote l_x) l_s5105)))) (let ((l_s5110 (merge-state l_s5105 l_s5109))) (let ((l_s5111 (let ((l_t6035 l_s5109)) (let ((l_p6036 l_p5106)) (if l_p6036 (merge-state l_p6036 (if l_d5107 (empty-state) l_t6035)) (if l_d5107 (empty-state) l_t6035)))))) (let ((l_s5116 (singleton-state (quote l_body) (lookup (quote l_y) l_s5110)))) (let ((l_s5117 (merge-state l_s5110 l_s5116))) (let ((l_s5118 (let ((l_t6033 l_s5116)) (let ((l_p6034 l_s5111)) (if l_p6034 (merge-state l_p6034 (if l_d5107 (empty-state) l_t6033)) (if l_d5107 (empty-state) l_t6033)))))) (let ((l_s5123 (singleton-state (quote l_range) (lookup (quote l_z) l_s5117)))) (let ((l_s5124 (merge-state l_s5117 l_s5123))) (let ((l_s5125 (let ((l_t6031 l_s5123)) (let ((l_p6032 l_s5118)) (if l_p6032 (merge-state l_p6032 (if l_d5107 (empty-state) l_t6031)) (if l_d5107 (empty-state) l_t6031)))))) (let ((l_s5130 (singleton-state (quote l_is_do) (lambda (l_p5134 l_d5135 l_l5136 l_this) (let ((l_s5133 (merge-state l_s5124 (state (quote l_this) l_this)))) (let ((l_t5137 (let ((l_t5138 #f)) (let ((l_p5139 l_p5134)) (if l_p5139 (merge-state l_p5139 (if l_d5135 (empty-state) l_t5138)) (if l_d5135 (empty-state) l_t5138)))))) (if l_l5136 (leave-collective l_l5136 l_t5137) l_t5137))))))) (let ((l_s5131 (merge-state l_s5124 l_s5130))) (let ((l_s5132 (let ((l_t6029 l_s5130)) (let ((l_p6030 l_s5125)) (if l_p6030 (merge-state l_p6030 (if l_d5107 (empty-state) l_t6029)) (if l_d5107 (empty-state) l_t6029)))))) (let ((l_s5142 (singleton-state (quote l_is_procedure) (lambda (l_p5146 l_d5147 l_l5148 l_this) (let ((l_s5145 (merge-state l_s5131 (state (quote l_this) l_this)))) (d_is_do l_p5146 l_d5147 l_l5148 (lookup (quote l_body) (lookup (quote l_this) l_s5145)))))))) (let ((l_s5143 (merge-state l_s5131 l_s5142))) (let ((l_s5144 (let ((l_t6027 l_s5142)) (let ((l_p6028 l_s5132)) (if l_p6028 (merge-state l_p6028 (if l_d5107 (empty-state) l_t6027)) (if l_d5107 (empty-state) l_t6027)))))) (let ((l_s5155 (singleton-state (quote l_assigned) (lambda (l_p5159 l_d5160 l_l5161 l_this l_certain l_globals) (let ((l_s5158 (merge-state l_s5143 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (let ((l_t5162 (let ((l_t5163 (d_empty_list))) (let ((l_p5164 l_p5159)) (if l_p5164 (merge-state l_p5164 (if l_d5160 (empty-state) l_t5163)) (if l_d5160 (empty-state) l_t5163)))))) (if l_l5161 (leave-collective l_l5161 l_t5162) l_t5162))))))) (let ((l_s5156 (merge-state l_s5143 l_s5155))) (let ((l_s5157 (let ((l_t6025 l_s5155)) (let ((l_p6026 l_s5144)) (if l_p6026 (merge-state l_p6026 (if l_d5107 (empty-state) l_t6025)) (if l_d5107 (empty-state) l_t6025)))))) (let ((l_s5167 (singleton-state (quote l_scope_violations) (lambda (l_p5171 l_d5172 l_l5173 l_this l_locals l_globals) (let ((l_s5170 (merge-state l_s5156 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (d_scope_violations l_p5171 l_d5172 l_l5173 (lookup (quote l_body) (lookup (quote l_this) l_s5170)) (d_union #f #f #f (lookup (quote l_locals) l_s5170) (lookup (quote l_args) (lookup (quote l_this) l_s5170))) (lookup (quote l_globals) l_s5170))))))) (let ((l_s5168 (merge-state l_s5156 l_s5167))) (let ((l_s5169 (let ((l_t6023 l_s5167)) (let ((l_p6024 l_s5157)) (if l_p6024 (merge-state l_p6024 (if l_d5107 (empty-state) l_t6023)) (if l_d5107 (empty-state) l_t6023)))))) (let ((l_s5188 (singleton-state (quote l_scheme_code) (lambda (l_p5192 l_d5193 l_l5194 l_this l_state l_prior l_doing l_link) (let ((l_s5191 (merge-state l_s5168 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (let ((l_s5195 (merge-state l_s5191 (let ((l_s5196 (singleton-state (quote l_renamed) (d_map_list #f #f #f d_local_name (lookup (quote l_args) (lookup (quote l_this) l_s5191)))))) (let ((l_s5197 (merge-state l_s5191 l_s5196))) (let ((l_s5198 l_s5196)) (let ((l_s5207 (singleton-state (quote l_params) (lookup (quote l_renamed) l_s5197)))) (let ((l_s5208 (merge-state l_s5197 l_s5207))) (let ((l_s5209 (merge-state (or l_s5198 (empty-state)) l_s5207))) (let ((l_s5214 (singleton-state (quote l_pairs) (d_empty_list)))) (let ((l_s5215 (merge-state l_s5208 l_s5214))) (let ((l_s5216 (merge-state (or l_s5209 (empty-state)) l_s5214))) (let ((l_s5221 (let ((l_s5224 (empty-state))) (let ((l_s5225 l_s5215)) (begin (while (d_not_equal (lookup (quote l_params) l_s5225) (d_empty_list)) (let ((l_s5226 (let ((l_s5233 (merge-state l_s5225 (singleton-state (quote l_atom) (d_scheme_atom #f #f #f (d_first (lookup (quote l_params) l_s5225))))))) (let ((l_s5240 (singleton-state (quote l_pairs) (d_cons (lookup (quote l_atom) l_s5233) (d_cons (d_scheme_quoted #f #f #f (lookup (quote l_atom) l_s5233)) (lookup (quote l_pairs) l_s5233)))))) (let ((l_s5241 (merge-state l_s5233 l_s5240))) (let ((l_s5242 l_s5240)) (merge-state (or l_s5242 (empty-state)) (singleton-state (quote l_params) (d_rest (lookup (quote l_params) l_s5241)))))))))) (begin (set! l_s5224 (merge-state l_s5224 l_s5226)) (set! l_s5225 (merge-state l_s5225 l_s5226))))) l_s5224))))) (let ((l_s5222 (merge-state l_s5215 l_s5221))) (let ((l_s5223 (merge-state (or l_s5216 (empty-state)) l_s5221))) (let ((l_s5265 (singleton-state (quote l_s) (d_gen_scheme_var #f #f #f "s")))) (let ((l_s5266 (merge-state l_s5222 l_s5265))) (let ((l_s5267 (merge-state (or l_s5223 (empty-state)) l_s5265))) (let ((l_s5272 (singleton-state (quote l_p) (d_gen_scheme_var #f #f #f "p")))) (let ((l_s5273 (merge-state l_s5266 l_s5272))) (let ((l_s5274 (merge-state (or l_s5267 (empty-state)) l_s5272))) (let ((l_s5279 (singleton-state (quote l_d) (d_gen_scheme_var #f #f #f "d")))) (let ((l_s5280 (merge-state l_s5273 l_s5279))) (let ((l_s5281 (merge-state (or l_s5274 (empty-state)) l_s5279))) (merge-state (or l_s5281 (empty-state)) (singleton-state (quote l_l) (d_gen_scheme_var #f #f #f "l"))))))))))))))))))))))))))) (d_scheme_lambda l_p5192 l_d5193 l_l5194 (d_append #f #f #f (d_cons (lookup (quote l_p) l_s5195) (d_cons (lookup (quote l_d) l_s5195) (d_cons (lookup (quote l_l) l_s5195) (d_empty_list)))) (lookup (quote l_renamed) l_s5195)) (d_scheme_let #f #f #f (lookup (quote l_s) l_s5195) (d_scheme_merge_state #f #f #f (lookup (quote l_state) l_s5195) (d_scheme_list #f #f #f (d_cons (d_scheme_atom #f #f #f "state") (d_reverse #f #f #f (lookup (quote l_pairs) l_s5195))))) (d_scheme_code #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s5195)) (lookup (quote l_s) l_s5195) (lookup (quote l_p) l_s5195) (lookup (quote l_d) l_s5195) (lookup (quote l_l) l_s5195)))))))))) (let ((l_s5189 (merge-state l_s5168 l_s5188))) (let ((l_s5190 (let ((l_t6021 l_s5188)) (let ((l_p6022 l_s5169)) (if l_p6022 (merge-state l_p6022 (if l_d5107 (empty-state) l_t6021)) (if l_d5107 (empty-state) l_t6021)))))) (let ((l_t6018 (let ((l_t6019 (singleton-state (quote l_pretty) (lambda (l_p5991 l_d5992 l_l5993 l_this) (let ((l_s5990 (merge-state l_s5189 (state (quote l_this) l_this)))) (let ((l_t6015 (let ((l_t6016 (d_format "fun ($x) $y end" (let ((l_s5996 (singleton-state (quote l_x) (d_intercalate #f #f #f (lookup (quote l_args) (lookup (quote l_this) l_s5990)) ", ")))) (let ((l_s5997 (merge-state l_s5990 l_s5996))) (let ((l_s5998 l_s5996)) (merge-state (or l_s5998 (empty-state)) (singleton-state (quote l_y) (d_pretty #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s5997))))))))))) (let ((l_p6017 l_p5991)) (if l_p6017 (merge-state l_p6017 (if l_d5992 (empty-state) l_t6016)) (if l_d5992 (empty-state) l_t6016)))))) (if l_l5993 (leave-collective l_l5993 l_t6015) l_t6015))))))) (let ((l_p6020 l_s5190)) (if l_p6020 (merge-state l_p6020 (if l_d5107 (empty-state) l_t6019)) (if l_d5107 (empty-state) l_t6019)))))) (if l_l5108 (leave-collective l_l5108 l_t6018) l_t6018)))))))))))))))))))))))))))))

(define d_make_application (lambda (l_p6040 l_d6041 l_l6042 l_x l_y l_z) (let ((l_s6039 (state (quote l_x) l_x (quote l_y) l_y (quote l_z) l_z))) (let ((l_s6043 (singleton-state (quote l_name) (lookup (quote l_x) l_s6039)))) (let ((l_s6044 (merge-state l_s6039 l_s6043))) (let ((l_s6045 (let ((l_t7464 l_s6043)) (let ((l_p7465 l_p6040)) (if l_p7465 (merge-state l_p7465 (if l_d6041 (empty-state) l_t7464)) (if l_d6041 (empty-state) l_t7464)))))) (let ((l_s6050 (singleton-state (quote l_args) (lookup (quote l_y) l_s6044)))) (let ((l_s6051 (merge-state l_s6044 l_s6050))) (let ((l_s6052 (let ((l_t7462 l_s6050)) (let ((l_p7463 l_s6045)) (if l_p7463 (merge-state l_p7463 (if l_d6041 (empty-state) l_t7462)) (if l_d6041 (empty-state) l_t7462)))))) (let ((l_s6057 (singleton-state (quote l_range) (lookup (quote l_z) l_s6051)))) (let ((l_s6058 (merge-state l_s6051 l_s6057))) (let ((l_s6059 (let ((l_t7460 l_s6057)) (let ((l_p7461 l_s6052)) (if l_p7461 (merge-state l_p7461 (if l_d6041 (empty-state) l_t7460)) (if l_d6041 (empty-state) l_t7460)))))) (let ((l_s6064 (singleton-state (quote l_is_do) (lambda (l_p6068 l_d6069 l_l6070 l_this) (let ((l_s6067 (merge-state l_s6058 (state (quote l_this) l_this)))) (let ((l_t6071 (let ((l_t6072 #f)) (let ((l_p6073 l_p6068)) (if l_p6073 (merge-state l_p6073 (if l_d6069 (empty-state) l_t6072)) (if l_d6069 (empty-state) l_t6072)))))) (if l_l6070 (leave-collective l_l6070 l_t6071) l_t6071))))))) (let ((l_s6065 (merge-state l_s6058 l_s6064))) (let ((l_s6066 (let ((l_t7458 l_s6064)) (let ((l_p7459 l_s6059)) (if l_p7459 (merge-state l_p7459 (if l_d6041 (empty-state) l_t7458)) (if l_d6041 (empty-state) l_t7458)))))) (let ((l_s6076 (singleton-state (quote l_is_procedure) (lambda (l_p6080 l_d6081 l_l6082 l_this) (let ((l_s6079 (merge-state l_s6065 (state (quote l_this) l_this)))) (let ((l_t6083 (let ((l_t6084 #f)) (let ((l_p6085 l_p6080)) (if l_p6085 (merge-state l_p6085 (if l_d6081 (empty-state) l_t6084)) (if l_d6081 (empty-state) l_t6084)))))) (if l_l6082 (leave-collective l_l6082 l_t6083) l_t6083))))))) (let ((l_s6077 (merge-state l_s6065 l_s6076))) (let ((l_s6078 (let ((l_t7456 l_s6076)) (let ((l_p7457 l_s6066)) (if l_p7457 (merge-state l_p7457 (if l_d6041 (empty-state) l_t7456)) (if l_d6041 (empty-state) l_t7456)))))) (let ((l_s6088 (singleton-state (quote l_assigned) (lambda (l_p6092 l_d6093 l_l6094 l_this l_certain l_globals) (let ((l_s6091 (merge-state l_s6077 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (if (if (d_is_primitive #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s6091))) (d_is_primitive_procedure #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s6091))) (if (d_is_standard #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s6091))) (d_is_standard_procedure #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s6091))) (let ((l_s6111 (merge-state l_s6091 (let ((l_s6112 (singleton-state (quote l_unsearched) (lookup (quote l_globals) l_s6091)))) (let ((l_s6113 (merge-state l_s6091 l_s6112))) (let ((l_s6114 l_s6112)) (let ((l_s6119 (empty-state))) (let ((l_s6120 l_s6113)) (begin (while (if (d_not_equal (lookup (quote l_unsearched) l_s6120) (d_empty_list)) (d_not_equal (d_definition_name #f #f #f (d_first (lookup (quote l_unsearched) l_s6120))) (lookup (quote l_name) (lookup (quote l_this) l_s6120))) #f) (let ((l_s6121 (singleton-state (quote l_unsearched) (d_rest (lookup (quote l_unsearched) l_s6120))))) (begin (set! l_s6119 (merge-state l_s6119 l_s6121)) (set! l_s6120 (merge-state l_s6120 l_s6121))))) (merge-state (or l_s6114 (empty-state)) l_s6119)))))))))) (if (d_not_equal (lookup (quote l_unsearched) l_s6111) (d_empty_list)) (d_is_procedure_definition #f #f #f (d_first (lookup (quote l_unsearched) l_s6111))) #f)))) (let ((l_t6162 (let ((l_t6163 (d_empty_list))) (let ((l_p6164 l_p6092)) (if l_p6164 (merge-state l_p6164 (if l_d6093 (empty-state) l_t6163)) (if l_d6093 (empty-state) l_t6163)))))) (if l_l6094 (leave-collective l_l6094 l_t6162) l_t6162)) (d_throw_with_range l_p6092 l_d6093 l_l6094 "Cannot use a function application as a statement because this makes the state statically uncertain. 

  Consider using a procedure or makig a 'do .. end' construction" (empty-state) (lookup (quote l_range) (lookup (quote l_this) l_s6091))))))))) (let ((l_s6089 (merge-state l_s6077 l_s6088))) (let ((l_s6090 (let ((l_t7454 l_s6088)) (let ((l_p7455 l_s6078)) (if l_p7455 (merge-state l_p7455 (if l_d6041 (empty-state) l_t7454)) (if l_d6041 (empty-state) l_t7454)))))) (let ((l_s6175 (singleton-state (quote l_scope_violations) (lambda (l_p6179 l_d6180 l_l6181 l_this l_locals l_globals) (let ((l_s6178 (merge-state l_s6089 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (d_fold l_p6179 l_d6180 l_l6181 d_union (if (if (d_is_primitive #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s6178))) #t (if (d_is_standard #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s6178))) #t (d_is_member #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s6178)) (d_map_list #f #f #f d_definition_name (lookup (quote l_globals) l_s6178))))) (d_empty_list) (d_cons (d_make_variable #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s6178)) #t (lookup (quote l_range) (lookup (quote l_this) l_s6178))) (d_empty_list))) (d_map_list #f #f #f (lambda (l_p6221 l_d6222 l_l6223 l_x) (let ((l_s6220 (merge-state l_s6178 (state (quote l_x) l_x)))) (d_scope_violations l_p6221 l_d6222 l_l6223 (lookup (quote l_x) l_s6220) (lookup (quote l_locals) l_s6220) (lookup (quote l_globals) l_s6220)))) (lookup (quote l_args) (lookup (quote l_this) l_s6178))))))))) (let ((l_s6176 (merge-state l_s6089 l_s6175))) (let ((l_s6177 (let ((l_t7452 l_s6175)) (let ((l_p7453 l_s6090)) (if l_p7453 (merge-state l_p7453 (if l_d6041 (empty-state) l_t7452)) (if l_d6041 (empty-state) l_t7452)))))) (let ((l_s6236 (singleton-state (quote l_scheme_code) (lambda (l_p6240 l_d6241 l_l6242 l_this l_state l_prior l_doing l_link) (let ((l_s6239 (merge-state l_s6176 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (let ((l_s6243 (merge-state l_s6239 (let ((l_s6244 (singleton-state (quote l_name) (lookup (quote l_name) (lookup (quote l_this) l_s6239))))) (let ((l_s6245 (merge-state l_s6239 l_s6244))) (let ((l_s6246 l_s6244)) (merge-state (or l_s6246 (empty-state)) (singleton-state (quote l_args_code) (d_map_list #f #f #f (lambda (l_p6254 l_d6255 l_l6256 l_x) (let ((l_s6253 (merge-state l_s6245 (state (quote l_x) l_x)))) (d_gen_scheme_code l_p6254 l_d6255 l_l6256 (lookup (quote l_x) l_s6253) (lookup (quote l_state) l_s6253)))) (lookup (quote l_args) (lookup (quote l_this) l_s6245))))))))))) (if (if (d_is_primitive #f #f #f (lookup (quote l_name) l_s6243)) (d_not_equal (lookup (quote l_name) l_s6243) "apply") #f) (d_result_code l_p6240 l_d6241 l_l6242 (d_scheme_application #f #f #f (d_delta_name #f #f #f (lookup (quote l_name) l_s6243)) (lookup (quote l_args_code) l_s6243)) (lookup (quote l_prior) l_s6243) (lookup (quote l_doing) l_s6243) (lookup (quote l_link) l_s6243)) (d_scheme_application l_p6240 l_d6241 l_l6242 (d_delta_name #f #f #f (lookup (quote l_name) l_s6243)) (d_append #f #f #f (d_cons (lookup (quote l_prior) l_s6243) (d_cons (lookup (quote l_doing) l_s6243) (d_cons (lookup (quote l_link) l_s6243) (d_empty_list)))) (lookup (quote l_args_code) l_s6243)))))))))) (let ((l_s6237 (merge-state l_s6176 l_s6236))) (let ((l_s6238 (let ((l_t7450 l_s6236)) (let ((l_p7451 l_s6177)) (if l_p7451 (merge-state l_p7451 (if l_d6041 (empty-state) l_t7450)) (if l_d6041 (empty-state) l_t7450)))))) (let ((l_t7447 (let ((l_t7448 (singleton-state (quote l_pretty) (lambda (l_p6310 l_d6311 l_l6312 l_this) (let ((l_s6309 (merge-state l_s6237 (state (quote l_this) l_this)))) (let ((l_t7444 (let ((l_t7445 (d_format "$id($args)" (let ((l_s6315 (singleton-state (quote l_id) (lookup (quote l_name) (lookup (quote l_this) l_s6309))))) (let ((l_s6316 (merge-state l_s6309 l_s6315))) (let ((l_s6317 l_s6315)) (merge-state (or l_s6317 (empty-state)) (singleton-state (quote l_args) (d_intercalate #f #f #f (d_map_list #f #f #f d_pretty (lookup (quote l_args) (lookup (quote l_this) l_s6316))) ", "))))))))) (let ((l_p7446 l_p6310)) (if l_p7446 (merge-state l_p7446 (if l_d6311 (empty-state) l_t7445)) (if l_d6311 (empty-state) l_t7445)))))) (if l_l6312 (leave-collective l_l6312 l_t7444) l_t7444))))))) (let ((l_p7449 l_s6238)) (if l_p7449 (merge-state l_p7449 (if l_d6041 (empty-state) l_t7448)) (if l_d6041 (empty-state) l_t7448)))))) (if l_l6042 (leave-collective l_l6042 l_t7447) l_t7447)))))))))))))))))))))))))))))

(define d_make_operation (lambda (l_p7469 l_d7470 l_l7471 l_x l_op l_y l_range) (let ((l_s7468 (state (quote l_x) l_x (quote l_op) l_op (quote l_y) l_y (quote l_range) l_range))) (if (equal? (lookup (quote l_op) l_s7468) "and") (d_make_if l_p7469 l_d7470 l_l7471 (lookup (quote l_x) l_s7468) (lookup (quote l_y) l_s7468) (d_make_constant #f #f #f "false" "Boole" (lookup (quote l_range) l_s7468)) (lookup (quote l_range) l_s7468)) (if (equal? (lookup (quote l_op) l_s7468) "or") (d_make_if l_p7469 l_d7470 l_l7471 (lookup (quote l_x) l_s7468) (d_make_constant #f #f #f "true" "Boole" (lookup (quote l_range) l_s7468)) (lookup (quote l_y) l_s7468) (lookup (quote l_range) l_s7468)) (if (equal? (lookup (quote l_op) l_s7468) ".") (d_make_state_deref l_p7469 l_d7470 l_l7471 (lookup (quote l_x) l_s7468) (lookup (quote l_name) (lookup (quote l_y) l_s7468)) (lookup (quote l_range) l_s7468)) (if (equal? (lookup (quote l_op) l_s7468) "<=") (d_make_operation l_p7469 l_d7470 l_l7471 (d_make_operation #f #f #f (lookup (quote l_x) l_s7468) "<" (lookup (quote l_y) l_s7468) (lookup (quote l_range) l_s7468)) "or" (d_make_operation #f #f #f (lookup (quote l_x) l_s7468) "=" (lookup (quote l_y) l_s7468) (lookup (quote l_range) l_s7468)) (lookup (quote l_range) l_s7468)) (if (equal? (lookup (quote l_op) l_s7468) ">=") (d_make_operation l_p7469 l_d7470 l_l7471 (d_make_operation #f #f #f (lookup (quote l_x) l_s7468) ">" (lookup (quote l_y) l_s7468) (lookup (quote l_range) l_s7468)) "or" (d_make_operation #f #f #f (lookup (quote l_x) l_s7468) "=" (lookup (quote l_y) l_s7468) (lookup (quote l_range) l_s7468)) (lookup (quote l_range) l_s7468)) (let ((l_s7813 (singleton-state (quote l_operator) (lookup (quote l_op) l_s7468)))) (let ((l_s7814 (merge-state l_s7468 l_s7813))) (let ((l_s7815 (let ((l_t8438 l_s7813)) (let ((l_p8439 l_p7469)) (if l_p8439 (merge-state l_p8439 (if l_d7470 (empty-state) l_t8438)) (if l_d7470 (empty-state) l_t8438)))))) (let ((l_s7820 (singleton-state (quote l_left) (lookup (quote l_x) l_s7814)))) (let ((l_s7821 (merge-state l_s7814 l_s7820))) (let ((l_s7822 (let ((l_t8436 l_s7820)) (let ((l_p8437 l_s7815)) (if l_p8437 (merge-state l_p8437 (if l_d7470 (empty-state) l_t8436)) (if l_d7470 (empty-state) l_t8436)))))) (let ((l_s7827 (singleton-state (quote l_right) (lookup (quote l_y) l_s7821)))) (let ((l_s7828 (merge-state l_s7821 l_s7827))) (let ((l_s7829 (let ((l_t8434 l_s7827)) (let ((l_p8435 l_s7822)) (if l_p8435 (merge-state l_p8435 (if l_d7470 (empty-state) l_t8434)) (if l_d7470 (empty-state) l_t8434)))))) (let ((l_s7834 (singleton-state (quote l_range) (lookup (quote l_range) l_s7828)))) (let ((l_s7835 (merge-state l_s7828 l_s7834))) (let ((l_s7836 (let ((l_t8432 l_s7834)) (let ((l_p8433 l_s7829)) (if l_p8433 (merge-state l_p8433 (if l_d7470 (empty-state) l_t8432)) (if l_d7470 (empty-state) l_t8432)))))) (let ((l_s7841 (singleton-state (quote l_is_do) (lambda (l_p7845 l_d7846 l_l7847 l_this) (let ((l_s7844 (merge-state l_s7835 (state (quote l_this) l_this)))) (let ((l_t7848 (let ((l_t7849 #f)) (let ((l_p7850 l_p7845)) (if l_p7850 (merge-state l_p7850 (if l_d7846 (empty-state) l_t7849)) (if l_d7846 (empty-state) l_t7849)))))) (if l_l7847 (leave-collective l_l7847 l_t7848) l_t7848))))))) (let ((l_s7842 (merge-state l_s7835 l_s7841))) (let ((l_s7843 (let ((l_t8430 l_s7841)) (let ((l_p8431 l_s7836)) (if l_p8431 (merge-state l_p8431 (if l_d7470 (empty-state) l_t8430)) (if l_d7470 (empty-state) l_t8430)))))) (let ((l_s7853 (singleton-state (quote l_is_procedure) (lambda (l_p7857 l_d7858 l_l7859 l_this) (let ((l_s7856 (merge-state l_s7842 (state (quote l_this) l_this)))) (let ((l_t7860 (let ((l_t7861 #f)) (let ((l_p7862 l_p7857)) (if l_p7862 (merge-state l_p7862 (if l_d7858 (empty-state) l_t7861)) (if l_d7858 (empty-state) l_t7861)))))) (if l_l7859 (leave-collective l_l7859 l_t7860) l_t7860))))))) (let ((l_s7854 (merge-state l_s7842 l_s7853))) (let ((l_s7855 (let ((l_t8428 l_s7853)) (let ((l_p8429 l_s7843)) (if l_p8429 (merge-state l_p8429 (if l_d7470 (empty-state) l_t8428)) (if l_d7470 (empty-state) l_t8428)))))) (let ((l_s8105 (singleton-state (quote l_assigned) (lambda (l_p8109 l_d8110 l_l8111 l_this l_certain l_globals) (let ((l_s8108 (merge-state l_s7854 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (let ((l_s8112 (merge-state l_s8108 (singleton-state (quote l_op) (lookup (quote l_operator) (lookup (quote l_this) l_s8108)))))) (if (equal? (lookup (quote l_op) l_s8112) ":=") (let ((l_t8133 (let ((l_t8134 (d_cons (lookup (quote l_name) (lookup (quote l_left) (lookup (quote l_this) l_s8112))) (d_empty_list)))) (let ((l_p8135 l_p8109)) (if l_p8135 (merge-state l_p8135 (if l_d8110 (empty-state) l_t8134)) (if l_d8110 (empty-state) l_t8134)))))) (if l_l8111 (leave-collective l_l8111 l_t8133) l_t8133)) (d_union l_p8109 l_d8110 l_l8111 (d_assigned #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8112)) (lookup (quote l_certain) l_s8112) (lookup (quote l_globals) l_s8112)) (d_assigned #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s8112)) (lookup (quote l_certain) l_s8112) (lookup (quote l_globals) l_s8112)))))))))) (let ((l_s8106 (merge-state l_s7854 l_s8105))) (let ((l_s8107 (let ((l_t8426 l_s8105)) (let ((l_p8427 l_s7855)) (if l_p8427 (merge-state l_p8427 (if l_d7470 (empty-state) l_t8426)) (if l_d7470 (empty-state) l_t8426)))))) (let ((l_s8154 (singleton-state (quote l_scope_violations) (lambda (l_p8158 l_d8159 l_l8160 l_this l_locals l_globals) (let ((l_s8157 (merge-state l_s8106 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (let ((l_s8161 (merge-state l_s8157 (singleton-state (quote l_op) (lookup (quote l_operator) (lookup (quote l_this) l_s8157)))))) (if (equal? (lookup (quote l_op) l_s8161) ":=") (d_scope_violations l_p8158 l_d8159 l_l8160 (lookup (quote l_right) (lookup (quote l_this) l_s8161)) (lookup (quote l_locals) l_s8161) (lookup (quote l_globals) l_s8161)) (if (equal? (lookup (quote l_op) l_s8161) ";") (d_union l_p8158 l_d8159 l_l8160 (d_scope_violations #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8161)) (lookup (quote l_locals) l_s8161) (lookup (quote l_globals) l_s8161)) (d_scope_violations #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s8161)) (d_union #f #f #f (d_assigned #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8161)) #t (lookup (quote l_globals) l_s8161)) (lookup (quote l_locals) l_s8161)) (lookup (quote l_globals) l_s8161))) (if (equal? (lookup (quote l_op) l_s8161) "|") (d_union l_p8158 l_d8159 l_l8160 (d_scope_violations #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8161)) (lookup (quote l_locals) l_s8161) (lookup (quote l_globals) l_s8161)) (d_scope_violations #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s8161)) (lookup (quote l_locals) l_s8161) (lookup (quote l_globals) l_s8161))) (if (equal? (lookup (quote l_op) l_s8161) "&") (d_union l_p8158 l_d8159 l_l8160 (d_scope_violations #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8161)) (lookup (quote l_locals) l_s8161) (lookup (quote l_globals) l_s8161)) (d_scope_violations #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s8161)) (lookup (quote l_locals) l_s8161) (lookup (quote l_globals) l_s8161))) (d_union l_p8158 l_d8159 l_l8160 (d_scope_violations #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8161)) (lookup (quote l_locals) l_s8161) (lookup (quote l_globals) l_s8161)) (d_scope_violations #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s8161)) (lookup (quote l_locals) l_s8161) (lookup (quote l_globals) l_s8161))))))))))))) (let ((l_s8155 (merge-state l_s8106 l_s8154))) (let ((l_s8156 (let ((l_t8424 l_s8154)) (let ((l_p8425 l_s8107)) (if l_p8425 (merge-state l_p8425 (if l_d7470 (empty-state) l_t8424)) (if l_d7470 (empty-state) l_t8424)))))) (let ((l_s8274 (singleton-state (quote l_scheme_code) (lambda (l_p8278 l_d8279 l_l8280 l_this l_state l_prior l_doing l_link) (let ((l_s8277 (merge-state l_s8155 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (let ((l_s8281 (merge-state l_s8277 (singleton-state (quote l_op) (lookup (quote l_operator) (lookup (quote l_this) l_s8277)))))) (if (equal? (lookup (quote l_op) l_s8281) ":=") (d_assignment_scheme_code l_p8278 l_d8279 l_l8280 (lookup (quote l_this) l_s8281) (lookup (quote l_state) l_s8281) (lookup (quote l_prior) l_s8281) (lookup (quote l_doing) l_s8281) (lookup (quote l_link) l_s8281)) (if (equal? (lookup (quote l_op) l_s8281) ";") (d_seq_scheme_code l_p8278 l_d8279 l_l8280 (lookup (quote l_this) l_s8281) (lookup (quote l_state) l_s8281) (lookup (quote l_prior) l_s8281) (lookup (quote l_doing) l_s8281) (lookup (quote l_link) l_s8281)) (if (equal? (lookup (quote l_op) l_s8281) "|") (d_par_scheme_code l_p8278 l_d8279 l_l8280 (lookup (quote l_this) l_s8281) (lookup (quote l_state) l_s8281) (lookup (quote l_prior) l_s8281) (lookup (quote l_doing) l_s8281) (lookup (quote l_link) l_s8281)) (if (equal? (lookup (quote l_op) l_s8281) "&") (d_ind_scheme_code l_p8278 l_d8279 l_l8280 (lookup (quote l_this) l_s8281) (lookup (quote l_state) l_s8281) (lookup (quote l_prior) l_s8281) (lookup (quote l_doing) l_s8281) (lookup (quote l_link) l_s8281)) (d_scheme_code l_p8278 l_d8279 l_l8280 (d_make_application #f #f #f (d_operator_name #f #f #f (lookup (quote l_operator) (lookup (quote l_this) l_s8281))) (d_cons (lookup (quote l_left) (lookup (quote l_this) l_s8281)) (d_cons (lookup (quote l_right) (lookup (quote l_this) l_s8281)) (d_empty_list))) (lookup (quote l_range) l_s8281)) (lookup (quote l_state) l_s8281) (lookup (quote l_prior) l_s8281) (lookup (quote l_doing) l_s8281) (lookup (quote l_link) l_s8281)))))))))))) (let ((l_s8275 (merge-state l_s8155 l_s8274))) (let ((l_s8276 (let ((l_t8422 l_s8274)) (let ((l_p8423 l_s8156)) (if l_p8423 (merge-state l_p8423 (if l_d7470 (empty-state) l_t8422)) (if l_d7470 (empty-state) l_t8422)))))) (let ((l_t8419 (let ((l_t8420 (singleton-state (quote l_pretty) (lambda (l_p8383 l_d8384 l_l8385 l_this) (let ((l_s8382 (merge-state l_s8275 (state (quote l_this) l_this)))) (let ((l_t8416 (let ((l_t8417 (d_format "($x $op $y)" (let ((l_s8388 (singleton-state (quote l_op) (lookup (quote l_operator) (lookup (quote l_this) l_s8382))))) (let ((l_s8389 (merge-state l_s8382 l_s8388))) (let ((l_s8390 l_s8388)) (let ((l_s8397 (singleton-state (quote l_x) (d_pretty #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8389)))))) (let ((l_s8398 (merge-state l_s8389 l_s8397))) (let ((l_s8399 (merge-state (or l_s8390 (empty-state)) l_s8397))) (merge-state (or l_s8399 (empty-state)) (singleton-state (quote l_y) (d_pretty #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s8398)))))))))))))) (let ((l_p8418 l_p8383)) (if l_p8418 (merge-state l_p8418 (if l_d8384 (empty-state) l_t8417)) (if l_d8384 (empty-state) l_t8417)))))) (if l_l8385 (leave-collective l_l8385 l_t8416) l_t8416))))))) (let ((l_p8421 l_s8276)) (if l_p8421 (merge-state l_p8421 (if l_d7470 (empty-state) l_t8420)) (if l_d7470 (empty-state) l_t8420)))))) (if l_l7471 (leave-collective l_l7471 l_t8419) l_t8419)))))))))))))))))))))))))))))))))))))

(define d_make_unary_operation (lambda (l_p8750 l_d8751 l_l8752 l_operator l_operand l_range) (let ((l_s8749 (state (quote l_operator) l_operator (quote l_operand) l_operand (quote l_range) l_range))) (if (equal? (lookup (quote l_operator) l_s8749) "-") (d_make_application l_p8750 l_d8751 l_l8752 "neg" (d_cons (lookup (quote l_operand) l_s8749) (d_empty_list)) (lookup (quote l_range) l_s8749)) (let ((l_t8777 (let ((l_t8778 (d_throw (d_format "unary operator $op unknown" (singleton-state (quote l_op) (lookup (quote l_operator) l_s8749)))))) (let ((l_p8779 l_p8750)) (if l_p8779 (merge-state l_p8779 (if l_d8751 (empty-state) l_t8778)) (if l_d8751 (empty-state) l_t8778)))))) (if l_l8752 (leave-collective l_l8752 l_t8777) l_t8777))))))

(define d_par_scheme_code (lambda (l_p8783 l_d8784 l_l8785 l_this l_state l_prior l_doing l_link) (let ((l_s8782 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link))) (let ((l_s8786 (merge-state l_s8782 (let ((l_s8787 (singleton-state (quote l_l1) (d_gen_scheme_var #f #f #f "l")))) (let ((l_s8788 (merge-state l_s8782 l_s8787))) (let ((l_s8789 l_s8787)) (let ((l_s8794 (singleton-state (quote l_l2) (d_gen_scheme_var #f #f #f "l")))) (let ((l_s8795 (merge-state l_s8788 l_s8794))) (let ((l_s8796 (merge-state (or l_s8789 (empty-state)) l_s8794))) (let ((l_s8801 (singleton-state (quote l_left_code) (d_scheme_code #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8795)) (lookup (quote l_state) l_s8795) (lookup (quote l_prior) l_s8795) (lookup (quote l_doing) l_s8795) (lookup (quote l_l1) l_s8795))))) (let ((l_s8802 (merge-state l_s8795 l_s8801))) (let ((l_s8803 (merge-state (or l_s8796 (empty-state)) l_s8801))) (merge-state (or l_s8803 (empty-state)) (singleton-state (quote l_right_code) (d_scheme_code #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s8802)) (lookup (quote l_state) l_s8802) (d_scheme_false #f #f #f) (lookup (quote l_doing) l_s8802) (lookup (quote l_l2) l_s8802)))))))))))))))) (d_scheme_application l_p8783 l_d8784 l_l8785 "para" (d_cons (d_scheme_lambda #f #f #f (d_cons (lookup (quote l_l1) l_s8786) (d_empty_list)) (lookup (quote l_left_code) l_s8786)) (d_cons (d_scheme_lambda #f #f #f (d_cons (lookup (quote l_l2) l_s8786) (d_empty_list)) (lookup (quote l_right_code) l_s8786)) (d_cons (lookup (quote l_link) l_s8786) (d_empty_list)))))))))

(define d_seq_scheme_code (lambda (l_p8867 l_d8868 l_l8869 l_this l_state l_prior l_doing l_link) (let ((l_s8866 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link))) (let ((l_s8870 (merge-state l_s8866 (let ((l_s8871 (singleton-state (quote l_st1) (d_gen_scheme_var #f #f #f "s")))) (let ((l_s8872 (merge-state l_s8866 l_s8871))) (let ((l_s8873 l_s8871)) (let ((l_s8878 (singleton-state (quote l_st2) (d_gen_scheme_var #f #f #f "s")))) (let ((l_s8879 (merge-state l_s8872 l_s8878))) (let ((l_s8880 (merge-state (or l_s8873 (empty-state)) l_s8878))) (let ((l_s8885 (singleton-state (quote l_st3) (d_gen_scheme_var #f #f #f "s")))) (let ((l_s8886 (merge-state l_s8879 l_s8885))) (let ((l_s8887 (merge-state (or l_s8880 (empty-state)) l_s8885))) (let ((l_s8892 (singleton-state (quote l_left_code) (d_gen_scheme_code #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8886)) (lookup (quote l_state) l_s8886))))) (let ((l_s8893 (merge-state l_s8886 l_s8892))) (let ((l_s8894 (merge-state (or l_s8887 (empty-state)) l_s8892))) (merge-state (or l_s8894 (empty-state)) (singleton-state (quote l_right_code) (d_scheme_code #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s8893)) (lookup (quote l_st2) l_s8893) (lookup (quote l_st3) l_s8893) (lookup (quote l_doing) l_s8893) (lookup (quote l_link) l_s8893))))))))))))))))))) (d_scheme_let l_p8867 l_d8868 l_l8869 (lookup (quote l_st1) l_s8870) (lookup (quote l_left_code) l_s8870) (d_scheme_let #f #f #f (lookup (quote l_st2) l_s8870) (d_scheme_merge_state #f #f #f (lookup (quote l_state) l_s8870) (lookup (quote l_st1) l_s8870)) (d_scheme_let #f #f #f (lookup (quote l_st3) l_s8870) (d_result_code #f #f #f (lookup (quote l_st1) l_s8870) (lookup (quote l_prior) l_s8870) (lookup (quote l_doing) l_s8870) (d_scheme_false #f #f #f)) (lookup (quote l_right_code) l_s8870))))))))

(define d_ind_scheme_code (lambda (l_p8948 l_d8949 l_l8950 l_this l_state l_prior l_doing l_link) (let ((l_s8947 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link))) (let ((l_s8951 (merge-state l_s8947 (let ((l_s8952 (singleton-state (quote l_st1) (d_gen_scheme_var #f #f #f "s")))) (let ((l_s8953 (merge-state l_s8947 l_s8952))) (let ((l_s8954 l_s8952)) (let ((l_s8959 (singleton-state (quote l_left_code) (d_scheme_code #f #f #f (lookup (quote l_left) (lookup (quote l_this) l_s8953)) (lookup (quote l_state) l_s8953) (lookup (quote l_prior) l_s8953) (lookup (quote l_doing) l_s8953) (d_scheme_false #f #f #f))))) (let ((l_s8960 (merge-state l_s8953 l_s8959))) (let ((l_s8961 (merge-state (or l_s8954 (empty-state)) l_s8959))) (merge-state (or l_s8961 (empty-state)) (singleton-state (quote l_right_code) (d_scheme_code #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s8960)) (lookup (quote l_state) l_s8960) (lookup (quote l_st1) l_s8960) (lookup (quote l_doing) l_s8960) (lookup (quote l_link) l_s8960))))))))))))) (d_scheme_let l_p8948 l_d8949 l_l8950 (lookup (quote l_st1) l_s8951) (lookup (quote l_left_code) l_s8951) (lookup (quote l_right_code) l_s8951))))))

(define d_assignment_scheme_code (lambda (l_p9001 l_d9002 l_l9003 l_this l_state l_prior l_doing l_link) (let ((l_s9000 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link))) (d_result_code l_p9001 l_d9002 l_l9003 (d_scheme_single_state #f #f #f (d_local_name #f #f #f (lookup (quote l_name) (lookup (quote l_left) (lookup (quote l_this) l_s9000)))) (d_gen_scheme_code #f #f #f (lookup (quote l_right) (lookup (quote l_this) l_s9000)) (lookup (quote l_state) l_s9000))) (lookup (quote l_prior) l_s9000) (lookup (quote l_doing) l_s9000) (lookup (quote l_link) l_s9000)))))

(define d_make_if (lambda (l_p9258 l_d9259 l_l9260 l_x l_y l_z l_range) (let ((l_s9257 (state (quote l_x) l_x (quote l_y) l_y (quote l_z) l_z (quote l_range) l_range))) (let ((l_s9261 (singleton-state (quote l_condition) (lookup (quote l_x) l_s9257)))) (let ((l_s9262 (merge-state l_s9257 l_s9261))) (let ((l_s9263 (let ((l_t9474 l_s9261)) (let ((l_p9475 l_p9258)) (if l_p9475 (merge-state l_p9475 (if l_d9259 (empty-state) l_t9474)) (if l_d9259 (empty-state) l_t9474)))))) (let ((l_s9268 (singleton-state (quote l_then_part) (lookup (quote l_y) l_s9262)))) (let ((l_s9269 (merge-state l_s9262 l_s9268))) (let ((l_s9270 (let ((l_t9472 l_s9268)) (let ((l_p9473 l_s9263)) (if l_p9473 (merge-state l_p9473 (if l_d9259 (empty-state) l_t9472)) (if l_d9259 (empty-state) l_t9472)))))) (let ((l_s9275 (singleton-state (quote l_else_part) (lookup (quote l_z) l_s9269)))) (let ((l_s9276 (merge-state l_s9269 l_s9275))) (let ((l_s9277 (let ((l_t9470 l_s9275)) (let ((l_p9471 l_s9270)) (if l_p9471 (merge-state l_p9471 (if l_d9259 (empty-state) l_t9470)) (if l_d9259 (empty-state) l_t9470)))))) (let ((l_s9282 (singleton-state (quote l_range) (lookup (quote l_range) l_s9276)))) (let ((l_s9283 (merge-state l_s9276 l_s9282))) (let ((l_s9284 (let ((l_t9468 l_s9282)) (let ((l_p9469 l_s9277)) (if l_p9469 (merge-state l_p9469 (if l_d9259 (empty-state) l_t9468)) (if l_d9259 (empty-state) l_t9468)))))) (let ((l_s9289 (singleton-state (quote l_is_do) (lambda (l_p9293 l_d9294 l_l9295 l_this) (let ((l_s9292 (merge-state l_s9283 (state (quote l_this) l_this)))) (let ((l_t9296 (let ((l_t9297 #f)) (let ((l_p9298 l_p9293)) (if l_p9298 (merge-state l_p9298 (if l_d9294 (empty-state) l_t9297)) (if l_d9294 (empty-state) l_t9297)))))) (if l_l9295 (leave-collective l_l9295 l_t9296) l_t9296))))))) (let ((l_s9290 (merge-state l_s9283 l_s9289))) (let ((l_s9291 (let ((l_t9466 l_s9289)) (let ((l_p9467 l_s9284)) (if l_p9467 (merge-state l_p9467 (if l_d9259 (empty-state) l_t9466)) (if l_d9259 (empty-state) l_t9466)))))) (let ((l_s9301 (singleton-state (quote l_is_procedure) (lambda (l_p9305 l_d9306 l_l9307 l_this) (let ((l_s9304 (merge-state l_s9290 (state (quote l_this) l_this)))) (let ((l_t9308 (let ((l_t9309 #f)) (let ((l_p9310 l_p9305)) (if l_p9310 (merge-state l_p9310 (if l_d9306 (empty-state) l_t9309)) (if l_d9306 (empty-state) l_t9309)))))) (if l_l9307 (leave-collective l_l9307 l_t9308) l_t9308))))))) (let ((l_s9302 (merge-state l_s9290 l_s9301))) (let ((l_s9303 (let ((l_t9464 l_s9301)) (let ((l_p9465 l_s9291)) (if l_p9465 (merge-state l_p9465 (if l_d9259 (empty-state) l_t9464)) (if l_d9259 (empty-state) l_t9464)))))) (let ((l_s9313 (singleton-state (quote l_assigned) (lambda (l_p9317 l_d9318 l_l9319 l_this l_certain l_globals) (let ((l_s9316 (merge-state l_s9302 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (d_apply l_p9317 l_d9318 l_l9319 (if (lookup (quote l_certain) l_s9316) d_intersection d_union) (d_tuple (d_assigned #f #f #f (lookup (quote l_then_part) (lookup (quote l_this) l_s9316)) (lookup (quote l_certain) l_s9316) (lookup (quote l_globals) l_s9316)) (d_assigned #f #f #f (lookup (quote l_else_part) (lookup (quote l_this) l_s9316)) (lookup (quote l_certain) l_s9316) (lookup (quote l_globals) l_s9316))))))))) (let ((l_s9314 (merge-state l_s9302 l_s9313))) (let ((l_s9315 (let ((l_t9462 l_s9313)) (let ((l_p9463 l_s9303)) (if l_p9463 (merge-state l_p9463 (if l_d9259 (empty-state) l_t9462)) (if l_d9259 (empty-state) l_t9462)))))) (let ((l_s9346 (singleton-state (quote l_scope_violations) (lambda (l_p9350 l_d9351 l_l9352 l_this l_locals l_globals) (let ((l_s9349 (merge-state l_s9314 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (d_union l_p9350 l_d9351 l_l9352 (d_scope_violations #f #f #f (lookup (quote l_condition) (lookup (quote l_this) l_s9349)) (lookup (quote l_locals) l_s9349) (lookup (quote l_globals) l_s9349)) (d_union #f #f #f (d_scope_violations #f #f #f (lookup (quote l_then_part) (lookup (quote l_this) l_s9349)) (lookup (quote l_locals) l_s9349) (lookup (quote l_globals) l_s9349)) (d_scope_violations #f #f #f (lookup (quote l_else_part) (lookup (quote l_this) l_s9349)) (lookup (quote l_locals) l_s9349) (lookup (quote l_globals) l_s9349))))))))) (let ((l_s9347 (merge-state l_s9314 l_s9346))) (let ((l_s9348 (let ((l_t9460 l_s9346)) (let ((l_p9461 l_s9315)) (if l_p9461 (merge-state l_p9461 (if l_d9259 (empty-state) l_t9460)) (if l_d9259 (empty-state) l_t9460)))))) (let ((l_s9379 (singleton-state (quote l_scheme_code) (lambda (l_p9383 l_d9384 l_l9385 l_this l_state l_prior l_doing l_link) (let ((l_s9382 (merge-state l_s9347 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (d_scheme_if l_p9383 l_d9384 l_l9385 (d_gen_scheme_code #f #f #f (lookup (quote l_condition) (lookup (quote l_this) l_s9382)) (lookup (quote l_state) l_s9382)) (d_scheme_code #f #f #f (lookup (quote l_then_part) (lookup (quote l_this) l_s9382)) (lookup (quote l_state) l_s9382) (lookup (quote l_prior) l_s9382) (lookup (quote l_doing) l_s9382) (lookup (quote l_link) l_s9382)) (d_scheme_code #f #f #f (lookup (quote l_else_part) (lookup (quote l_this) l_s9382)) (lookup (quote l_state) l_s9382) (lookup (quote l_prior) l_s9382) (lookup (quote l_doing) l_s9382) (lookup (quote l_link) l_s9382)))))))) (let ((l_s9380 (merge-state l_s9347 l_s9379))) (let ((l_s9381 (let ((l_t9458 l_s9379)) (let ((l_p9459 l_s9348)) (if l_p9459 (merge-state l_p9459 (if l_d9259 (empty-state) l_t9458)) (if l_d9259 (empty-state) l_t9458)))))) (let ((l_t9455 (let ((l_t9456 (singleton-state (quote l_pretty) (lambda (l_p9419 l_d9420 l_l9421 l_this) (let ((l_s9418 (merge-state l_s9380 (state (quote l_this) l_this)))) (let ((l_t9452 (let ((l_t9453 (d_format "if $x then $y else $z end" (let ((l_s9424 (singleton-state (quote l_x) (d_pretty #f #f #f (lookup (quote l_condition) (lookup (quote l_this) l_s9418)))))) (let ((l_s9425 (merge-state l_s9418 l_s9424))) (let ((l_s9426 l_s9424)) (let ((l_s9433 (singleton-state (quote l_y) (d_pretty #f #f #f (lookup (quote l_then_part) (lookup (quote l_this) l_s9425)))))) (let ((l_s9434 (merge-state l_s9425 l_s9433))) (let ((l_s9435 (merge-state (or l_s9426 (empty-state)) l_s9433))) (merge-state (or l_s9435 (empty-state)) (singleton-state (quote l_z) (d_pretty #f #f #f (lookup (quote l_else_part) (lookup (quote l_this) l_s9434)))))))))))))) (let ((l_p9454 l_p9419)) (if l_p9454 (merge-state l_p9454 (if l_d9420 (empty-state) l_t9453)) (if l_d9420 (empty-state) l_t9453)))))) (if l_l9421 (leave-collective l_l9421 l_t9452) l_t9452))))))) (let ((l_p9457 l_s9381)) (if l_p9457 (merge-state l_p9457 (if l_d9259 (empty-state) l_t9456)) (if l_d9259 (empty-state) l_t9456)))))) (if l_l9260 (leave-collective l_l9260 l_t9455) l_t9455))))))))))))))))))))))))))))))))

(define d_make_do (lambda (l_p9479 l_d9480 l_l9481 l_x l_range) (let ((l_s9478 (state (quote l_x) l_x (quote l_range) l_range))) (let ((l_s9482 (singleton-state (quote l_body) (lookup (quote l_x) l_s9478)))) (let ((l_s9483 (merge-state l_s9478 l_s9482))) (let ((l_s9484 (let ((l_t9884 l_s9482)) (let ((l_p9885 l_p9479)) (if l_p9885 (merge-state l_p9885 (if l_d9480 (empty-state) l_t9884)) (if l_d9480 (empty-state) l_t9884)))))) (let ((l_s9489 (singleton-state (quote l_range) (lookup (quote l_range) l_s9483)))) (let ((l_s9490 (merge-state l_s9483 l_s9489))) (let ((l_s9491 (let ((l_t9882 l_s9489)) (let ((l_p9883 l_s9484)) (if l_p9883 (merge-state l_p9883 (if l_d9480 (empty-state) l_t9882)) (if l_d9480 (empty-state) l_t9882)))))) (let ((l_s9496 (singleton-state (quote l_is_do) (lambda (l_p9500 l_d9501 l_l9502 l_this) (let ((l_s9499 (merge-state l_s9490 (state (quote l_this) l_this)))) (let ((l_t9503 (let ((l_t9504 #t)) (let ((l_p9505 l_p9500)) (if l_p9505 (merge-state l_p9505 (if l_d9501 (empty-state) l_t9504)) (if l_d9501 (empty-state) l_t9504)))))) (if l_l9502 (leave-collective l_l9502 l_t9503) l_t9503))))))) (let ((l_s9497 (merge-state l_s9490 l_s9496))) (let ((l_s9498 (let ((l_t9594 l_s9496)) (let ((l_p9595 l_s9491)) (if l_p9595 (merge-state l_p9595 (if l_d9480 (empty-state) l_t9594)) (if l_d9480 (empty-state) l_t9594)))))) (let ((l_s9508 (singleton-state (quote l_is_procedure) (lambda (l_p9512 l_d9513 l_l9514 l_this) (let ((l_s9511 (merge-state l_s9497 (state (quote l_this) l_this)))) (let ((l_t9515 (let ((l_t9516 #f)) (let ((l_p9517 l_p9512)) (if l_p9517 (merge-state l_p9517 (if l_d9513 (empty-state) l_t9516)) (if l_d9513 (empty-state) l_t9516)))))) (if l_l9514 (leave-collective l_l9514 l_t9515) l_t9515))))))) (let ((l_s9509 (merge-state l_s9497 l_s9508))) (let ((l_s9510 (let ((l_t9592 l_s9508)) (let ((l_p9593 l_s9498)) (if l_p9593 (merge-state l_p9593 (if l_d9480 (empty-state) l_t9592)) (if l_d9480 (empty-state) l_t9592)))))) (let ((l_s9520 (singleton-state (quote l_assigned) (lambda (l_p9524 l_d9525 l_l9526 l_this l_certain l_globals) (let ((l_s9523 (merge-state l_s9509 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (let ((l_t9527 (let ((l_t9528 (d_empty_list))) (let ((l_p9529 l_p9524)) (if l_p9529 (merge-state l_p9529 (if l_d9525 (empty-state) l_t9528)) (if l_d9525 (empty-state) l_t9528)))))) (if l_l9526 (leave-collective l_l9526 l_t9527) l_t9527))))))) (let ((l_s9521 (merge-state l_s9509 l_s9520))) (let ((l_s9522 (let ((l_t9590 l_s9520)) (let ((l_p9591 l_s9510)) (if l_p9591 (merge-state l_p9591 (if l_d9480 (empty-state) l_t9590)) (if l_d9480 (empty-state) l_t9590)))))) (let ((l_s9532 (singleton-state (quote l_scope_violations) (lambda (l_p9536 l_d9537 l_l9538 l_this l_locals l_globals) (let ((l_s9535 (merge-state l_s9521 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (d_scope_violations l_p9536 l_d9537 l_l9538 (lookup (quote l_body) (lookup (quote l_this) l_s9535)) (lookup (quote l_locals) l_s9535) (lookup (quote l_globals) l_s9535))))))) (let ((l_s9533 (merge-state l_s9521 l_s9532))) (let ((l_s9534 (let ((l_t9588 l_s9532)) (let ((l_p9589 l_s9522)) (if l_p9589 (merge-state l_p9589 (if l_d9480 (empty-state) l_t9588)) (if l_d9480 (empty-state) l_t9588)))))) (let ((l_s9549 (singleton-state (quote l_scheme_code) (lambda (l_p9553 l_d9554 l_l9555 l_this l_state l_prior l_doing l_link) (let ((l_s9552 (merge-state l_s9533 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (d_scheme_code l_p9553 l_d9554 l_l9555 (lookup (quote l_body) (lookup (quote l_this) l_s9552)) (lookup (quote l_state) l_s9552) (lookup (quote l_prior) l_s9552) (d_scheme_true #f #f #f) (lookup (quote l_link) l_s9552))))))) (let ((l_s9550 (merge-state l_s9533 l_s9549))) (let ((l_s9551 (let ((l_t9586 l_s9549)) (let ((l_p9587 l_s9534)) (if l_p9587 (merge-state l_p9587 (if l_d9480 (empty-state) l_t9586)) (if l_d9480 (empty-state) l_t9586)))))) (let ((l_t9583 (let ((l_t9584 (singleton-state (quote l_pretty) (lambda (l_p9569 l_d9570 l_l9571 l_this) (let ((l_s9568 (merge-state l_s9550 (state (quote l_this) l_this)))) (let ((l_t9580 (let ((l_t9581 (d_format "do $x end" (singleton-state (quote l_x) (d_pretty #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s9568))))))) (let ((l_p9582 l_p9569)) (if l_p9582 (merge-state l_p9582 (if l_d9570 (empty-state) l_t9581)) (if l_d9570 (empty-state) l_t9581)))))) (if l_l9571 (leave-collective l_l9571 l_t9580) l_t9580))))))) (let ((l_p9585 l_s9551)) (if l_p9585 (merge-state l_p9585 (if l_d9480 (empty-state) l_t9584)) (if l_d9480 (empty-state) l_t9584)))))) (if l_l9481 (leave-collective l_l9481 l_t9583) l_t9583))))))))))))))))))))))))))

(define d_make_while (lambda (l_p9889 l_d9890 l_l9891 l_x l_y l_range) (let ((l_s9888 (state (quote l_x) l_x (quote l_y) l_y (quote l_range) l_range))) (let ((l_s9892 (singleton-state (quote l_test) (lookup (quote l_x) l_s9888)))) (let ((l_s9893 (merge-state l_s9888 l_s9892))) (let ((l_s9894 (let ((l_t10263 l_s9892)) (let ((l_p10264 l_p9889)) (if l_p10264 (merge-state l_p10264 (if l_d9890 (empty-state) l_t10263)) (if l_d9890 (empty-state) l_t10263)))))) (let ((l_s9899 (singleton-state (quote l_body) (lookup (quote l_y) l_s9893)))) (let ((l_s9900 (merge-state l_s9893 l_s9899))) (let ((l_s9901 (let ((l_t10261 l_s9899)) (let ((l_p10262 l_s9894)) (if l_p10262 (merge-state l_p10262 (if l_d9890 (empty-state) l_t10261)) (if l_d9890 (empty-state) l_t10261)))))) (let ((l_s9906 (singleton-state (quote l_range) (lookup (quote l_range) l_s9900)))) (let ((l_s9907 (merge-state l_s9900 l_s9906))) (let ((l_s9908 (let ((l_t10135 l_s9906)) (let ((l_p10136 l_s9901)) (if l_p10136 (merge-state l_p10136 (if l_d9890 (empty-state) l_t10135)) (if l_d9890 (empty-state) l_t10135)))))) (let ((l_s9913 (singleton-state (quote l_is_do) (lambda (l_p9917 l_d9918 l_l9919 l_this) (let ((l_s9916 (merge-state l_s9907 (state (quote l_this) l_this)))) (let ((l_t9920 (let ((l_t9921 #f)) (let ((l_p9922 l_p9917)) (if l_p9922 (merge-state l_p9922 (if l_d9918 (empty-state) l_t9921)) (if l_d9918 (empty-state) l_t9921)))))) (if l_l9919 (leave-collective l_l9919 l_t9920) l_t9920))))))) (let ((l_s9914 (merge-state l_s9907 l_s9913))) (let ((l_s9915 (let ((l_t10133 l_s9913)) (let ((l_p10134 l_s9908)) (if l_p10134 (merge-state l_p10134 (if l_d9890 (empty-state) l_t10133)) (if l_d9890 (empty-state) l_t10133)))))) (let ((l_s9925 (singleton-state (quote l_is_procedure) (lambda (l_p9929 l_d9930 l_l9931 l_this) (let ((l_s9928 (merge-state l_s9914 (state (quote l_this) l_this)))) (let ((l_t9932 (let ((l_t9933 #f)) (let ((l_p9934 l_p9929)) (if l_p9934 (merge-state l_p9934 (if l_d9930 (empty-state) l_t9933)) (if l_d9930 (empty-state) l_t9933)))))) (if l_l9931 (leave-collective l_l9931 l_t9932) l_t9932))))))) (let ((l_s9926 (merge-state l_s9914 l_s9925))) (let ((l_s9927 (let ((l_t10131 l_s9925)) (let ((l_p10132 l_s9915)) (if l_p10132 (merge-state l_p10132 (if l_d9890 (empty-state) l_t10131)) (if l_d9890 (empty-state) l_t10131)))))) (let ((l_s9937 (singleton-state (quote l_assigned) (lambda (l_p9941 l_d9942 l_l9943 l_this l_certain l_globals) (let ((l_s9940 (merge-state l_s9926 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (if (lookup (quote l_certain) l_s9940) (let ((l_t9946 (let ((l_t9947 (d_empty_list))) (let ((l_p9948 l_p9941)) (if l_p9948 (merge-state l_p9948 (if l_d9942 (empty-state) l_t9947)) (if l_d9942 (empty-state) l_t9947)))))) (if l_l9943 (leave-collective l_l9943 l_t9946) l_t9946)) (d_assigned l_p9941 l_d9942 l_l9943 (lookup (quote l_body) (lookup (quote l_this) l_s9940)) (lookup (quote l_certain) l_s9940) (lookup (quote l_globals) l_s9940)))))))) (let ((l_s9938 (merge-state l_s9926 l_s9937))) (let ((l_s9939 (let ((l_t10129 l_s9937)) (let ((l_p10130 l_s9927)) (if l_p10130 (merge-state l_p10130 (if l_d9890 (empty-state) l_t10129)) (if l_d9890 (empty-state) l_t10129)))))) (let ((l_s9959 (singleton-state (quote l_scope_violations) (lambda (l_p9963 l_d9964 l_l9965 l_this l_locals l_globals) (let ((l_s9962 (merge-state l_s9938 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (d_union l_p9963 l_d9964 l_l9965 (d_scope_violations #f #f #f (lookup (quote l_test) (lookup (quote l_this) l_s9962)) (lookup (quote l_locals) l_s9962) (lookup (quote l_globals) l_s9962)) (d_scope_violations #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s9962)) (lookup (quote l_locals) l_s9962) (lookup (quote l_globals) l_s9962)))))))) (let ((l_s9960 (merge-state l_s9938 l_s9959))) (let ((l_s9961 (let ((l_t10127 l_s9959)) (let ((l_p10128 l_s9939)) (if l_p10128 (merge-state l_p10128 (if l_d9890 (empty-state) l_t10127)) (if l_d9890 (empty-state) l_t10127)))))) (let ((l_s9984 (singleton-state (quote l_scheme_code) (lambda (l_p9988 l_d9989 l_l9990 l_this l_state l_prior l_doing l_link) (let ((l_s9987 (merge-state l_s9960 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (let ((l_s9991 (merge-state l_s9987 (let ((l_s9992 (singleton-state (quote l_s0) (d_gen_scheme_var #f #f #f "s")))) (let ((l_s9993 (merge-state l_s9987 l_s9992))) (let ((l_s9994 l_s9992)) (let ((l_s9999 (singleton-state (quote l_s1) (d_gen_scheme_var #f #f #f "s")))) (let ((l_s10000 (merge-state l_s9993 l_s9999))) (let ((l_s10001 (merge-state (or l_s9994 (empty-state)) l_s9999))) (merge-state (or l_s10001 (empty-state)) (singleton-state (quote l_s2) (d_gen_scheme_var #f #f #f "s")))))))))))) (d_scheme_let l_p9988 l_d9989 l_l9990 (lookup (quote l_s0) l_s9991) (d_scheme_empty_state #f #f #f) (d_scheme_let #f #f #f (lookup (quote l_s1) l_s9991) (lookup (quote l_state) l_s9991) (d_scheme_application #f #f #f "begin" (d_cons (d_scheme_application #f #f #f "while" (d_cons (d_gen_scheme_code #f #f #f (lookup (quote l_test) (lookup (quote l_this) l_s9991)) (lookup (quote l_s1) l_s9991)) (d_cons (d_scheme_let #f #f #f (lookup (quote l_s2) l_s9991) (d_gen_scheme_code #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s9991)) (lookup (quote l_s1) l_s9991)) (d_scheme_application #f #f #f "begin" (d_cons (d_scheme_application #f #f #f "set!" (d_cons (lookup (quote l_s0) l_s9991) (d_cons (d_scheme_merge_state #f #f #f (lookup (quote l_s0) l_s9991) (lookup (quote l_s2) l_s9991)) (d_empty_list)))) (d_cons (d_scheme_application #f #f #f "set!" (d_cons (lookup (quote l_s1) l_s9991) (d_cons (d_scheme_merge_state #f #f #f (lookup (quote l_s1) l_s9991) (lookup (quote l_s2) l_s9991)) (d_empty_list)))) (d_empty_list))))) (d_empty_list)))) (d_cons (d_result_code #f #f #f (lookup (quote l_s0) l_s9991) (lookup (quote l_prior) l_s9991) (lookup (quote l_doing) l_s9991) (lookup (quote l_link) l_s9991)) (d_empty_list)))))))))))) (let ((l_s9985 (merge-state l_s9960 l_s9984))) (let ((l_s9986 (let ((l_t10125 l_s9984)) (let ((l_p10126 l_s9961)) (if l_p10126 (merge-state l_p10126 (if l_d9890 (empty-state) l_t10125)) (if l_d9890 (empty-state) l_t10125)))))) (let ((l_t10122 (let ((l_t10123 (singleton-state (quote l_pretty) (lambda (l_p10097 l_d10098 l_l10099 l_this) (let ((l_s10096 (merge-state l_s9985 (state (quote l_this) l_this)))) (let ((l_t10119 (let ((l_t10120 (d_format "while $x do $y end" (let ((l_s10102 (singleton-state (quote l_x) (d_pretty #f #f #f (lookup (quote l_test) (lookup (quote l_this) l_s10096)))))) (let ((l_s10103 (merge-state l_s10096 l_s10102))) (let ((l_s10104 l_s10102)) (merge-state (or l_s10104 (empty-state)) (singleton-state (quote l_y) (d_pretty #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10103))))))))))) (let ((l_p10121 l_p10097)) (if l_p10121 (merge-state l_p10121 (if l_d10098 (empty-state) l_t10120)) (if l_d10098 (empty-state) l_t10120)))))) (if l_l10099 (leave-collective l_l10099 l_t10119) l_t10119))))))) (let ((l_p10124 l_s9986)) (if l_p10124 (merge-state l_p10124 (if l_d9890 (empty-state) l_t10123)) (if l_d9890 (empty-state) l_t10123)))))) (if l_l9891 (leave-collective l_l9891 l_t10122) l_t10122)))))))))))))))))))))))))))))

(define d_make_try (lambda (l_p10268 l_d10269 l_l10270 l_x l_y l_z l_range) (let ((l_s10267 (state (quote l_x) l_x (quote l_y) l_y (quote l_z) l_z (quote l_range) l_range))) (let ((l_s10271 (singleton-state (quote l_body) (lookup (quote l_x) l_s10267)))) (let ((l_s10272 (merge-state l_s10267 l_s10271))) (let ((l_s10273 (let ((l_t10536 l_s10271)) (let ((l_p10537 l_p10268)) (if l_p10537 (merge-state l_p10537 (if l_d10269 (empty-state) l_t10536)) (if l_d10269 (empty-state) l_t10536)))))) (let ((l_s10278 (singleton-state (quote l_var) (lookup (quote l_y) l_s10272)))) (let ((l_s10279 (merge-state l_s10272 l_s10278))) (let ((l_s10280 (let ((l_t10534 l_s10278)) (let ((l_p10535 l_s10273)) (if l_p10535 (merge-state l_p10535 (if l_d10269 (empty-state) l_t10534)) (if l_d10269 (empty-state) l_t10534)))))) (let ((l_s10285 (singleton-state (quote l_range) (lookup (quote l_range) l_s10279)))) (let ((l_s10286 (merge-state l_s10279 l_s10285))) (let ((l_s10287 (let ((l_t10532 l_s10285)) (let ((l_p10533 l_s10280)) (if l_p10533 (merge-state l_p10533 (if l_d10269 (empty-state) l_t10532)) (if l_d10269 (empty-state) l_t10532)))))) (let ((l_s10292 (singleton-state (quote l_handler) (lookup (quote l_z) l_s10286)))) (let ((l_s10293 (merge-state l_s10286 l_s10292))) (let ((l_s10294 (let ((l_t10530 l_s10292)) (let ((l_p10531 l_s10287)) (if l_p10531 (merge-state l_p10531 (if l_d10269 (empty-state) l_t10530)) (if l_d10269 (empty-state) l_t10530)))))) (let ((l_s10299 (singleton-state (quote l_is_do) (lambda (l_p10303 l_d10304 l_l10305 l_this) (let ((l_s10302 (merge-state l_s10293 (state (quote l_this) l_this)))) (let ((l_t10306 (let ((l_t10307 #f)) (let ((l_p10308 l_p10303)) (if l_p10308 (merge-state l_p10308 (if l_d10304 (empty-state) l_t10307)) (if l_d10304 (empty-state) l_t10307)))))) (if l_l10305 (leave-collective l_l10305 l_t10306) l_t10306))))))) (let ((l_s10300 (merge-state l_s10293 l_s10299))) (let ((l_s10301 (let ((l_t10528 l_s10299)) (let ((l_p10529 l_s10294)) (if l_p10529 (merge-state l_p10529 (if l_d10269 (empty-state) l_t10528)) (if l_d10269 (empty-state) l_t10528)))))) (let ((l_s10311 (singleton-state (quote l_is_procedure) (lambda (l_p10315 l_d10316 l_l10317 l_this) (let ((l_s10314 (merge-state l_s10300 (state (quote l_this) l_this)))) (let ((l_t10318 (let ((l_t10319 #f)) (let ((l_p10320 l_p10315)) (if l_p10320 (merge-state l_p10320 (if l_d10316 (empty-state) l_t10319)) (if l_d10316 (empty-state) l_t10319)))))) (if l_l10317 (leave-collective l_l10317 l_t10318) l_t10318))))))) (let ((l_s10312 (merge-state l_s10300 l_s10311))) (let ((l_s10313 (let ((l_t10526 l_s10311)) (let ((l_p10527 l_s10301)) (if l_p10527 (merge-state l_p10527 (if l_d10269 (empty-state) l_t10526)) (if l_d10269 (empty-state) l_t10526)))))) (let ((l_s10323 (singleton-state (quote l_assigned) (lambda (l_p10327 l_d10328 l_l10329 l_this l_certain l_globals) (let ((l_s10326 (merge-state l_s10312 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (d_apply l_p10327 l_d10328 l_l10329 (if (lookup (quote l_certain) l_s10326) d_intersection d_union) (d_tuple (d_assigned #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10326)) (lookup (quote l_certain) l_s10326) (lookup (quote l_globals) l_s10326)) (d_assigned #f #f #f (lookup (quote l_handler) (lookup (quote l_this) l_s10326)) (lookup (quote l_certain) l_s10326) (lookup (quote l_globals) l_s10326))))))))) (let ((l_s10324 (merge-state l_s10312 l_s10323))) (let ((l_s10325 (let ((l_t10524 l_s10323)) (let ((l_p10525 l_s10313)) (if l_p10525 (merge-state l_p10525 (if l_d10269 (empty-state) l_t10524)) (if l_d10269 (empty-state) l_t10524)))))) (let ((l_s10356 (singleton-state (quote l_scope_violations) (lambda (l_p10360 l_d10361 l_l10362 l_this l_locals l_globals) (let ((l_s10359 (merge-state l_s10324 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (d_union l_p10360 l_d10361 l_l10362 (d_scope_violations #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10359)) (lookup (quote l_locals) l_s10359) (lookup (quote l_globals) l_s10359)) (d_scope_violations #f #f #f (lookup (quote l_handler) (lookup (quote l_this) l_s10359)) (d_union #f #f #f (d_cons (lookup (quote l_var) (lookup (quote l_this) l_s10359)) (d_empty_list)) (lookup (quote l_locals) l_s10359)) (lookup (quote l_globals) l_s10359)))))))) (let ((l_s10357 (merge-state l_s10324 l_s10356))) (let ((l_s10358 (let ((l_t10522 l_s10356)) (let ((l_p10523 l_s10325)) (if l_p10523 (merge-state l_p10523 (if l_d10269 (empty-state) l_t10522)) (if l_d10269 (empty-state) l_t10522)))))) (let ((l_s10389 (singleton-state (quote l_scheme_code) (lambda (l_p10393 l_d10394 l_l10395 l_this l_state l_prior l_doing l_link) (let ((l_s10392 (merge-state l_s10357 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (let ((l_s10396 (merge-state l_s10392 (let ((l_s10397 (singleton-state (quote l_st) (d_gen_scheme_var #f #f #f "s")))) (let ((l_s10398 (merge-state l_s10392 l_s10397))) (let ((l_s10399 l_s10397)) (let ((l_s10404 (singleton-state (quote l_name) (d_local_name #f #f #f (lookup (quote l_var) (lookup (quote l_this) l_s10398)))))) (let ((l_s10405 (merge-state l_s10398 l_s10404))) (let ((l_s10406 (merge-state (or l_s10399 (empty-state)) l_s10404))) (let ((l_s10413 (singleton-state (quote l_name_atom) (d_scheme_atom #f #f #f (lookup (quote l_name) l_s10405))))) (let ((l_s10414 (merge-state l_s10405 l_s10413))) (let ((l_s10415 (merge-state (or l_s10406 (empty-state)) l_s10413))) (merge-state (or l_s10415 (empty-state)) (singleton-state (quote l_handler) (d_scheme_lambda #f #f #f (d_cons (lookup (quote l_name_atom) l_s10414) (d_empty_list)) (d_scheme_let #f #f #f (lookup (quote l_st) l_s10414) (d_scheme_merge_state #f #f #f (lookup (quote l_state) l_s10414) (d_scheme_single_state #f #f #f (lookup (quote l_name) l_s10414) (d_scheme_application #f #f #f "exn-message" (d_cons (lookup (quote l_name_atom) l_s10414) (d_empty_list))))) (d_gen_scheme_code #f #f #f (lookup (quote l_handler) (lookup (quote l_this) l_s10414)) (lookup (quote l_st) l_s10414)))))))))))))))))) (d_result_code l_p10393 l_d10394 l_l10395 (d_scheme_application #f #f #f "try-catch" (d_cons (d_scheme_lambda #f #f #f (d_empty_list) (d_gen_scheme_code #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10396)) (lookup (quote l_state) l_s10396))) (d_cons (lookup (quote l_handler) l_s10396) (d_empty_list)))) (lookup (quote l_prior) l_s10396) (lookup (quote l_doing) l_s10396) (lookup (quote l_link) l_s10396)))))))) (let ((l_s10390 (merge-state l_s10357 l_s10389))) (let ((l_s10391 (let ((l_t10520 l_s10389)) (let ((l_p10521 l_s10358)) (if l_p10521 (merge-state l_p10521 (if l_d10269 (empty-state) l_t10520)) (if l_d10269 (empty-state) l_t10520)))))) (let ((l_t10517 (let ((l_t10518 (singleton-state (quote l_pretty) (lambda (l_p10481 l_d10482 l_l10483 l_this) (let ((l_s10480 (merge-state l_s10390 (state (quote l_this) l_this)))) (let ((l_t10514 (let ((l_t10515 (d_format "try $x catch ($y) $z end" (let ((l_s10486 (singleton-state (quote l_x) (d_pretty #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10480)))))) (let ((l_s10487 (merge-state l_s10480 l_s10486))) (let ((l_s10488 l_s10486)) (let ((l_s10495 (singleton-state (quote l_y) (lookup (quote l_var) (lookup (quote l_this) l_s10487))))) (let ((l_s10496 (merge-state l_s10487 l_s10495))) (let ((l_s10497 (merge-state (or l_s10488 (empty-state)) l_s10495))) (merge-state (or l_s10497 (empty-state)) (singleton-state (quote l_z) (d_pretty #f #f #f (lookup (quote l_handler) (lookup (quote l_this) l_s10496)))))))))))))) (let ((l_p10516 l_p10481)) (if l_p10516 (merge-state l_p10516 (if l_d10482 (empty-state) l_t10515)) (if l_d10482 (empty-state) l_t10515)))))) (if l_l10483 (leave-collective l_l10483 l_t10514) l_t10514))))))) (let ((l_p10519 l_s10391)) (if l_p10519 (merge-state l_p10519 (if l_d10269 (empty-state) l_t10518)) (if l_d10269 (empty-state) l_t10518)))))) (if l_l10270 (leave-collective l_l10270 l_t10517) l_t10517))))))))))))))))))))))))))))))))

(define d_make_let (lambda (l_p10541 l_d10542 l_l10543 l_x l_y l_range) (let ((l_s10540 (state (quote l_x) l_x (quote l_y) l_y (quote l_range) l_range))) (let ((l_s10544 (singleton-state (quote l_binding) (lookup (quote l_x) l_s10540)))) (let ((l_s10545 (merge-state l_s10540 l_s10544))) (let ((l_s10546 (let ((l_t10756 l_s10544)) (let ((l_p10757 l_p10541)) (if l_p10757 (merge-state l_p10757 (if l_d10542 (empty-state) l_t10756)) (if l_d10542 (empty-state) l_t10756)))))) (let ((l_s10551 (singleton-state (quote l_body) (lookup (quote l_y) l_s10545)))) (let ((l_s10552 (merge-state l_s10545 l_s10551))) (let ((l_s10553 (let ((l_t10754 l_s10551)) (let ((l_p10755 l_s10546)) (if l_p10755 (merge-state l_p10755 (if l_d10542 (empty-state) l_t10754)) (if l_d10542 (empty-state) l_t10754)))))) (let ((l_s10558 (singleton-state (quote l_range) (lookup (quote l_range) l_s10552)))) (let ((l_s10559 (merge-state l_s10552 l_s10558))) (let ((l_s10560 (let ((l_t10752 l_s10558)) (let ((l_p10753 l_s10553)) (if l_p10753 (merge-state l_p10753 (if l_d10542 (empty-state) l_t10752)) (if l_d10542 (empty-state) l_t10752)))))) (let ((l_s10565 (singleton-state (quote l_is_do) (lambda (l_p10569 l_d10570 l_l10571 l_this) (let ((l_s10568 (merge-state l_s10559 (state (quote l_this) l_this)))) (let ((l_t10572 (let ((l_t10573 #f)) (let ((l_p10574 l_p10569)) (if l_p10574 (merge-state l_p10574 (if l_d10570 (empty-state) l_t10573)) (if l_d10570 (empty-state) l_t10573)))))) (if l_l10571 (leave-collective l_l10571 l_t10572) l_t10572))))))) (let ((l_s10566 (merge-state l_s10559 l_s10565))) (let ((l_s10567 (let ((l_t10750 l_s10565)) (let ((l_p10751 l_s10560)) (if l_p10751 (merge-state l_p10751 (if l_d10542 (empty-state) l_t10750)) (if l_d10542 (empty-state) l_t10750)))))) (let ((l_s10577 (singleton-state (quote l_is_procedure) (lambda (l_p10581 l_d10582 l_l10583 l_this) (let ((l_s10580 (merge-state l_s10566 (state (quote l_this) l_this)))) (let ((l_t10584 (let ((l_t10585 #f)) (let ((l_p10586 l_p10581)) (if l_p10586 (merge-state l_p10586 (if l_d10582 (empty-state) l_t10585)) (if l_d10582 (empty-state) l_t10585)))))) (if l_l10583 (leave-collective l_l10583 l_t10584) l_t10584))))))) (let ((l_s10578 (merge-state l_s10566 l_s10577))) (let ((l_s10579 (let ((l_t10748 l_s10577)) (let ((l_p10749 l_s10567)) (if l_p10749 (merge-state l_p10749 (if l_d10542 (empty-state) l_t10748)) (if l_d10542 (empty-state) l_t10748)))))) (let ((l_s10589 (singleton-state (quote l_assigned) (lambda (l_p10593 l_d10594 l_l10595 l_this l_certain l_globals) (let ((l_s10592 (merge-state l_s10578 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (d_assigned l_p10593 l_d10594 l_l10595 (lookup (quote l_body) (lookup (quote l_this) l_s10592)) (lookup (quote l_certain) l_s10592) (lookup (quote l_globals) l_s10592))))))) (let ((l_s10590 (merge-state l_s10578 l_s10589))) (let ((l_s10591 (let ((l_t10746 l_s10589)) (let ((l_p10747 l_s10579)) (if l_p10747 (merge-state l_p10747 (if l_d10542 (empty-state) l_t10746)) (if l_d10542 (empty-state) l_t10746)))))) (let ((l_s10644 (singleton-state (quote l_scope_violations) (lambda (l_p10648 l_d10649 l_l10650 l_this l_locals l_globals) (let ((l_s10647 (merge-state l_s10590 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (d_union l_p10648 l_d10649 l_l10650 (d_scope_violations #f #f #f (lookup (quote l_binding) (lookup (quote l_this) l_s10647)) (lookup (quote l_locals) l_s10647) (lookup (quote l_globals) l_s10647)) (d_scope_violations #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10647)) (d_union #f #f #f (d_assigned #f #f #f (lookup (quote l_binding) (lookup (quote l_this) l_s10647)) #t (lookup (quote l_globals) l_s10647)) (lookup (quote l_locals) l_s10647)) (lookup (quote l_globals) l_s10647)))))))) (let ((l_s10645 (merge-state l_s10590 l_s10644))) (let ((l_s10646 (let ((l_t10744 l_s10644)) (let ((l_p10745 l_s10591)) (if l_p10745 (merge-state l_p10745 (if l_d10542 (empty-state) l_t10744)) (if l_d10542 (empty-state) l_t10744)))))) (let ((l_s10677 (singleton-state (quote l_scheme_code) (lambda (l_p10681 l_d10682 l_l10683 l_this l_state l_prior l_doing l_link) (let ((l_s10680 (merge-state l_s10645 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (let ((l_s10684 (merge-state l_s10680 (singleton-state (quote l_st) (d_gen_scheme_var #f #f #f "s"))))) (d_scheme_let l_p10681 l_d10682 l_l10683 (lookup (quote l_st) l_s10684) (d_scheme_merge_state #f #f #f (lookup (quote l_state) l_s10684) (d_gen_scheme_code #f #f #f (lookup (quote l_binding) (lookup (quote l_this) l_s10684)) (lookup (quote l_state) l_s10684))) (d_scheme_code #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10684)) (lookup (quote l_st) l_s10684) (lookup (quote l_prior) l_s10684) (lookup (quote l_doing) l_s10684) (lookup (quote l_link) l_s10684))))))))) (let ((l_s10678 (merge-state l_s10645 l_s10677))) (let ((l_s10679 (let ((l_t10742 l_s10677)) (let ((l_p10743 l_s10646)) (if l_p10743 (merge-state l_p10743 (if l_d10542 (empty-state) l_t10742)) (if l_d10542 (empty-state) l_t10742)))))) (let ((l_t10739 (let ((l_t10740 (singleton-state (quote l_pretty) (lambda (l_p10714 l_d10715 l_l10716 l_this) (let ((l_s10713 (merge-state l_s10678 (state (quote l_this) l_this)))) (let ((l_t10736 (let ((l_t10737 (d_format "let $x in $y end" (let ((l_s10719 (singleton-state (quote l_x) (d_pretty #f #f #f (lookup (quote l_binding) (lookup (quote l_this) l_s10713)))))) (let ((l_s10720 (merge-state l_s10713 l_s10719))) (let ((l_s10721 l_s10719)) (merge-state (or l_s10721 (empty-state)) (singleton-state (quote l_y) (d_pretty #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10720))))))))))) (let ((l_p10738 l_p10714)) (if l_p10738 (merge-state l_p10738 (if l_d10715 (empty-state) l_t10737)) (if l_d10715 (empty-state) l_t10737)))))) (if l_l10716 (leave-collective l_l10716 l_t10736) l_t10736))))))) (let ((l_p10741 l_s10679)) (if l_p10741 (merge-state l_p10741 (if l_d10542 (empty-state) l_t10740)) (if l_d10542 (empty-state) l_t10740)))))) (if l_l10543 (leave-collective l_l10543 l_t10739) l_t10739)))))))))))))))))))))))))))))

(define d_make_state_deref (lambda (l_p10761 l_d10762 l_l10763 l_x l_y l_range) (let ((l_s10760 (state (quote l_x) l_x (quote l_y) l_y (quote l_range) l_range))) (let ((l_s10764 (singleton-state (quote l_body) (lookup (quote l_x) l_s10760)))) (let ((l_s10765 (merge-state l_s10760 l_s10764))) (let ((l_s10766 (let ((l_t10908 l_s10764)) (let ((l_p10909 l_p10761)) (if l_p10909 (merge-state l_p10909 (if l_d10762 (empty-state) l_t10908)) (if l_d10762 (empty-state) l_t10908)))))) (let ((l_s10771 (singleton-state (quote l_name) (lookup (quote l_y) l_s10765)))) (let ((l_s10772 (merge-state l_s10765 l_s10771))) (let ((l_s10773 (let ((l_t10906 l_s10771)) (let ((l_p10907 l_s10766)) (if l_p10907 (merge-state l_p10907 (if l_d10762 (empty-state) l_t10906)) (if l_d10762 (empty-state) l_t10906)))))) (let ((l_s10778 (singleton-state (quote l_range) (lookup (quote l_range) l_s10772)))) (let ((l_s10779 (merge-state l_s10772 l_s10778))) (let ((l_s10780 (let ((l_t10904 l_s10778)) (let ((l_p10905 l_s10773)) (if l_p10905 (merge-state l_p10905 (if l_d10762 (empty-state) l_t10904)) (if l_d10762 (empty-state) l_t10904)))))) (let ((l_s10785 (singleton-state (quote l_is_do) (lambda (l_p10789 l_d10790 l_l10791 l_this) (let ((l_s10788 (merge-state l_s10779 (state (quote l_this) l_this)))) (let ((l_t10792 (let ((l_t10793 #f)) (let ((l_p10794 l_p10789)) (if l_p10794 (merge-state l_p10794 (if l_d10790 (empty-state) l_t10793)) (if l_d10790 (empty-state) l_t10793)))))) (if l_l10791 (leave-collective l_l10791 l_t10792) l_t10792))))))) (let ((l_s10786 (merge-state l_s10779 l_s10785))) (let ((l_s10787 (let ((l_t10902 l_s10785)) (let ((l_p10903 l_s10780)) (if l_p10903 (merge-state l_p10903 (if l_d10762 (empty-state) l_t10902)) (if l_d10762 (empty-state) l_t10902)))))) (let ((l_s10797 (singleton-state (quote l_is_procedure) (lambda (l_p10801 l_d10802 l_l10803 l_this) (let ((l_s10800 (merge-state l_s10786 (state (quote l_this) l_this)))) (let ((l_t10804 (let ((l_t10805 #f)) (let ((l_p10806 l_p10801)) (if l_p10806 (merge-state l_p10806 (if l_d10802 (empty-state) l_t10805)) (if l_d10802 (empty-state) l_t10805)))))) (if l_l10803 (leave-collective l_l10803 l_t10804) l_t10804))))))) (let ((l_s10798 (merge-state l_s10786 l_s10797))) (let ((l_s10799 (let ((l_t10900 l_s10797)) (let ((l_p10901 l_s10787)) (if l_p10901 (merge-state l_p10901 (if l_d10762 (empty-state) l_t10900)) (if l_d10762 (empty-state) l_t10900)))))) (let ((l_s10809 (singleton-state (quote l_assigned) (lambda (l_p10813 l_d10814 l_l10815 l_this l_certain l_globals) (let ((l_s10812 (merge-state l_s10798 (state (quote l_this) l_this (quote l_certain) l_certain (quote l_globals) l_globals)))) (let ((l_t10816 (let ((l_t10817 (d_empty_list))) (let ((l_p10818 l_p10813)) (if l_p10818 (merge-state l_p10818 (if l_d10814 (empty-state) l_t10817)) (if l_d10814 (empty-state) l_t10817)))))) (if l_l10815 (leave-collective l_l10815 l_t10816) l_t10816))))))) (let ((l_s10810 (merge-state l_s10798 l_s10809))) (let ((l_s10811 (let ((l_t10898 l_s10809)) (let ((l_p10899 l_s10799)) (if l_p10899 (merge-state l_p10899 (if l_d10762 (empty-state) l_t10898)) (if l_d10762 (empty-state) l_t10898)))))) (let ((l_s10821 (singleton-state (quote l_scope_violations) (lambda (l_p10825 l_d10826 l_l10827 l_this l_locals l_globals) (let ((l_s10824 (merge-state l_s10810 (state (quote l_this) l_this (quote l_locals) l_locals (quote l_globals) l_globals)))) (d_union l_p10825 l_d10826 l_l10827 (d_scope_violations #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10824)) (lookup (quote l_locals) l_s10824) (lookup (quote l_globals) l_s10824)) (d_empty_list))))))) (let ((l_s10822 (merge-state l_s10810 l_s10821))) (let ((l_s10823 (let ((l_t10896 l_s10821)) (let ((l_p10897 l_s10811)) (if l_p10897 (merge-state l_p10897 (if l_d10762 (empty-state) l_t10896)) (if l_d10762 (empty-state) l_t10896)))))) (let ((l_s10840 (singleton-state (quote l_scheme_code) (lambda (l_p10844 l_d10845 l_l10846 l_this l_state l_prior l_doing l_link) (let ((l_s10843 (merge-state l_s10822 (state (quote l_this) l_this (quote l_state) l_state (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link)))) (d_result_code l_p10844 l_d10845 l_l10846 (d_scheme_lookup #f #f #f (d_local_name #f #f #f (lookup (quote l_name) (lookup (quote l_this) l_s10843))) (d_gen_scheme_code #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10843)) (lookup (quote l_state) l_s10843))) (lookup (quote l_prior) l_s10843) (lookup (quote l_doing) l_s10843) (lookup (quote l_link) l_s10843))))))) (let ((l_s10841 (merge-state l_s10822 l_s10840))) (let ((l_s10842 (let ((l_t10894 l_s10840)) (let ((l_p10895 l_s10823)) (if l_p10895 (merge-state l_p10895 (if l_d10762 (empty-state) l_t10894)) (if l_d10762 (empty-state) l_t10894)))))) (let ((l_t10891 (let ((l_t10892 (singleton-state (quote l_pretty) (lambda (l_p10866 l_d10867 l_l10868 l_this) (let ((l_s10865 (merge-state l_s10841 (state (quote l_this) l_this)))) (let ((l_t10888 (let ((l_t10889 (d_format "$exp.$var" (let ((l_s10871 (singleton-state (quote l_exp) (d_pretty #f #f #f (lookup (quote l_body) (lookup (quote l_this) l_s10865)))))) (let ((l_s10872 (merge-state l_s10865 l_s10871))) (let ((l_s10873 l_s10871)) (merge-state (or l_s10873 (empty-state)) (singleton-state (quote l_var) (lookup (quote l_name) (lookup (quote l_this) l_s10872)))))))))) (let ((l_p10890 l_p10866)) (if l_p10890 (merge-state l_p10890 (if l_d10867 (empty-state) l_t10889)) (if l_d10867 (empty-state) l_t10889)))))) (if l_l10868 (leave-collective l_l10868 l_t10888) l_t10888))))))) (let ((l_p10893 l_s10842)) (if l_p10893 (merge-state l_p10893 (if l_d10762 (empty-state) l_t10892)) (if l_d10762 (empty-state) l_t10892)))))) (if l_l10763 (leave-collective l_l10763 l_t10891) l_t10891)))))))))))))))))))))))))))))

(define d_result_code (lambda (l_p10913 l_d10914 l_l10915 l_code l_prior l_doing l_link) (let ((l_s10912 (state (quote l_code) l_code (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link))) (if (equal? (lookup (quote l_link) l_s10912) (d_scheme_false #f #f #f)) (d_result_code2 l_p10913 l_d10914 l_l10915 (lookup (quote l_code) l_s10912) (lookup (quote l_prior) l_s10912) (lookup (quote l_doing) l_s10912) (lookup (quote l_link) l_s10912)) (let ((l_s10928 (merge-state l_s10912 (singleton-state (quote l_tmp) (d_gen_scheme_var #f #f #f "t"))))) (d_scheme_let l_p10913 l_d10914 l_l10915 (lookup (quote l_tmp) l_s10928) (d_result_code2 #f #f #f (lookup (quote l_code) l_s10928) (lookup (quote l_prior) l_s10928) (lookup (quote l_doing) l_s10928) (lookup (quote l_link) l_s10928)) (d_scheme_if #f #f #f (lookup (quote l_link) l_s10928) (d_scheme_application #f #f #f "leave-collective" (d_cons (lookup (quote l_link) l_s10928) (d_cons (lookup (quote l_tmp) l_s10928) (d_empty_list)))) (lookup (quote l_tmp) l_s10928))))))))

(define d_result_code2 (lambda (l_p10962 l_d10963 l_l10964 l_code l_prior l_doing l_link) (let ((l_s10961 (state (quote l_code) l_code (quote l_prior) l_prior (quote l_doing) l_doing (quote l_link) l_link))) (let ((l_s10965 (merge-state l_s10961 (let ((l_s10966 (singleton-state (quote l_tmp) (d_gen_scheme_var #f #f #f "t")))) (let ((l_s10967 (merge-state l_s10961 l_s10966))) (let ((l_s10968 l_s10966)) (merge-state (or l_s10968 (empty-state)) (singleton-state (quote l_pr) (d_gen_scheme_var #f #f #f "p"))))))))) (if (if (equal? (lookup (quote l_prior) l_s10965) (d_scheme_false #f #f #f)) (equal? (lookup (quote l_doing) l_s10965) (d_scheme_false #f #f #f)) #f) (let ((l_t10989 (let ((l_t10990 (lookup (quote l_code) l_s10965))) (let ((l_p10991 l_p10962)) (if l_p10991 (merge-state l_p10991 (if l_d10963 (empty-state) l_t10990)) (if l_d10963 (empty-state) l_t10990)))))) (if l_l10964 (leave-collective l_l10964 l_t10989) l_t10989)) (if (if (equal? (lookup (quote l_prior) l_s10965) (d_scheme_false #f #f #f)) (equal? (lookup (quote l_doing) l_s10965) (d_scheme_true #f #f #f)) #f) (d_scheme_let l_p10962 l_d10963 l_l10964 (lookup (quote l_tmp) l_s10965) (lookup (quote l_code) l_s10965) (d_scheme_empty_state #f #f #f)) (if (equal? (lookup (quote l_prior) l_s10965) (d_scheme_false #f #f #f)) (d_scheme_let l_p10962 l_d10963 l_l10964 (lookup (quote l_tmp) l_s10965) (lookup (quote l_code) l_s10965) (d_scheme_if #f #f #f (lookup (quote l_doing) l_s10965) (d_scheme_empty_state #f #f #f) (lookup (quote l_tmp) l_s10965))) (if (equal? (lookup (quote l_doing) l_s10965) (d_scheme_false #f #f #f)) (d_scheme_merge_state l_p10962 l_d10963 l_l10964 (d_scheme_application #f #f #f "or" (d_cons (lookup (quote l_prior) l_s10965) (d_cons (d_scheme_empty_state #f #f #f) (d_empty_list)))) (lookup (quote l_code) l_s10965)) (if (equal? (lookup (quote l_doing) l_s10965) (d_scheme_true #f #f #f)) (d_scheme_let l_p10962 l_d10963 l_l10964 (lookup (quote l_tmp) l_s10965) (lookup (quote l_code) l_s10965) (d_scheme_application #f #f #f "or" (d_cons (lookup (quote l_prior) l_s10965) (d_cons (d_scheme_empty_state #f #f #f) (d_empty_list))))) (d_scheme_let l_p10962 l_d10963 l_l10964 (lookup (quote l_tmp) l_s10965) (lookup (quote l_code) l_s10965) (d_scheme_let #f #f #f (lookup (quote l_pr) l_s10965) (lookup (quote l_prior) l_s10965) (d_scheme_if #f #f #f (lookup (quote l_pr) l_s10965) (d_scheme_merge_state #f #f #f (lookup (quote l_pr) l_s10965) (d_scheme_if #f #f #f (lookup (quote l_doing) l_s10965) (d_scheme_empty_state #f #f #f) (lookup (quote l_tmp) l_s10965))) (d_scheme_if #f #f #f (lookup (quote l_doing) l_s10965) (d_scheme_empty_state #f #f #f) (lookup (quote l_tmp) l_s10965))))))))))))))

(define d_scheme_merge_state (lambda (l_p11075 l_d11076 l_l11077 l_x l_y) (let ((l_s11074 (state (quote l_x) l_x (quote l_y) l_y))) (if (equal? (lookup (quote l_x) l_s11074) (d_scheme_empty_state #f #f #f)) (let ((l_t11082 (let ((l_t11083 (lookup (quote l_y) l_s11074))) (let ((l_p11084 l_p11075)) (if l_p11084 (merge-state l_p11084 (if l_d11076 (empty-state) l_t11083)) (if l_d11076 (empty-state) l_t11083)))))) (if l_l11077 (leave-collective l_l11077 l_t11082) l_t11082)) (if (equal? (lookup (quote l_y) l_s11074) (d_scheme_empty_state #f #f #f)) (let ((l_t11089 (let ((l_t11090 (lookup (quote l_x) l_s11074))) (let ((l_p11091 l_p11075)) (if l_p11091 (merge-state l_p11091 (if l_d11076 (empty-state) l_t11090)) (if l_d11076 (empty-state) l_t11090)))))) (if l_l11077 (leave-collective l_l11077 l_t11089) l_t11089)) (d_scheme_application l_p11075 l_d11076 l_l11077 "merge-state" (d_cons (lookup (quote l_x) l_s11074) (d_cons (lookup (quote l_y) l_s11074) (d_empty_list)))))))))

(define d_delta_name (lambda (l_p11107 l_d11108 l_l11109 l_x) (let ((l_s11106 (state (quote l_x) l_x))) (if (equal? (lookup (quote l_x) l_s11106) "not") (let ((l_t11116 (let ((l_t11117 "not")) (let ((l_p11118 l_p11107)) (if l_p11118 (merge-state l_p11118 (if l_d11108 (empty-state) l_t11117)) (if l_d11108 (empty-state) l_t11117)))))) (if l_l11109 (leave-collective l_l11109 l_t11116) l_t11116)) (if (equal? (lookup (quote l_x) l_s11106) "equal") (let ((l_t11125 (let ((l_t11126 "equal?")) (let ((l_p11127 l_p11107)) (if l_p11127 (merge-state l_p11127 (if l_d11108 (empty-state) l_t11126)) (if l_d11108 (empty-state) l_t11126)))))) (if l_l11109 (leave-collective l_l11109 l_t11125) l_t11125)) (if (equal? (lookup (quote l_x) l_s11106) "sum") (let ((l_t11134 (let ((l_t11135 "+")) (let ((l_p11136 l_p11107)) (if l_p11136 (merge-state l_p11136 (if l_d11108 (empty-state) l_t11135)) (if l_d11108 (empty-state) l_t11135)))))) (if l_l11109 (leave-collective l_l11109 l_t11134) l_t11134)) (if (equal? (lookup (quote l_x) l_s11106) "minus") (let ((l_t11143 (let ((l_t11144 "-")) (let ((l_p11145 l_p11107)) (if l_p11145 (merge-state l_p11145 (if l_d11108 (empty-state) l_t11144)) (if l_d11108 (empty-state) l_t11144)))))) (if l_l11109 (leave-collective l_l11109 l_t11143) l_t11143)) (if (equal? (lookup (quote l_x) l_s11106) "multiply") (let ((l_t11152 (let ((l_t11153 "*")) (let ((l_p11154 l_p11107)) (if l_p11154 (merge-state l_p11154 (if l_d11108 (empty-state) l_t11153)) (if l_d11108 (empty-state) l_t11153)))))) (if l_l11109 (leave-collective l_l11109 l_t11152) l_t11152)) (if (equal? (lookup (quote l_x) l_s11106) "divide") (let ((l_t11161 (let ((l_t11162 "/")) (let ((l_p11163 l_p11107)) (if l_p11163 (merge-state l_p11163 (if l_d11108 (empty-state) l_t11162)) (if l_d11108 (empty-state) l_t11162)))))) (if l_l11109 (leave-collective l_l11109 l_t11161) l_t11161)) (let ((l_t11170 (let ((l_t11171 (d_format "d_$name" (singleton-state (quote l_name) (lookup (quote l_x) l_s11106))))) (let ((l_p11172 l_p11107)) (if l_p11172 (merge-state l_p11172 (if l_d11108 (empty-state) l_t11171)) (if l_d11108 (empty-state) l_t11171)))))) (if l_l11109 (leave-collective l_l11109 l_t11170) l_t11170)))))))))))

(define d_local_name (lambda (l_p11176 l_d11177 l_l11178 l_x) (let ((l_s11175 (state (quote l_x) l_x))) (let ((l_t11185 (let ((l_t11186 (d_format "l_$name" (singleton-state (quote l_name) (lookup (quote l_x) l_s11175))))) (let ((l_p11187 l_p11176)) (if l_p11187 (merge-state l_p11187 (if l_d11177 (empty-state) l_t11186)) (if l_d11177 (empty-state) l_t11186)))))) (if l_l11178 (leave-collective l_l11178 l_t11185) l_t11185)))))
