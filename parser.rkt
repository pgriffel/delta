#lang racket

;; Generated code for Delta module 'parser' 

(require delta/runtime)
(require delta/standard)
(require "token_stream.rkt")
(require "ast.rkt")
(require "location.rkt")
(require "config.rkt")

(provide d_read_module)

(define d_read_module (lambda (l_p287 l_d288 l_l289 l_name) (let ((l_s286 (state (quote l_name) l_name))) (let ((l_s290 (merge-state l_s286 (singleton-state (quote l_stream) (d_open_token_stream #f #f #f (lookup (quote l_name) l_s286)))))) (let ((l_t321 (let ((l_t322 (try-catch (lambda () (let ((l_s307 (merge-state l_s290 (let ((l_s308 (singleton-state (quote l_unit) (d_read_module_from_stream #f #f #f (lookup (quote l_stream) l_s290))))) (let ((l_s309 (merge-state l_s290 l_s308))) (let ((l_s310 l_s308)) (d_close_token_stream l_s310 #f #f (lookup (quote l_stream) l_s309)))))))) (lookup (quote l_unit) l_s307))) (lambda (l_x) (let ((l_s295 (merge-state l_s290 (singleton-state (quote l_x) (exn-message l_x))))) (let ((l_s296 (d_close_token_stream #f #f #f (lookup (quote l_stream) l_s295)))) (let ((l_s297 (merge-state l_s295 l_s296))) (let ((l_s298 l_s296)) (merge-state (or l_s298 (empty-state)) (d_throw (lookup (quote l_x) l_s297))))))))))) (let ((l_p323 l_p287)) (if l_p323 (merge-state l_p323 (if l_d288 (empty-state) l_t322)) (if l_d288 (empty-state) l_t322)))))) (if l_l289 (leave-collective l_l289 l_t321) l_t321))))))

(define d_read_module_from_stream (lambda (l_p327 l_d328 l_l329 l_stream) (let ((l_s326 (state (quote l_stream) l_stream))) (let ((l_s330 (merge-state l_s326 (let ((l_s331 (singleton-state (quote l_header) (d_read_header #f #f #f (lookup (quote l_stream) l_s326))))) (let ((l_s332 (merge-state l_s326 l_s331))) (let ((l_s333 l_s331)) (let ((l_s338 (singleton-state (quote l_includes) (d_empty_list)))) (let ((l_s339 (merge-state l_s332 l_s338))) (let ((l_s340 (merge-state (or l_s333 (empty-state)) l_s338))) (let ((l_s345 (singleton-state (quote l_types) (d_empty_list)))) (let ((l_s346 (merge-state l_s339 l_s345))) (let ((l_s347 (merge-state (or l_s340 (empty-state)) l_s345))) (let ((l_s352 (singleton-state (quote l_declarations) (d_empty_list)))) (let ((l_s353 (merge-state l_s346 l_s352))) (let ((l_s354 (merge-state (or l_s347 (empty-state)) l_s352))) (let ((l_s359 (singleton-state (quote l_elements) (d_empty_list)))) (let ((l_s360 (merge-state l_s353 l_s359))) (let ((l_s361 (merge-state (or l_s354 (empty-state)) l_s359))) (let ((l_s366 (empty-state))) (let ((l_s367 l_s360)) (begin (while (not (d_token_stream_eof #f #f #f (lookup (quote l_stream) l_s367))) (let ((l_s368 (let ((l_s373 (merge-state l_s367 (let ((l_s374 (singleton-state (quote l_is_public) #f))) (let ((l_s375 (merge-state l_s367 l_s374))) (let ((l_s376 l_s374)) (let ((l_s381 (singleton-state (quote l_range) (d_token_range #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s375)))))) (let ((l_s382 (merge-state l_s375 l_s381))) (let ((l_s383 (merge-state (or l_s376 (empty-state)) l_s381))) (let ((l_s388 (singleton-state (quote l_key) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s382))))) (let ((l_s389 (merge-state l_s382 l_s388))) (let ((l_s390 (merge-state (or l_s383 (empty-state)) l_s388))) (if (equal? (lookup (quote l_key) l_s389) "public") (let ((l_s401 (singleton-state (quote l_is_public) #t))) (let ((l_s402 (merge-state l_s389 l_s401))) (let ((l_s403 (merge-state (or l_s390 (empty-state)) l_s401))) (let ((l_s408 (singleton-state (quote l_range) (d_token_range #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s402)))))) (let ((l_s409 (merge-state l_s402 l_s408))) (let ((l_s410 (merge-state (or l_s403 (empty-state)) l_s408))) (merge-state (or l_s410 (empty-state)) (singleton-state (quote l_key) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s409)))))))))) (or l_s390 (empty-state))))))))))))))) (if (equal? (lookup (quote l_key) l_s373) "include") (singleton-state (quote l_includes) (d_append #f #f #f (d_read_include #f #f #f (lookup (quote l_stream) l_s373)) (lookup (quote l_includes) l_s373))) (if (equal? (lookup (quote l_key) l_s373) "type") (singleton-state (quote l_types) (d_cons (d_read_type_definition #f #f #f (lookup (quote l_stream) l_s373)) (lookup (quote l_types) l_s373))) (if (equal? (lookup (quote l_key) l_s373) "declare") (singleton-state (quote l_declarations) (d_cons (d_read_declaration #f #f #f (lookup (quote l_stream) l_s373)) (lookup (quote l_declarations) l_s373))) (let ((l_s1233 (merge-state l_s373 (singleton-state (quote l_def) (if (equal? (lookup (quote l_key) l_s373) "define") (d_read_definition #f #f #f (lookup (quote l_stream) l_s373) (lookup (quote l_is_public) l_s373)) (if (equal? (lookup (quote l_key) l_s373) "function") (d_read_function #f #f #f (lookup (quote l_stream) l_s373) (lookup (quote l_is_public) l_s373)) (if (equal? (lookup (quote l_key) l_s373) "procedure") (d_read_procedure #f #f #f (lookup (quote l_stream) l_s373) (lookup (quote l_is_public) l_s373)) (d_throw_with_range #f #f #f "Keyword $k is an unknown toplevel command" (singleton-state (quote l_k) (lookup (quote l_key) l_s373)) (lookup (quote l_range) l_s373))))))))) (singleton-state (quote l_elements) (d_cons (lookup (quote l_def) l_s1233) (lookup (quote l_elements) l_s1233)))))))))) (begin (set! l_s366 (merge-state l_s366 l_s368)) (set! l_s367 (merge-state l_s367 l_s368))))) (merge-state (or l_s361 (empty-state)) l_s366)))))))))))))))))))))) (d_make_module l_p327 l_d328 l_l329 (lookup (quote l_header) l_s330) (lookup (quote l_includes) l_s330) (d_reverse #f #f #f (lookup (quote l_elements) l_s330)))))))

(define d_read_header (lambda (l_p2319 l_d2320 l_l2321 l_stream) (let ((l_s2318 (state (quote l_stream) l_stream))) (let ((l_s2322 (merge-state l_s2318 (d_verify_key #f #t #f (lookup (quote l_stream) l_s2318) "module")))) (d_read_identifier l_p2319 l_d2320 l_l2321 (lookup (quote l_stream) l_s2322))))))

(define d_read_include (lambda (l_p2332 l_d2333 l_l2334 l_stream) (let ((l_s2331 (state (quote l_stream) l_stream))) (let ((l_s2335 (merge-state l_s2331 (let ((l_s2336 (singleton-state (quote l_names) (d_cons (d_read_identifier #f #f #f (lookup (quote l_stream) l_s2331)) (d_empty_list))))) (let ((l_s2337 (merge-state l_s2331 l_s2336))) (let ((l_s2338 l_s2336)) (let ((l_s2347 (empty-state))) (let ((l_s2348 l_s2337)) (begin (while (equal? (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s2348))) #\,) (let ((l_s2349 (let ((l_s2356 (d_skip_token #f #f #f (lookup (quote l_stream) l_s2348)))) (let ((l_s2357 (merge-state l_s2348 l_s2356))) (let ((l_s2358 l_s2356)) (merge-state (or l_s2358 (empty-state)) (singleton-state (quote l_names) (d_cons (d_read_identifier #f #f #f (lookup (quote l_stream) l_s2357)) (lookup (quote l_names) l_s2357))))))))) (begin (set! l_s2347 (merge-state l_s2347 l_s2349)) (set! l_s2348 (merge-state l_s2348 l_s2349))))) (merge-state (or l_s2338 (empty-state)) l_s2347)))))))))) (d_reverse l_p2332 l_d2333 l_l2334 (lookup (quote l_names) l_s2335))))))

(define d_read_declaration (lambda (l_p2380 l_d2381 l_l2382 l_stream) (let ((l_s2379 (state (quote l_stream) l_stream))) (let ((l_s2383 (merge-state l_s2379 (let ((l_s2384 (singleton-state (quote l_identifier) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s2379))))) (let ((l_s2385 (merge-state l_s2379 l_s2384))) (let ((l_s2386 l_s2384)) (let ((l_s2391 (d_verify_operator #f #f #f (lookup (quote l_stream) l_s2385) "::"))) (let ((l_s2392 (merge-state l_s2385 l_s2391))) (let ((l_s2393 (merge-state (or l_s2386 (empty-state)) l_s2391))) (merge-state (or l_s2393 (empty-state)) (singleton-state (quote l_expression) (d_read_type_schema #f #f #f (lookup (quote l_stream) l_s2392))))))))))))) (let ((l_s2406 (singleton-state (quote l_name) (lookup (quote l_identifier) l_s2383)))) (let ((l_s2407 (merge-state l_s2383 l_s2406))) (let ((l_s2408 (let ((l_t2418 l_s2406)) (let ((l_p2419 l_p2380)) (if l_p2419 (merge-state l_p2419 (if l_d2381 (empty-state) l_t2418)) (if l_d2381 (empty-state) l_t2418)))))) (let ((l_t2415 (let ((l_t2416 (singleton-state (quote l_type_expression) (lookup (quote l_expression) l_s2407)))) (let ((l_p2417 l_s2408)) (if l_p2417 (merge-state l_p2417 (if l_d2381 (empty-state) l_t2416)) (if l_d2381 (empty-state) l_t2416)))))) (if l_l2382 (leave-collective l_l2382 l_t2415) l_t2415)))))))))

(define d_read_type_definition (lambda (l_p2423 l_d2424 l_l2425 l_stream) (let ((l_s2422 (state (quote l_stream) l_stream))) (let ((l_s2426 (merge-state l_s2422 (let ((l_s2427 (singleton-state (quote l_identifier) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s2422))))) (let ((l_s2428 (merge-state l_s2422 l_s2427))) (let ((l_s2429 l_s2427)) (let ((l_s2434 (d_verify_operator #f #f #f (lookup (quote l_stream) l_s2428) "="))) (let ((l_s2435 (merge-state l_s2428 l_s2434))) (let ((l_s2436 (merge-state (or l_s2429 (empty-state)) l_s2434))) (merge-state (or l_s2436 (empty-state)) (singleton-state (quote l_expression) (d_read_type_schema #f #f #f (lookup (quote l_stream) l_s2435))))))))))))) (let ((l_s2449 (singleton-state (quote l_name) (lookup (quote l_identifier) l_s2426)))) (let ((l_s2450 (merge-state l_s2426 l_s2449))) (let ((l_s2451 (let ((l_t2461 l_s2449)) (let ((l_p2462 l_p2423)) (if l_p2462 (merge-state l_p2462 (if l_d2424 (empty-state) l_t2461)) (if l_d2424 (empty-state) l_t2461)))))) (let ((l_t2458 (let ((l_t2459 (singleton-state (quote l_type_expression) (lookup (quote l_expression) l_s2450)))) (let ((l_p2460 l_s2451)) (if l_p2460 (merge-state l_p2460 (if l_d2424 (empty-state) l_t2459)) (if l_d2424 (empty-state) l_t2459)))))) (if l_l2425 (leave-collective l_l2425 l_t2458) l_t2458)))))))))

(define d_read_definition (lambda (l_p2466 l_d2467 l_l2468 l_stream l_is_public) (let ((l_s2465 (state (quote l_stream) l_stream (quote l_is_public) l_is_public))) (let ((l_s2469 (merge-state l_s2465 (let ((l_s2470 (singleton-state (quote l_identifier) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s2465))))) (let ((l_s2471 (merge-state l_s2465 l_s2470))) (let ((l_s2472 l_s2470)) (let ((l_s2477 (d_verify_operator #f #f #f (lookup (quote l_stream) l_s2471) "="))) (let ((l_s2478 (merge-state l_s2471 l_s2477))) (let ((l_s2479 (merge-state (or l_s2472 (empty-state)) l_s2477))) (merge-state (or l_s2479 (empty-state)) (singleton-state (quote l_expression) (d_read_expression #f #f #f (lookup (quote l_stream) l_s2478))))))))))))) (d_make_definition l_p2466 l_d2467 l_l2468 (lookup (quote l_identifier) l_s2469) (lookup (quote l_expression) l_s2469) (lookup (quote l_is_public) l_s2469))))))

(define d_read_function (lambda (l_p2501 l_d2502 l_l2503 l_stream l_is_public) (let ((l_s2500 (state (quote l_stream) l_stream (quote l_is_public) l_is_public))) (let ((l_s2504 (merge-state l_s2500 (let ((l_s2505 (singleton-state (quote l_range) (d_token_range #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s2500)))))) (let ((l_s2506 (merge-state l_s2500 l_s2505))) (let ((l_s2507 l_s2505)) (let ((l_s2512 (singleton-state (quote l_identifier) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s2506))))) (let ((l_s2513 (merge-state l_s2506 l_s2512))) (let ((l_s2514 (merge-state (or l_s2507 (empty-state)) l_s2512))) (let ((l_s2519 (singleton-state (quote l_tuple) (lookup (quote l_value) (d_read_tuple #f #f #f (lookup (quote l_stream) l_s2513) d_read_identifier))))) (let ((l_s2520 (merge-state l_s2513 l_s2519))) (let ((l_s2521 (merge-state (or l_s2514 (empty-state)) l_s2519))) (let ((l_s2530 (d_verify_operator #f #f #f (lookup (quote l_stream) l_s2520) "="))) (let ((l_s2531 (merge-state l_s2520 l_s2530))) (let ((l_s2532 (merge-state (or l_s2521 (empty-state)) l_s2530))) (let ((l_s2537 (singleton-state (quote l_expression) (d_read_expression #f #f #f (lookup (quote l_stream) l_s2531))))) (let ((l_s2538 (merge-state l_s2531 l_s2537))) (let ((l_s2539 (merge-state (or l_s2532 (empty-state)) l_s2537))) (merge-state (or l_s2539 (empty-state)) (singleton-state (quote l_exp_range) (d_node_range #f #f #f (lookup (quote l_expression) l_s2538)))))))))))))))))))))) (d_make_definition l_p2501 l_d2502 l_l2503 (lookup (quote l_identifier) l_s2504) (d_make_abstraction #f #f #f (lookup (quote l_tuple) l_s2504) (lookup (quote l_expression) l_s2504) (d_combine_ranges #f #f #f (lookup (quote l_range) l_s2504) (lookup (quote l_exp_range) l_s2504))) (lookup (quote l_is_public) l_s2504))))))

(define d_read_procedure (lambda (l_p2573 l_d2574 l_l2575 l_stream l_is_public) (let ((l_s2572 (state (quote l_stream) l_stream (quote l_is_public) l_is_public))) (let ((l_s2576 (merge-state l_s2572 (let ((l_s2577 (singleton-state (quote l_range) (d_token_range #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s2572)))))) (let ((l_s2578 (merge-state l_s2572 l_s2577))) (let ((l_s2579 l_s2577)) (let ((l_s2584 (singleton-state (quote l_identifier) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s2578))))) (let ((l_s2585 (merge-state l_s2578 l_s2584))) (let ((l_s2586 (merge-state (or l_s2579 (empty-state)) l_s2584))) (let ((l_s2591 (singleton-state (quote l_tuple) (lookup (quote l_value) (d_read_tuple #f #f #f (lookup (quote l_stream) l_s2585) d_read_identifier))))) (let ((l_s2592 (merge-state l_s2585 l_s2591))) (let ((l_s2593 (merge-state (or l_s2586 (empty-state)) l_s2591))) (let ((l_s2602 (d_verify_operator #f #f #f (lookup (quote l_stream) l_s2592) "="))) (let ((l_s2603 (merge-state l_s2592 l_s2602))) (let ((l_s2604 (merge-state (or l_s2593 (empty-state)) l_s2602))) (let ((l_s2609 (singleton-state (quote l_expression) (d_read_expression #f #f #f (lookup (quote l_stream) l_s2603))))) (let ((l_s2610 (merge-state l_s2603 l_s2609))) (let ((l_s2611 (merge-state (or l_s2604 (empty-state)) l_s2609))) (merge-state (or l_s2611 (empty-state)) (singleton-state (quote l_exp_range) (d_node_range #f #f #f (lookup (quote l_expression) l_s2610)))))))))))))))))))))) (d_make_definition l_p2573 l_d2574 l_l2575 (lookup (quote l_identifier) l_s2576) (d_make_abstraction #f #f #f (lookup (quote l_tuple) l_s2576) (d_make_do #f #f #f (lookup (quote l_expression) l_s2576) (lookup (quote l_exp_range) l_s2576)) (d_combine_ranges #f #f #f (lookup (quote l_range) l_s2576) (lookup (quote l_exp_range) l_s2576))) (lookup (quote l_is_public) l_s2576))))))

(define d_read_type_schema (lambda (l_p3780 l_d3781 l_l3782 l_stream) (let ((l_s3779 (state (quote l_stream) l_stream))) (if (equal? (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s3779))) "forall") (let ((l_s3789 (merge-state l_s3779 (d_skip_token #f #f #f (lookup (quote l_stream) l_s3779))))) (if (equal? (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s3789))) ":") (let ((l_s3798 (merge-state l_s3789 (d_skip_token #f #f #f (lookup (quote l_stream) l_s3789))))) (d_read_type_expression l_p3780 l_d3781 l_l3782 (lookup (quote l_stream) l_s3798))) (let ((l_s3803 (merge-state l_s3789 (let ((l_s3804 (singleton-state (quote l_id) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s3789))))) (let ((l_s3805 (merge-state l_s3789 l_s3804))) (let ((l_s3806 l_s3804)) (let ((l_s3811 (let ((l_s3814 (empty-state))) (let ((l_s3815 l_s3805)) (begin (while (equal? (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s3815))) #\,) (let ((l_s3816 (let ((l_s3823 (d_skip_token #f #f #f (lookup (quote l_stream) l_s3815)))) (let ((l_s3824 (merge-state l_s3815 l_s3823))) (let ((l_s3825 l_s3823)) (merge-state (or l_s3825 (empty-state)) (singleton-state (quote l_id) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s3824))))))))) (begin (set! l_s3814 (merge-state l_s3814 l_s3816)) (set! l_s3815 (merge-state l_s3815 l_s3816))))) l_s3814))))) (let ((l_s3812 (merge-state l_s3805 l_s3811))) (let ((l_s3813 (merge-state (or l_s3806 (empty-state)) l_s3811))) (d_verify_operator l_s3813 #f #f (lookup (quote l_stream) l_s3812) ":")))))))))) (d_read_type_expression l_p3780 l_d3781 l_l3782 (lookup (quote l_stream) l_s3803))))) (d_read_type_expression l_p3780 l_d3781 l_l3782 (lookup (quote l_stream) l_s3779))))))

(define d_read_type_expression (lambda (l_p3851 l_d3852 l_l3853 l_stream) (let ((l_s3850 (state (quote l_stream) l_stream))) (let ((l_s3854 (merge-state l_s3850 (singleton-state (quote l_first) (d_peek_token #f #f #f (lookup (quote l_stream) l_s3850)))))) (if (equal? (d_token_kind #f #f #f (lookup (quote l_first) l_s3854)) "identifier") (let ((l_s3865 (merge-state l_s3854 (let ((l_s3866 (singleton-state (quote l_id) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s3854))))) (let ((l_s3867 (merge-state l_s3854 l_s3866))) (let ((l_s3868 l_s3866)) (merge-state (or l_s3868 (empty-state)) (singleton-state (quote l_next) (d_peek_token #f #f #f (lookup (quote l_stream) l_s3867)))))))))) (if (equal? (lookup (quote l_value) (lookup (quote l_next) l_s3865)) #\() (let ((l_s3887 (singleton-state (quote l_kind) "parametric_type"))) (let ((l_s3888 (merge-state l_s3865 l_s3887))) (let ((l_s3889 (let ((l_t3912 l_s3887)) (let ((l_p3913 l_p3851)) (if l_p3913 (merge-state l_p3913 (if l_d3852 (empty-state) l_t3912)) (if l_d3852 (empty-state) l_t3912)))))) (let ((l_s3894 (singleton-state (quote l_name) (lookup (quote l_id) l_s3888)))) (let ((l_s3895 (merge-state l_s3888 l_s3894))) (let ((l_s3896 (let ((l_t3910 l_s3894)) (let ((l_p3911 l_s3889)) (if l_p3911 (merge-state l_p3911 (if l_d3852 (empty-state) l_t3910)) (if l_d3852 (empty-state) l_t3910)))))) (let ((l_t3907 (let ((l_t3908 (singleton-state (quote l_args) (lookup (quote l_value) (d_read_tuple #f #f #f (lookup (quote l_stream) l_s3895) d_read_type_expression))))) (let ((l_p3909 l_s3896)) (if l_p3909 (merge-state l_p3909 (if l_d3852 (empty-state) l_t3908)) (if l_d3852 (empty-state) l_t3908)))))) (if l_l3853 (leave-collective l_l3853 l_t3907) l_t3907)))))))) (let ((l_s3914 (singleton-state (quote l_kind) "parametric_type"))) (let ((l_s3915 (merge-state l_s3865 l_s3914))) (let ((l_s3916 (let ((l_t3935 l_s3914)) (let ((l_p3936 l_p3851)) (if l_p3936 (merge-state l_p3936 (if l_d3852 (empty-state) l_t3935)) (if l_d3852 (empty-state) l_t3935)))))) (let ((l_s3921 (singleton-state (quote l_name) (lookup (quote l_id) l_s3915)))) (let ((l_s3922 (merge-state l_s3915 l_s3921))) (let ((l_s3923 (let ((l_t3933 l_s3921)) (let ((l_p3934 l_s3916)) (if l_p3934 (merge-state l_p3934 (if l_d3852 (empty-state) l_t3933)) (if l_d3852 (empty-state) l_t3933)))))) (let ((l_t3930 (let ((l_t3931 (singleton-state (quote l_args) (d_empty_list)))) (let ((l_p3932 l_s3923)) (if l_p3932 (merge-state l_p3932 (if l_d3852 (empty-state) l_t3931)) (if l_d3852 (empty-state) l_t3931)))))) (if l_l3853 (leave-collective l_l3853 l_t3930) l_t3930)))))))))) (if (equal? (d_token_value #f #f #f (lookup (quote l_first) l_s3854)) #\() (let ((l_s3943 (merge-state l_s3854 (singleton-state (quote l_args) (lookup (quote l_value) (d_read_tuple #f #f #f (lookup (quote l_stream) l_s3854) d_read_type_expression)))))) (let ((l_s3952 (singleton-state (quote l_kind) "function_type"))) (let ((l_s3953 (merge-state l_s3943 l_s3952))) (let ((l_s3954 (let ((l_t3982 l_s3952)) (let ((l_p3983 l_p3851)) (if l_p3983 (merge-state l_p3983 (if l_d3852 (empty-state) l_t3982)) (if l_d3852 (empty-state) l_t3982)))))) (let ((l_s3959 (singleton-state (quote l_from) (lookup (quote l_args) l_s3953)))) (let ((l_s3960 (merge-state l_s3953 l_s3959))) (let ((l_s3961 (let ((l_t3980 l_s3959)) (let ((l_p3981 l_s3954)) (if l_p3981 (merge-state l_p3981 (if l_d3852 (empty-state) l_t3980)) (if l_d3852 (empty-state) l_t3980)))))) (let ((l_s3966 (d_verify_operator #f #f #f (lookup (quote l_stream) l_s3960) "->"))) (let ((l_s3967 (merge-state l_s3960 l_s3966))) (let ((l_s3968 (let ((l_t3978 l_s3966)) (let ((l_p3979 l_s3961)) (if l_p3979 (merge-state l_p3979 (if l_d3852 (empty-state) l_t3978)) (if l_d3852 (empty-state) l_t3978)))))) (let ((l_t3975 (let ((l_t3976 (singleton-state (quote l_to) (d_read_type_expression #f #f #f (lookup (quote l_stream) l_s3967))))) (let ((l_p3977 l_s3968)) (if l_p3977 (merge-state l_p3977 (if l_d3852 (empty-state) l_t3976)) (if l_d3852 (empty-state) l_t3976)))))) (if l_l3853 (leave-collective l_l3853 l_t3975) l_t3975)))))))))))) (if (equal? (d_token_value #f #f #f (lookup (quote l_first) l_s3854)) #\{) (let ((l_s3990 (merge-state l_s3854 (d_skip_token #f #f #f (lookup (quote l_stream) l_s3854))))) (if (equal? (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s3990))) #\}) (let ((l_s3999 (merge-state l_s3990 (d_skip_token #f #f #f (lookup (quote l_stream) l_s3990))))) (let ((l_t4004 (let ((l_t4005 (singleton-state (quote l_kind) "state type"))) (let ((l_p4006 l_p3851)) (if l_p4006 (merge-state l_p4006 (if l_d3852 (empty-state) l_t4005)) (if l_d3852 (empty-state) l_t4005)))))) (if l_l3853 (leave-collective l_l3853 l_t4004) l_t4004))) (let ((l_t4009 (let ((l_t4010 (d_throw "read_type_expression todo state type"))) (let ((l_p4011 l_p3851)) (if l_p4011 (merge-state l_p4011 (if l_d3852 (empty-state) l_t4010)) (if l_d3852 (empty-state) l_t4010)))))) (if l_l3853 (leave-collective l_l3853 l_t4009) l_t4009)))) (let ((l_t4020 (let ((l_t4021 (d_throw (d_format "read_type_expression todo: $val" (singleton-state (quote l_val) (d_token_value #f #f #f (lookup (quote l_first) l_s3854))))))) (let ((l_p4022 l_p3851)) (if l_p4022 (merge-state l_p4022 (if l_d3852 (empty-state) l_t4021)) (if l_d3852 (empty-state) l_t4021)))))) (if l_l3853 (leave-collective l_l3853 l_t4020) l_t4020)))))))))

(define d_read_expression (lambda (l_p5331 l_d5332 l_l5333 l_stream) (let ((l_s5330 (state (quote l_stream) l_stream))) (let ((l_s5334 (merge-state l_s5330 (let ((l_s5335 (singleton-state (quote l_stack) (d_cons (d_read_expression_item #f #f #f (lookup (quote l_stream) l_s5330)) (d_empty_list))))) (let ((l_s5336 (merge-state l_s5330 l_s5335))) (let ((l_s5337 l_s5335)) (let ((l_s5346 (singleton-state (quote l_operator_follows) (equal? (d_token_kind #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s5336))) "operator")))) (let ((l_s5347 (merge-state l_s5336 l_s5346))) (let ((l_s5348 (merge-state (or l_s5337 (empty-state)) l_s5346))) (let ((l_s5357 (empty-state))) (let ((l_s5358 l_s5347)) (begin (while (if (lookup (quote l_operator_follows) l_s5358) #t (d_not_equal (d_rest (lookup (quote l_stack) l_s5358)) (d_empty_list))) (let ((l_s5359 (let ((l_s5372 (if (not (lookup (quote l_operator_follows) l_s5358)) (let ((l_s5379 (merge-state l_s5358 (let ((l_s5380 (singleton-state (quote l_left) (d_third #f #f #f (lookup (quote l_stack) l_s5358))))) (let ((l_s5381 (merge-state l_s5358 l_s5380))) (let ((l_s5382 l_s5380)) (merge-state (or l_s5382 (empty-state)) (singleton-state (quote l_right) (d_first (lookup (quote l_stack) l_s5381)))))))))) (singleton-state (quote l_stack) (d_cons (d_make_operation #f #f #f (lookup (quote l_left) l_s5379) (d_second #f #f #f (lookup (quote l_stack) l_s5379)) (lookup (quote l_right) l_s5379) (d_combine_node_ranges #f #f #f (lookup (quote l_left) l_s5379) (lookup (quote l_right) l_s5379))) (d_rest (d_rest (d_rest (lookup (quote l_stack) l_s5379))))))) (let ((l_s6358 (merge-state l_s5358 (let ((l_s6359 (d_check_operator #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s5358))))) (let ((l_s6360 (merge-state l_s5358 l_s6359))) (let ((l_s6361 l_s6359)) (let ((l_s6364 (singleton-state (quote l_range) (d_token_range #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s6360)))))) (let ((l_s6365 (merge-state l_s6360 l_s6364))) (let ((l_s6366 (merge-state (or l_s6361 (empty-state)) l_s6364))) (let ((l_s6371 (singleton-state (quote l_op) (d_token_value #f #f #f (d_next_token #f #f #f (lookup (quote l_stream) l_s6365)))))) (let ((l_s6372 (merge-state l_s6365 l_s6371))) (let ((l_s6373 (merge-state (or l_s6366 (empty-state)) l_s6371))) (merge-state (or l_s6373 (empty-state)) (singleton-state (quote l_exp) (d_read_expression_item #f #f #f (lookup (quote l_stream) l_s6372)))))))))))))))) (if (equal? (d_rest (lookup (quote l_stack) l_s6358)) (d_empty_list)) (singleton-state (quote l_stack) (d_cons (lookup (quote l_exp) l_s6358) (d_cons (lookup (quote l_op) l_s6358) (lookup (quote l_stack) l_s6358)))) (let ((l_s6408 (merge-state l_s6358 (singleton-state (quote l_stack_op) (d_second #f #f #f (lookup (quote l_stack) l_s6358)))))) (let ((l_s6413 (let ((l_s6416 (empty-state))) (let ((l_s6417 l_s6408)) (begin (while (if (d_not_equal (d_rest (lookup (quote l_stack) l_s6417)) (d_empty_list)) (d_precedence_less #f #f #f (lookup (quote l_op) l_s6417) (d_second #f #f #f (lookup (quote l_stack) l_s6417)) (lookup (quote l_range) l_s6417)) #f) (let ((l_s6418 (let ((l_s6435 (merge-state l_s6417 (let ((l_s6436 (singleton-state (quote l_left) (d_third #f #f #f (lookup (quote l_stack) l_s6417))))) (let ((l_s6437 (merge-state l_s6417 l_s6436))) (let ((l_s6438 l_s6436)) (merge-state (or l_s6438 (empty-state)) (singleton-state (quote l_right) (d_first (lookup (quote l_stack) l_s6437)))))))))) (singleton-state (quote l_stack) (d_cons (d_make_operation #f #f #f (lookup (quote l_left) l_s6435) (d_second #f #f #f (lookup (quote l_stack) l_s6435)) (lookup (quote l_right) l_s6435) (d_combine_node_ranges #f #f #f (lookup (quote l_left) l_s6435) (lookup (quote l_right) l_s6435))) (d_rest (d_rest (d_rest (lookup (quote l_stack) l_s6435))))))))) (begin (set! l_s6416 (merge-state l_s6416 l_s6418)) (set! l_s6417 (merge-state l_s6417 l_s6418))))) l_s6416))))) (let ((l_s6414 (merge-state l_s6408 l_s6413))) (let ((l_s6415 l_s6413)) (merge-state (or l_s6415 (empty-state)) (singleton-state (quote l_stack) (d_cons (lookup (quote l_exp) l_s6414) (d_cons (lookup (quote l_op) l_s6414) (lookup (quote l_stack) l_s6414)))))))))))))) (let ((l_s5373 (merge-state l_s5358 l_s5372))) (let ((l_s5374 l_s5372)) (merge-state (or l_s5374 (empty-state)) (singleton-state (quote l_operator_follows) (equal? (d_token_kind #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s5373))) "operator")))))))) (begin (set! l_s5357 (merge-state l_s5357 l_s5359)) (set! l_s5358 (merge-state l_s5358 l_s5359))))) (merge-state (or l_s5348 (empty-state)) l_s5357))))))))))))) (let ((l_t6507 (let ((l_t6508 (d_first (lookup (quote l_stack) l_s5334)))) (let ((l_p6509 l_p5331)) (if l_p6509 (merge-state l_p6509 (if l_d5332 (empty-state) l_t6508)) (if l_d5332 (empty-state) l_t6508)))))) (if l_l5333 (leave-collective l_l5333 l_t6507) l_t6507))))))

(define d_check_operator (lambda (l_p6513 l_d6514 l_l6515 l_x) (let ((l_s6512 (state (quote l_x) l_x))) (if (not (d_is_operator #f #f #f (d_token_value #f #f #f (lookup (quote l_x) l_s6512)))) (d_throw_with_range l_p6513 #t l_l6515 "Operator $op does not exist" (singleton-state (quote l_op) (d_token_value #f #f #f (lookup (quote l_x) l_s6512))) (d_token_range #f #f #f (lookup (quote l_x) l_s6512))) (let ((l_t6528 (let ((l_t6529 (empty-state))) (or l_p6513 (empty-state))))) (if l_l6515 (leave-collective l_l6515 l_t6528) l_t6528))))))

(define d_precedence_less (lambda (l_p6534 l_d6535 l_l6536 l_x l_y l_range) (let ((l_s6533 (state (quote l_x) l_x (quote l_y) l_y (quote l_range) l_range))) (let ((l_s6537 (merge-state l_s6533 (let ((l_s6538 (singleton-state (quote l_px) (d_precedence #f #f #f (lookup (quote l_x) l_s6533))))) (let ((l_s6539 (merge-state l_s6533 l_s6538))) (let ((l_s6540 l_s6538)) (merge-state (or l_s6540 (empty-state)) (singleton-state (quote l_py) (d_precedence #f #f #f (lookup (quote l_y) l_s6539)))))))))) (if (equal? (lookup (quote l_x) l_s6537) (lookup (quote l_y) l_s6537)) (if (d_is_left_associative #f #f #f (lookup (quote l_x) l_s6537)) (let ((l_t6559 (let ((l_t6560 #t)) (let ((l_p6561 l_p6534)) (if l_p6561 (merge-state l_p6561 (if l_d6535 (empty-state) l_t6560)) (if l_d6535 (empty-state) l_t6560)))))) (if l_l6536 (leave-collective l_l6536 l_t6559) l_t6559)) (if (d_is_right_associative #f #f #f (lookup (quote l_x) l_s6537)) (let ((l_t6564 (let ((l_t6565 #f)) (let ((l_p6566 l_p6534)) (if l_p6566 (merge-state l_p6566 (if l_d6535 (empty-state) l_t6565)) (if l_d6535 (empty-state) l_t6565)))))) (if l_l6536 (leave-collective l_l6536 l_t6564) l_t6564)) (d_throw_with_range l_p6534 l_d6535 l_l6536 "Ambiguity: operator '$op' is not associative" (singleton-state (quote l_op) (lookup (quote l_x) l_s6537)) (lookup (quote l_range) l_s6537)))) (if (if (d_is_member #f #f #f (lookup (quote l_x) l_s6537) (d_cons "+" (d_cons "-" (d_empty_list)))) (d_is_member #f #f #f (lookup (quote l_y) l_s6537) (d_cons "+" (d_cons "-" (d_empty_list)))) #f) (let ((l_t6601 (let ((l_t6602 #t)) (let ((l_p6603 l_p6534)) (if l_p6603 (merge-state l_p6603 (if l_d6535 (empty-state) l_t6602)) (if l_d6535 (empty-state) l_t6602)))))) (if l_l6536 (leave-collective l_l6536 l_t6601) l_t6601)) (if (if (d_is_member #f #f #f (lookup (quote l_x) l_s6537) (d_cons "*" (d_cons "/" (d_empty_list)))) (d_is_member #f #f #f (lookup (quote l_y) l_s6537) (d_cons "*" (d_cons "/" (d_empty_list)))) #f) (let ((l_t6630 (let ((l_t6631 #t)) (let ((l_p6632 l_p6534)) (if l_p6632 (merge-state l_p6632 (if l_d6535 (empty-state) l_t6631)) (if l_d6535 (empty-state) l_t6631)))))) (if l_l6536 (leave-collective l_l6536 l_t6630) l_t6630)) (if (equal? (lookup (quote l_px) l_s6537) (lookup (quote l_py) l_s6537)) (d_throw_with_range l_p6534 l_d6535 l_l6536 "Ambiguity: operators '$a' and '$b' have the same precedence" (let ((l_s6641 (singleton-state (quote l_a) (lookup (quote l_x) l_s6537)))) (let ((l_s6642 (merge-state l_s6537 l_s6641))) (let ((l_s6643 l_s6641)) (merge-state (or l_s6643 (empty-state)) (singleton-state (quote l_b) (lookup (quote l_y) l_s6642)))))) (lookup (quote l_range) l_s6537)) (let ((l_t7210 (let ((l_t7211 (d_less (d_precedence #f #f #f (lookup (quote l_x) l_s6537)) (d_precedence #f #f #f (lookup (quote l_y) l_s6537))))) (let ((l_p7212 l_p6534)) (if l_p7212 (merge-state l_p7212 (if l_d6535 (empty-state) l_t7211)) (if l_d6535 (empty-state) l_t7211)))))) (if l_l6536 (leave-collective l_l6536 l_t7210) l_t7210))))))))))

(define d_read_expression_item (lambda (l_p7216 l_d7217 l_l7218 l_stream) (let ((l_s7215 (state (quote l_stream) l_stream))) (let ((l_s7219 (merge-state l_s7215 (let ((l_s7220 (singleton-state (quote l_next) (d_peek_token #f #f #f (lookup (quote l_stream) l_s7215))))) (let ((l_s7221 (merge-state l_s7215 l_s7220))) (let ((l_s7222 l_s7220)) (let ((l_s7227 (singleton-state (quote l_kind) (d_token_kind #f #f #f (lookup (quote l_next) l_s7221))))) (let ((l_s7228 (merge-state l_s7221 l_s7227))) (let ((l_s7229 (merge-state (or l_s7222 (empty-state)) l_s7227))) (let ((l_s7234 (singleton-state (quote l_value) (d_token_value #f #f #f (lookup (quote l_next) l_s7228))))) (let ((l_s7235 (merge-state l_s7228 l_s7234))) (let ((l_s7236 (merge-state (or l_s7229 (empty-state)) l_s7234))) (merge-state (or l_s7236 (empty-state)) (singleton-state (quote l_range) (d_token_range #f #f #f (lookup (quote l_next) l_s7235)))))))))))))))) (if (equal? (lookup (quote l_kind) l_s7219) "number") (d_make_constant l_p7216 l_d7217 l_l7218 (d_read_number #f #f #f (lookup (quote l_stream) l_s7219)) (lookup (quote l_kind) l_s7219) (lookup (quote l_range) l_s7219)) (if (equal? (lookup (quote l_kind) l_s7219) "string_literal") (d_make_constant l_p7216 l_d7217 l_l7218 (d_read_string_literal #f #f #f (lookup (quote l_stream) l_s7219)) "string" (lookup (quote l_range) l_s7219)) (if (equal? (lookup (quote l_kind) l_s7219) "character_literal") (d_make_constant l_p7216 l_d7217 l_l7218 (d_read_character_literal #f #f #f (lookup (quote l_stream) l_s7219)) "character" (lookup (quote l_range) l_s7219)) (if (equal? (lookup (quote l_kind) l_s7219) "Boole") (d_make_constant l_p7216 l_d7217 l_l7218 (d_token_value #f #f #f (d_next_token #f #f #f (lookup (quote l_stream) l_s7219))) "Boole" (lookup (quote l_range) l_s7219)) (if (equal? (lookup (quote l_kind) l_s7219) "identifier") (d_read_identifier_and_rest l_p7216 l_d7217 l_l7218 (lookup (quote l_stream) l_s7219)) (if (if (equal? (lookup (quote l_kind) l_s7219) "operator") (d_is_member #f #f #f (lookup (quote l_value) l_s7219) (d_cons "-" (d_empty_list))) #f) (let ((l_s7587 (merge-state l_s7219 (let ((l_s7588 (singleton-state (quote l_operator) (d_next_token #f #f #f (lookup (quote l_stream) l_s7219))))) (let ((l_s7589 (merge-state l_s7219 l_s7588))) (let ((l_s7590 l_s7588)) (merge-state (or l_s7590 (empty-state)) (singleton-state (quote l_operand) (d_read_expression_item #f #f #f (lookup (quote l_stream) l_s7589)))))))))) (d_make_unary_operation l_p7216 l_d7217 l_l7218 (d_token_value #f #f #f (lookup (quote l_operator) l_s7587)) (lookup (quote l_operand) l_s7587) (d_combine_node_ranges #f #f #f (lookup (quote l_operator) l_s7587) (lookup (quote l_operand) l_s7587)))) (if (equal? (lookup (quote l_value) l_s7219) #\[) (d_read_list_literal l_p7216 l_d7217 l_l7218 (lookup (quote l_stream) l_s7219)) (if (equal? (lookup (quote l_value) l_s7219) #\() (let ((l_s7623 (merge-state l_s7219 (let ((l_s7624 (d_skip_token #f #f #f (lookup (quote l_stream) l_s7219)))) (let ((l_s7625 (merge-state l_s7219 l_s7624))) (let ((l_s7626 l_s7624)) (let ((l_s7629 (singleton-state (quote l_exp) (d_read_expression #f #f #f (lookup (quote l_stream) l_s7625))))) (let ((l_s7630 (merge-state l_s7625 l_s7629))) (let ((l_s7631 (merge-state (or l_s7626 (empty-state)) l_s7629))) (let ((l_s7636 (singleton-state (quote l_token) (d_next_token #f #f #f (lookup (quote l_stream) l_s7630))))) (let ((l_s7637 (merge-state l_s7630 l_s7636))) (let ((l_s7638 (merge-state (or l_s7631 (empty-state)) l_s7636))) (merge-state (or l_s7638 (empty-state)) (singleton-state (quote l_value) (d_token_value #f #f #f (lookup (quote l_token) l_s7637)))))))))))))))) (if (equal? (lookup (quote l_value) l_s7623) #\)) (let ((l_t7659 (let ((l_t7660 (lookup (quote l_exp) l_s7623))) (let ((l_p7661 l_p7216)) (if l_p7661 (merge-state l_p7661 (if l_d7217 (empty-state) l_t7660)) (if l_d7217 (empty-state) l_t7660)))))) (if l_l7218 (leave-collective l_l7218 l_t7659) l_t7659)) (d_throw_with_range l_p7216 l_d7217 l_l7218 "expteced closing parenthesis but found $kind '$x'" (let ((l_s7664 (singleton-state (quote l_kind) (d_token_kind #f #f #f (lookup (quote l_token) l_s7623))))) (let ((l_s7665 (merge-state l_s7623 l_s7664))) (let ((l_s7666 l_s7664)) (merge-state (or l_s7666 (empty-state)) (singleton-state (quote l_x) (lookup (quote l_value) l_s7665)))))) (d_token_range #f #f #f (lookup (quote l_token) l_s7623))))) (d_throw_with_range l_p7216 l_d7217 l_l7218 "$kind '$char' is not the start of an expression" (let ((l_s7681 (singleton-state (quote l_kind) (lookup (quote l_kind) l_s7219)))) (let ((l_s7682 (merge-state l_s7219 l_s7681))) (let ((l_s7683 l_s7681)) (merge-state (or l_s7683 (empty-state)) (singleton-state (quote l_char) (lookup (quote l_value) l_s7682)))))) (lookup (quote l_range) l_s7219))))))))))))))

(define d_read_identifier_and_rest (lambda (l_p7699 l_d7700 l_l7701 l_stream) (let ((l_s7698 (state (quote l_stream) l_stream))) (let ((l_s7702 (merge-state l_s7698 (singleton-state (quote l_next) (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s7698))))))) (if (equal? (lookup (quote l_next) l_s7702) "global") (d_read_global l_p7699 l_d7700 l_l7701 (lookup (quote l_stream) l_s7702)) (if (equal? (lookup (quote l_next) l_s7702) "if") (d_read_if l_p7699 l_d7700 l_l7701 (lookup (quote l_stream) l_s7702)) (if (equal? (lookup (quote l_next) l_s7702) "let") (d_read_let l_p7699 l_d7700 l_l7701 (lookup (quote l_stream) l_s7702)) (if (equal? (lookup (quote l_next) l_s7702) "fun") (d_read_abstraction l_p7699 l_d7700 l_l7701 (lookup (quote l_stream) l_s7702)) (if (equal? (lookup (quote l_next) l_s7702) "do") (d_read_do l_p7699 l_d7700 l_l7701 (lookup (quote l_stream) l_s7702)) (if (equal? (lookup (quote l_next) l_s7702) "while") (d_read_while l_p7699 l_d7700 l_l7701 (lookup (quote l_stream) l_s7702)) (if (equal? (lookup (quote l_next) l_s7702) "try") (d_read_try l_p7699 l_d7700 l_l7701 (lookup (quote l_stream) l_s7702)) (if (equal? (lookup (quote l_next) l_s7702) "proc") (d_read_do_abstraction l_p7699 l_d7700 l_l7701 (lookup (quote l_stream) l_s7702)) (let ((l_s7873 (merge-state l_s7702 (let ((l_s7874 (singleton-state (quote l_token) (d_peek_token #f #f #f (lookup (quote l_stream) l_s7702))))) (let ((l_s7875 (merge-state l_s7702 l_s7874))) (let ((l_s7876 l_s7874)) (let ((l_s7881 (singleton-state (quote l_identifier) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s7875))))) (let ((l_s7882 (merge-state l_s7875 l_s7881))) (let ((l_s7883 (merge-state (or l_s7876 (empty-state)) l_s7881))) (merge-state (or l_s7883 (empty-state)) (singleton-state (quote l_next) (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s7882)))))))))))))) (if (equal? (lookup (quote l_next) l_s7873) #\() (let ((l_s7902 (merge-state l_s7873 (let ((l_s7903 (singleton-state (quote l_tup) (d_read_tuple #f #f #f (lookup (quote l_stream) l_s7873) d_read_expression)))) (let ((l_s7904 (merge-state l_s7873 l_s7903))) (let ((l_s7905 l_s7903)) (let ((l_s7912 (singleton-state (quote l_args) (lookup (quote l_value) (lookup (quote l_tup) l_s7904))))) (let ((l_s7913 (merge-state l_s7904 l_s7912))) (let ((l_s7914 (merge-state (or l_s7905 (empty-state)) l_s7912))) (merge-state (or l_s7914 (empty-state)) (singleton-state (quote l_range) (d_combine_ranges #f #f #f (d_token_range #f #f #f (lookup (quote l_token) l_s7913)) (lookup (quote l_range) (lookup (quote l_tup) l_s7913)))))))))))))) (if (equal? (lookup (quote l_identifier) l_s7902) "call") (d_make_application l_p7699 l_d7700 l_l7701 "apply" (d_cons (d_first (lookup (quote l_args) l_s7902)) (d_cons (d_make_application #f #f #f "tuple" (d_rest (lookup (quote l_args) l_s7902)) (lookup (quote l_range) (lookup (quote l_tup) l_s7902))) (d_empty_list))) (lookup (quote l_range) l_s7902)) (d_make_application l_p7699 l_d7700 l_l7701 (lookup (quote l_identifier) l_s7902) (lookup (quote l_args) l_s7902) (lookup (quote l_range) l_s7902)))) (d_make_variable l_p7699 l_d7700 l_l7701 (lookup (quote l_identifier) l_s7873) #f (d_token_range #f #f #f (lookup (quote l_token) l_s7873)))))))))))))))))

(define d_last (lambda (l_p7978 l_d7979 l_l7980 l_x) (let ((l_s7977 (state (quote l_x) l_x))) (let ((l_t7983 (let ((l_t7984 (d_first (d_reverse #f #f #f (lookup (quote l_x) l_s7977))))) (let ((l_p7985 l_p7978)) (if l_p7985 (merge-state l_p7985 (if l_d7979 (empty-state) l_t7984)) (if l_d7979 (empty-state) l_t7984)))))) (if l_l7980 (leave-collective l_l7980 l_t7983) l_t7983)))))

(define d_read_global (lambda (l_p7989 l_d7990 l_l7991 l_stream) (let ((l_s7988 (state (quote l_stream) l_stream))) (let ((l_s7992 (merge-state l_s7988 (singleton-state (quote l_token) (d_verify_key #f #f #f (lookup (quote l_stream) l_s7988) "global"))))) (d_make_variable l_p7989 l_d7990 l_l7991 (d_read_identifier #f #f #f (lookup (quote l_stream) l_s7992)) #t (d_token_range #f #f #f (lookup (quote l_token) l_s7992)))))))

(define d_read_do (lambda (l_p8008 l_d8009 l_l8010 l_stream) (let ((l_s8007 (state (quote l_stream) l_stream))) (let ((l_s8011 (merge-state l_s8007 (let ((l_s8012 (singleton-state (quote l_from) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8007) "do")))) (let ((l_s8013 (merge-state l_s8007 l_s8012))) (let ((l_s8014 l_s8012)) (let ((l_s8021 (singleton-state (quote l_exp) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8013))))) (let ((l_s8022 (merge-state l_s8013 l_s8021))) (let ((l_s8023 (merge-state (or l_s8014 (empty-state)) l_s8021))) (merge-state (or l_s8023 (empty-state)) (singleton-state (quote l_to) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8022) "end")))))))))))) (d_make_do l_p8008 l_d8009 l_l8010 (lookup (quote l_exp) l_s8011) (d_combine_token_ranges #f #f #f (lookup (quote l_from) l_s8011) (lookup (quote l_to) l_s8011)))))))

(define d_read_while (lambda (l_p8047 l_d8048 l_l8049 l_stream) (let ((l_s8046 (state (quote l_stream) l_stream))) (let ((l_s8050 (merge-state l_s8046 (let ((l_s8051 (singleton-state (quote l_from) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8046) "while")))) (let ((l_s8052 (merge-state l_s8046 l_s8051))) (let ((l_s8053 l_s8051)) (let ((l_s8060 (singleton-state (quote l_test) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8052))))) (let ((l_s8061 (merge-state l_s8052 l_s8060))) (let ((l_s8062 (merge-state (or l_s8053 (empty-state)) l_s8060))) (let ((l_s8067 (d_verify_key #f #t #f (lookup (quote l_stream) l_s8061) "do"))) (let ((l_s8068 (merge-state l_s8061 l_s8067))) (let ((l_s8069 (merge-state (or l_s8062 (empty-state)) l_s8067))) (let ((l_s8074 (singleton-state (quote l_exp) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8068))))) (let ((l_s8075 (merge-state l_s8068 l_s8074))) (let ((l_s8076 (merge-state (or l_s8069 (empty-state)) l_s8074))) (merge-state (or l_s8076 (empty-state)) (singleton-state (quote l_to) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8075) "end")))))))))))))))))) (d_make_while l_p8047 l_d8048 l_l8049 (lookup (quote l_test) l_s8050) (lookup (quote l_exp) l_s8050) (d_combine_token_ranges #f #f #f (lookup (quote l_from) l_s8050) (lookup (quote l_to) l_s8050)))))))

(define d_read_try (lambda (l_p8443 l_d8444 l_l8445 l_stream) (let ((l_s8442 (state (quote l_stream) l_stream))) (let ((l_s8446 (merge-state l_s8442 (let ((l_s8447 (singleton-state (quote l_from) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8442) "try")))) (let ((l_s8448 (merge-state l_s8442 l_s8447))) (let ((l_s8449 l_s8447)) (let ((l_s8456 (singleton-state (quote l_exp0) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8448))))) (let ((l_s8457 (merge-state l_s8448 l_s8456))) (let ((l_s8458 (merge-state (or l_s8449 (empty-state)) l_s8456))) (let ((l_s8463 (d_verify_key #f #t #f (lookup (quote l_stream) l_s8457) "catch"))) (let ((l_s8464 (merge-state l_s8457 l_s8463))) (let ((l_s8465 (merge-state (or l_s8458 (empty-state)) l_s8463))) (let ((l_s8470 (singleton-state (quote l_tuple) (lookup (quote l_value) (d_read_tuple #f #f #f (lookup (quote l_stream) l_s8464) d_read_identifier))))) (let ((l_s8471 (merge-state l_s8464 l_s8470))) (let ((l_s8472 (merge-state (or l_s8465 (empty-state)) l_s8470))) (let ((l_s8481 (singleton-state (quote l_exp1) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8471))))) (let ((l_s8482 (merge-state l_s8471 l_s8481))) (let ((l_s8483 (merge-state (or l_s8472 (empty-state)) l_s8481))) (merge-state (or l_s8483 (empty-state)) (singleton-state (quote l_to) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8482) "end"))))))))))))))))))))) (d_make_try l_p8443 l_d8444 l_l8445 (lookup (quote l_exp0) l_s8446) (d_first (lookup (quote l_tuple) l_s8446)) (lookup (quote l_exp1) l_s8446) (d_combine_token_ranges #f #f #f (lookup (quote l_from) l_s8446) (lookup (quote l_to) l_s8446)))))))

(define d_read_if (lambda (l_p8519 l_d8520 l_l8521 l_stream) (let ((l_s8518 (state (quote l_stream) l_stream))) (let ((l_s8522 (merge-state l_s8518 (let ((l_s8523 (singleton-state (quote l_from) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8518) "if")))) (let ((l_s8524 (merge-state l_s8518 l_s8523))) (let ((l_s8525 l_s8523)) (let ((l_s8532 (singleton-state (quote l_exp1) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8524))))) (let ((l_s8533 (merge-state l_s8524 l_s8532))) (let ((l_s8534 (merge-state (or l_s8525 (empty-state)) l_s8532))) (let ((l_s8539 (singleton-state (quote l_to) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8533) "then")))) (let ((l_s8540 (merge-state l_s8533 l_s8539))) (let ((l_s8541 (merge-state (or l_s8534 (empty-state)) l_s8539))) (let ((l_s8548 (singleton-state (quote l_exp2) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8540))))) (let ((l_s8549 (merge-state l_s8540 l_s8548))) (let ((l_s8550 (merge-state (or l_s8541 (empty-state)) l_s8548))) (merge-state (or l_s8550 (empty-state)) (singleton-state (quote l_exp3) (d_read_if_tail #f #f #f (lookup (quote l_stream) l_s8549))))))))))))))))))) (d_make_if l_p8519 l_d8520 l_l8521 (lookup (quote l_exp1) l_s8522) (lookup (quote l_exp2) l_s8522) (lookup (quote l_exp3) l_s8522) (d_combine_token_ranges #f #f #f (lookup (quote l_from) l_s8522) (lookup (quote l_to) l_s8522)))))))

(define d_read_if_tail (lambda (l_p8580 l_d8581 l_l8582 l_stream) (let ((l_s8579 (state (quote l_stream) l_stream))) (let ((l_s8583 (merge-state l_s8579 (let ((l_s8584 (singleton-state (quote l_range) (d_token_range #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s8579)))))) (let ((l_s8585 (merge-state l_s8579 l_s8584))) (let ((l_s8586 l_s8584)) (merge-state (or l_s8586 (empty-state)) (singleton-state (quote l_identifier) (d_read_identifier #f #f #f (lookup (quote l_stream) l_s8585)))))))))) (if (equal? (lookup (quote l_identifier) l_s8583) "end") (d_make_variable l_p8580 l_d8581 l_l8582 "skip" #f (lookup (quote l_range) l_s8583)) (if (equal? (lookup (quote l_identifier) l_s8583) "elsif") (let ((l_s8615 (merge-state l_s8583 (let ((l_s8616 (singleton-state (quote l_exp1) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8583))))) (let ((l_s8617 (merge-state l_s8583 l_s8616))) (let ((l_s8618 l_s8616)) (let ((l_s8623 (d_verify_key #f #t #f (lookup (quote l_stream) l_s8617) "then"))) (let ((l_s8624 (merge-state l_s8617 l_s8623))) (let ((l_s8625 (merge-state (or l_s8618 (empty-state)) l_s8623))) (let ((l_s8630 (singleton-state (quote l_exp2) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8624))))) (let ((l_s8631 (merge-state l_s8624 l_s8630))) (let ((l_s8632 (merge-state (or l_s8625 (empty-state)) l_s8630))) (merge-state (or l_s8632 (empty-state)) (singleton-state (quote l_tail) (d_read_if_tail #f #f #f (lookup (quote l_stream) l_s8631)))))))))))))))) (d_make_if l_p8580 l_d8581 l_l8582 (lookup (quote l_exp1) l_s8615) (lookup (quote l_exp2) l_s8615) (lookup (quote l_tail) l_s8615) (d_combine_ranges #f #f #f (lookup (quote l_range) l_s8615) (d_node_range #f #f #f (lookup (quote l_tail) l_s8615))))) (if (equal? (lookup (quote l_identifier) l_s8583) "else") (let ((l_s8663 (merge-state l_s8583 (let ((l_s8664 (singleton-state (quote l_exp) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8583))))) (let ((l_s8665 (merge-state l_s8583 l_s8664))) (let ((l_s8666 l_s8664)) (d_verify_key l_s8666 #t #f (lookup (quote l_stream) l_s8665) "end"))))))) (let ((l_t8677 (let ((l_t8678 (lookup (quote l_exp) l_s8663))) (let ((l_p8679 l_p8580)) (if l_p8679 (merge-state l_p8679 (if l_d8581 (empty-state) l_t8678)) (if l_d8581 (empty-state) l_t8678)))))) (if l_l8582 (leave-collective l_l8582 l_t8677) l_t8677))) (d_throw_with_range l_p8580 l_d8581 l_l8582 "Expected keyword 'else' but found identifier '$id'" (singleton-state (quote l_id) (lookup (quote l_identifier) l_s8583)) (lookup (quote l_range) l_s8583)))))))))

(define d_read_let (lambda (l_p8691 l_d8692 l_l8693 l_stream) (let ((l_s8690 (state (quote l_stream) l_stream))) (let ((l_s8694 (merge-state l_s8690 (let ((l_s8695 (singleton-state (quote l_from) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8690) "let")))) (let ((l_s8696 (merge-state l_s8690 l_s8695))) (let ((l_s8697 l_s8695)) (let ((l_s8704 (singleton-state (quote l_exp1) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8696))))) (let ((l_s8705 (merge-state l_s8696 l_s8704))) (let ((l_s8706 (merge-state (or l_s8697 (empty-state)) l_s8704))) (let ((l_s8711 (d_verify_key #f #t #f (lookup (quote l_stream) l_s8705) "in"))) (let ((l_s8712 (merge-state l_s8705 l_s8711))) (let ((l_s8713 (merge-state (or l_s8706 (empty-state)) l_s8711))) (let ((l_s8718 (singleton-state (quote l_exp2) (d_read_expression #f #f #f (lookup (quote l_stream) l_s8712))))) (let ((l_s8719 (merge-state l_s8712 l_s8718))) (let ((l_s8720 (merge-state (or l_s8713 (empty-state)) l_s8718))) (merge-state (or l_s8720 (empty-state)) (singleton-state (quote l_to) (d_verify_key #f #f #f (lookup (quote l_stream) l_s8719) "end")))))))))))))))))) (d_make_let l_p8691 l_d8692 l_l8693 (lookup (quote l_exp1) l_s8694) (lookup (quote l_exp2) l_s8694) (d_combine_token_ranges #f #f #f (lookup (quote l_from) l_s8694) (lookup (quote l_to) l_s8694)))))))

(define d_read_abstraction (lambda (l_p9027 l_d9028 l_l9029 l_stream) (let ((l_s9026 (state (quote l_stream) l_stream))) (let ((l_s9030 (merge-state l_s9026 (let ((l_s9031 (singleton-state (quote l_from) (d_verify_key #f #f #f (lookup (quote l_stream) l_s9026) "fun")))) (let ((l_s9032 (merge-state l_s9026 l_s9031))) (let ((l_s9033 l_s9031)) (let ((l_s9040 (singleton-state (quote l_args) (lookup (quote l_value) (d_read_tuple #f #f #f (lookup (quote l_stream) l_s9032) d_read_identifier))))) (let ((l_s9041 (merge-state l_s9032 l_s9040))) (let ((l_s9042 (merge-state (or l_s9033 (empty-state)) l_s9040))) (let ((l_s9051 (singleton-state (quote l_body) (d_read_expression #f #f #f (lookup (quote l_stream) l_s9041))))) (let ((l_s9052 (merge-state l_s9041 l_s9051))) (let ((l_s9053 (merge-state (or l_s9042 (empty-state)) l_s9051))) (merge-state (or l_s9053 (empty-state)) (singleton-state (quote l_to) (d_verify_key #f #f #f (lookup (quote l_stream) l_s9052) "end"))))))))))))))) (d_make_abstraction l_p9027 l_d9028 l_l9029 (lookup (quote l_args) l_s9030) (lookup (quote l_body) l_s9030) (d_combine_token_ranges #f #f #f (lookup (quote l_from) l_s9030) (lookup (quote l_to) l_s9030)))))))

(define d_read_do_abstraction (lambda (l_p9081 l_d9082 l_l9083 l_stream) (let ((l_s9080 (state (quote l_stream) l_stream))) (let ((l_s9084 (merge-state l_s9080 (let ((l_s9085 (singleton-state (quote l_from) (d_verify_key #f #f #f (lookup (quote l_stream) l_s9080) "proc")))) (let ((l_s9086 (merge-state l_s9080 l_s9085))) (let ((l_s9087 l_s9085)) (let ((l_s9094 (singleton-state (quote l_args) (lookup (quote l_value) (d_read_tuple #f #f #f (lookup (quote l_stream) l_s9086) d_read_identifier))))) (let ((l_s9095 (merge-state l_s9086 l_s9094))) (let ((l_s9096 (merge-state (or l_s9087 (empty-state)) l_s9094))) (let ((l_s9105 (singleton-state (quote l_body) (d_read_expression #f #f #f (lookup (quote l_stream) l_s9095))))) (let ((l_s9106 (merge-state l_s9095 l_s9105))) (let ((l_s9107 (merge-state (or l_s9096 (empty-state)) l_s9105))) (merge-state (or l_s9107 (empty-state)) (singleton-state (quote l_to) (d_verify_key #f #f #f (lookup (quote l_stream) l_s9106) "end"))))))))))))))) (d_make_abstraction l_p9081 l_d9082 l_l9083 (lookup (quote l_args) l_s9084) (d_make_do #f #f #f (lookup (quote l_body) l_s9084) (d_node_range #f #f #f (lookup (quote l_body) l_s9084))) (d_combine_token_ranges #f #f #f (lookup (quote l_from) l_s9084) (lookup (quote l_to) l_s9084)))))))

(define d_combine_token_ranges (lambda (l_p9137 l_d9138 l_l9139 l_from l_to) (let ((l_s9136 (state (quote l_from) l_from (quote l_to) l_to))) (d_combine_ranges l_p9137 l_d9138 l_l9139 (d_token_range #f #f #f (lookup (quote l_from) l_s9136)) (d_token_range #f #f #f (lookup (quote l_to) l_s9136))))))

(define d_combine_node_ranges (lambda (l_p9147 l_d9148 l_l9149 l_from l_to) (let ((l_s9146 (state (quote l_from) l_from (quote l_to) l_to))) (d_combine_ranges l_p9147 l_d9148 l_l9149 (d_node_range #f #f #f (lookup (quote l_from) l_s9146)) (d_node_range #f #f #f (lookup (quote l_to) l_s9146))))))

(define d_read_identifier (lambda (l_p9157 l_d9158 l_l9159 l_stream) (let ((l_s9156 (state (quote l_stream) l_stream))) (d_token_value l_p9157 l_d9158 l_l9159 (d_read_kinded_token #f #f #f (lookup (quote l_stream) l_s9156) "identifier")))))

(define d_read_character (lambda (l_p9167 l_d9168 l_l9169 l_stream) (let ((l_s9166 (state (quote l_stream) l_stream))) (d_token_value l_p9167 l_d9168 l_l9169 (d_read_kinded_token #f #f #f (lookup (quote l_stream) l_s9166) "character")))))

(define d_read_number (lambda (l_p9177 l_d9178 l_l9179 l_stream) (let ((l_s9176 (state (quote l_stream) l_stream))) (d_token_value l_p9177 l_d9178 l_l9179 (d_read_kinded_token #f #f #f (lookup (quote l_stream) l_s9176) "number")))))

(define d_read_string_literal (lambda (l_p9187 l_d9188 l_l9189 l_stream) (let ((l_s9186 (state (quote l_stream) l_stream))) (d_token_value l_p9187 l_d9188 l_l9189 (d_read_kinded_token #f #f #f (lookup (quote l_stream) l_s9186) "string_literal")))))

(define d_read_character_literal (lambda (l_p9197 l_d9198 l_l9199 l_stream) (let ((l_s9196 (state (quote l_stream) l_stream))) (d_token_value l_p9197 l_d9198 l_l9199 (d_read_kinded_token #f #f #f (lookup (quote l_stream) l_s9196) "character_literal")))))

(define d_read_operator (lambda (l_p9207 l_d9208 l_l9209 l_stream) (let ((l_s9206 (state (quote l_stream) l_stream))) (d_token_value l_p9207 l_d9208 l_l9209 (d_read_kinded_token #f #f #f (lookup (quote l_stream) l_s9206) "operator")))))

(define d_verify_key (lambda (l_p9217 l_d9218 l_l9219 l_stream l_key) (let ((l_s9216 (state (quote l_stream) l_stream (quote l_key) l_key))) (let ((l_s9220 (merge-state l_s9216 (let ((l_s9221 (singleton-state (quote l_token) (d_next_token #f #f #f (lookup (quote l_stream) l_s9216))))) (let ((l_s9222 (merge-state l_s9216 l_s9221))) (let ((l_s9223 l_s9221)) (let ((l_s9228 (singleton-state (quote l_identifier) (d_token_value #f #f #f (lookup (quote l_token) l_s9222))))) (let ((l_s9229 (merge-state l_s9222 l_s9228))) (let ((l_s9230 (merge-state (or l_s9223 (empty-state)) l_s9228))) (if (d_not_equal (lookup (quote l_identifier) l_s9229) (lookup (quote l_key) l_s9229)) (d_throw_with_range l_s9230 #f #f "Expected keyword '$key' but found $kind '$id'" (let ((l_s9243 (singleton-state (quote l_key) (lookup (quote l_key) l_s9229)))) (let ((l_s9244 (merge-state l_s9229 l_s9243))) (let ((l_s9245 l_s9243)) (let ((l_s9250 (singleton-state (quote l_id) (lookup (quote l_identifier) l_s9244)))) (let ((l_s9251 (merge-state l_s9244 l_s9250))) (let ((l_s9252 (merge-state (or l_s9245 (empty-state)) l_s9250))) (merge-state (or l_s9252 (empty-state)) (singleton-state (quote l_kind) (d_token_kind #f #f #f (lookup (quote l_token) l_s9251)))))))))) (d_token_range #f #f #f (lookup (quote l_token) l_s9229))) (or l_s9230 (empty-state)))))))))))) (let ((l_t9612 (let ((l_t9613 (lookup (quote l_token) l_s9220))) (let ((l_p9614 l_p9217)) (if l_p9614 (merge-state l_p9614 (if l_d9218 (empty-state) l_t9613)) (if l_d9218 (empty-state) l_t9613)))))) (if l_l9219 (leave-collective l_l9219 l_t9612) l_t9612))))))

(define d_verify_operator (lambda (l_p9618 l_d9619 l_l9620 l_stream l_operator) (let ((l_s9617 (state (quote l_stream) l_stream (quote l_operator) l_operator))) (let ((l_s9621 (singleton-state (quote l_token) (d_next_token #f #f #f (lookup (quote l_stream) l_s9617))))) (let ((l_s9622 (merge-state l_s9617 l_s9621))) (let ((l_s9623 (let ((l_t9713 l_s9621)) (or l_p9618 (empty-state))))) (let ((l_s9628 (singleton-state (quote l_value) (d_token_value #f #f #f (lookup (quote l_token) l_s9622))))) (let ((l_s9629 (merge-state l_s9622 l_s9628))) (let ((l_s9630 (let ((l_t9711 l_s9628)) (or l_s9623 (empty-state))))) (let ((l_s9635 (singleton-state (quote l_kind) (d_token_kind #f #f #f (lookup (quote l_token) l_s9629))))) (let ((l_s9636 (merge-state l_s9629 l_s9635))) (let ((l_s9637 (let ((l_t9709 l_s9635)) (or l_s9630 (empty-state))))) (let ((l_s9642 (singleton-state (quote l_range) (d_token_range #f #f #f (lookup (quote l_token) l_s9636))))) (let ((l_s9643 (merge-state l_s9636 l_s9642))) (let ((l_s9644 (let ((l_t9707 l_s9642)) (or l_s9637 (empty-state))))) (if (equal? (lookup (quote l_kind) l_s9643) "operator") (if (d_not_equal (lookup (quote l_value) l_s9643) (lookup (quote l_operator) l_s9643)) (d_throw_with_range l_s9644 #t l_l9620 "Expected operator '$x' but found operator '$y'" (let ((l_s9663 (singleton-state (quote l_x) (lookup (quote l_operator) l_s9643)))) (let ((l_s9664 (merge-state l_s9643 l_s9663))) (let ((l_s9665 l_s9663)) (merge-state (or l_s9665 (empty-state)) (singleton-state (quote l_y) (lookup (quote l_value) l_s9664)))))) (lookup (quote l_range) l_s9643)) (let ((l_t9678 (let ((l_t9679 (empty-state))) (or l_s9644 (empty-state))))) (if l_l9620 (leave-collective l_l9620 l_t9678) l_t9678))) (d_throw_with_range l_s9644 #t l_l9620 "Expected operator '$op' but found $k '$v'" (let ((l_s9683 (singleton-state (quote l_op) (lookup (quote l_operator) l_s9643)))) (let ((l_s9684 (merge-state l_s9643 l_s9683))) (let ((l_s9685 l_s9683)) (let ((l_s9690 (singleton-state (quote l_v) (lookup (quote l_value) l_s9684)))) (let ((l_s9691 (merge-state l_s9684 l_s9690))) (let ((l_s9692 (merge-state (or l_s9685 (empty-state)) l_s9690))) (merge-state (or l_s9692 (empty-state)) (singleton-state (quote l_k) (lookup (quote l_kind) l_s9691))))))))) (lookup (quote l_range) l_s9643))))))))))))))))))

(define d_read_list (lambda (l_p9718 l_d9719 l_l9720 l_stream l_reader) (let ((l_s9717 (state (quote l_stream) l_stream (quote l_reader) l_reader))) (let ((l_s9721 (merge-state l_s9717 (let ((l_s9722 (singleton-state (quote l_items) (d_cons (d_apply #f #f #f (lookup (quote l_reader) l_s9717) (d_tuple (lookup (quote l_stream) l_s9717))) (d_empty_list))))) (let ((l_s9723 (merge-state l_s9717 l_s9722))) (let ((l_s9724 l_s9722)) (let ((l_s9737 (empty-state))) (let ((l_s9738 l_s9723)) (begin (while (equal? (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s9738))) #\,) (let ((l_s9739 (let ((l_s9746 (d_skip_token #f #f #f (lookup (quote l_stream) l_s9738)))) (let ((l_s9747 (merge-state l_s9738 l_s9746))) (let ((l_s9748 l_s9746)) (merge-state (or l_s9748 (empty-state)) (singleton-state (quote l_items) (d_cons (d_apply #f #f #f (lookup (quote l_reader) l_s9747) (d_tuple (lookup (quote l_stream) l_s9747))) (lookup (quote l_items) l_s9747))))))))) (begin (set! l_s9737 (merge-state l_s9737 l_s9739)) (set! l_s9738 (merge-state l_s9738 l_s9739))))) (merge-state (or l_s9724 (empty-state)) l_s9737)))))))))) (d_reverse l_p9718 l_d9719 l_l9720 (lookup (quote l_items) l_s9721))))))

(define d_read_list_literal (lambda (l_p9774 l_d9775 l_l9776 l_stream) (let ((l_s9773 (state (quote l_stream) l_stream))) (let ((l_s9777 (merge-state l_s9773 (let ((l_s9778 (singleton-state (quote l_open) (d_next_token #f #f #f (lookup (quote l_stream) l_s9773))))) (let ((l_s9779 (merge-state l_s9773 l_s9778))) (let ((l_s9780 l_s9778)) (let ((l_s9785 (singleton-state (quote l_items) (d_empty_list)))) (let ((l_s9786 (merge-state l_s9779 l_s9785))) (let ((l_s9787 (merge-state (or l_s9780 (empty-state)) l_s9785))) (let ((l_s9792 (if (equal? (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s9786))) #\]) (singleton-state (quote l_close) (d_next_token #f #f #f (lookup (quote l_stream) l_s9786))) (let ((l_s9805 (singleton-state (quote l_items) (d_cons (d_read_expression #f #f #f (lookup (quote l_stream) l_s9786)) (d_empty_list))))) (let ((l_s9806 (merge-state l_s9786 l_s9805))) (let ((l_s9807 l_s9805)) (let ((l_s9816 (let ((l_s9819 (empty-state))) (let ((l_s9820 l_s9806)) (begin (while (equal? (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s9820))) #\,) (let ((l_s9821 (let ((l_s9828 (d_skip_token #f #f #f (lookup (quote l_stream) l_s9820)))) (let ((l_s9829 (merge-state l_s9820 l_s9828))) (let ((l_s9830 l_s9828)) (merge-state (or l_s9830 (empty-state)) (singleton-state (quote l_items) (d_cons (d_read_expression #f #f #f (lookup (quote l_stream) l_s9829)) (lookup (quote l_items) l_s9829))))))))) (begin (set! l_s9819 (merge-state l_s9819 l_s9821)) (set! l_s9820 (merge-state l_s9820 l_s9821))))) l_s9819))))) (let ((l_s9817 (merge-state l_s9806 l_s9816))) (let ((l_s9818 (merge-state (or l_s9807 (empty-state)) l_s9816))) (merge-state (or l_s9818 (empty-state)) (singleton-state (quote l_close) (d_next_token #f #f #f (lookup (quote l_stream) l_s9817))))))))))))) (let ((l_s9793 (merge-state l_s9786 l_s9792))) (let ((l_s9794 (merge-state (or l_s9787 (empty-state)) l_s9792))) (let ((l_s9853 (singleton-state (quote l_range) (d_combine_token_ranges #f #f #f (lookup (quote l_open) l_s9793) (lookup (quote l_close) l_s9793))))) (let ((l_s9854 (merge-state l_s9793 l_s9853))) (let ((l_s9855 (merge-state (or l_s9794 (empty-state)) l_s9853))) (let ((l_s9862 (singleton-state (quote l_exp) (d_make_application #f #f #f "empty_list" (d_empty_list) (lookup (quote l_range) l_s9854))))) (let ((l_s9863 (merge-state l_s9854 l_s9862))) (let ((l_s9864 (merge-state (or l_s9855 (empty-state)) l_s9862))) (let ((l_s9873 (empty-state))) (let ((l_s9874 l_s9863)) (begin (while (d_not_equal (lookup (quote l_items) l_s9874) (d_empty_list)) (let ((l_s9875 (let ((l_s10137 (singleton-state (quote l_exp) (d_make_application #f #f #f "cons" (d_cons (d_first (lookup (quote l_items) l_s9874)) (d_cons (lookup (quote l_exp) l_s9874) (d_empty_list))) (lookup (quote l_range) l_s9874))))) (let ((l_s10138 (merge-state l_s9874 l_s10137))) (let ((l_s10139 l_s10137)) (merge-state (or l_s10139 (empty-state)) (singleton-state (quote l_items) (d_rest (lookup (quote l_items) l_s10138))))))))) (begin (set! l_s9873 (merge-state l_s9873 l_s9875)) (set! l_s9874 (merge-state l_s9874 l_s9875))))) (merge-state (or l_s9864 (empty-state)) l_s9873)))))))))))))))))))))) (let ((l_t10178 (let ((l_t10179 (lookup (quote l_exp) l_s9777))) (let ((l_p10180 l_p9774)) (if l_p10180 (merge-state l_p10180 (if l_d9775 (empty-state) l_t10179)) (if l_d9775 (empty-state) l_t10179)))))) (if l_l9776 (leave-collective l_l9776 l_t10178) l_t10178))))))

(define d_read_tuple (lambda (l_p10184 l_d10185 l_l10186 l_stream l_reader) (let ((l_s10183 (state (quote l_stream) l_stream (quote l_reader) l_reader))) (let ((l_s10187 (merge-state l_s10183 (singleton-state (quote l_open) (d_next_token #f #f #f (lookup (quote l_stream) l_s10183)))))) (if (equal? (d_token_value #f #f #f (lookup (quote l_open) l_s10187)) #\() (if (equal? (d_token_value #f #f #f (d_peek_token #f #f #f (lookup (quote l_stream) l_s10187))) #\)) (let ((l_s10204 (merge-state l_s10187 (singleton-state (quote l_close) (d_next_token #f #f #f (lookup (quote l_stream) l_s10187)))))) (let ((l_s10209 (singleton-state (quote l_value) (d_empty_list)))) (let ((l_s10210 (merge-state l_s10204 l_s10209))) (let ((l_s10211 (let ((l_t10223 l_s10209)) (let ((l_p10224 l_p10184)) (if l_p10224 (merge-state l_p10224 (if l_d10185 (empty-state) l_t10223)) (if l_d10185 (empty-state) l_t10223)))))) (let ((l_t10220 (let ((l_t10221 (singleton-state (quote l_range) (d_combine_token_ranges #f #f #f (lookup (quote l_open) l_s10210) (lookup (quote l_close) l_s10210))))) (let ((l_p10222 l_s10211)) (if l_p10222 (merge-state l_p10222 (if l_d10185 (empty-state) l_t10221)) (if l_d10185 (empty-state) l_t10221)))))) (if l_l10186 (leave-collective l_l10186 l_t10220) l_t10220)))))) (let ((l_s10225 (merge-state l_s10187 (let ((l_s10226 (singleton-state (quote l_items) (d_read_list #f #f #f (lookup (quote l_stream) l_s10187) (lookup (quote l_reader) l_s10187))))) (let ((l_s10227 (merge-state l_s10187 l_s10226))) (let ((l_s10228 l_s10226)) (merge-state (or l_s10228 (empty-state)) (singleton-state (quote l_next) (d_next_token #f #f #f (lookup (quote l_stream) l_s10227)))))))))) (if (equal? (d_token_value #f #f #f (lookup (quote l_next) l_s10225)) #\)) (let ((l_s10247 (singleton-state (quote l_value) (lookup (quote l_items) l_s10225)))) (let ((l_s10248 (merge-state l_s10225 l_s10247))) (let ((l_s10249 (let ((l_t10604 l_s10247)) (let ((l_p10605 l_p10184)) (if l_p10605 (merge-state l_p10605 (if l_d10185 (empty-state) l_t10604)) (if l_d10185 (empty-state) l_t10604)))))) (let ((l_t10258 (let ((l_t10259 (singleton-state (quote l_range) (d_combine_token_ranges #f #f #f (lookup (quote l_open) l_s10248) (lookup (quote l_next) l_s10248))))) (let ((l_p10260 l_s10249)) (if l_p10260 (merge-state l_p10260 (if l_d10185 (empty-state) l_t10259)) (if l_d10185 (empty-state) l_t10259)))))) (if l_l10186 (leave-collective l_l10186 l_t10258) l_t10258))))) (d_throw_with_range l_p10184 l_d10185 l_l10186 "Expected a ')' to close the tuple but found $kind '$n'" (let ((l_s10608 (singleton-state (quote l_n) (d_token_value #f #f #f (lookup (quote l_next) l_s10225))))) (let ((l_s10609 (merge-state l_s10225 l_s10608))) (let ((l_s10610 l_s10608)) (merge-state (or l_s10610 (empty-state)) (singleton-state (quote l_kind) (d_token_kind #f #f #f (lookup (quote l_next) l_s10609))))))) (d_combine_ranges #f #f #f (d_token_range #f #f #f (lookup (quote l_open) l_s10225)) (d_token_range #f #f #f (lookup (quote l_next) l_s10225))))))) (d_throw_with_range l_p10184 l_d10185 l_l10186 "Expected a '(' to open a tuple but found $kind '$next'" (let ((l_s10627 (singleton-state (quote l_next) (d_token_value #f #f #f (lookup (quote l_open) l_s10187))))) (let ((l_s10628 (merge-state l_s10187 l_s10627))) (let ((l_s10629 l_s10627)) (merge-state (or l_s10629 (empty-state)) (singleton-state (quote l_kind) (d_token_kind #f #f #f (lookup (quote l_open) l_s10628))))))) (d_token_range #f #f #f (lookup (quote l_open) l_s10187))))))))
